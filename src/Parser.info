-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.1.1 from Parser.y
-----------------------------------------------------------------------------

state 28 contains 3 shift/reduce conflicts.
state 36 contains 2 shift/reduce conflicts.
state 37 contains 3 reduce/reduce conflicts.

rule 86 is unused

terminal string is unused
terminal break is unused
terminal case is unused
terminal continue is unused
terminal default is unused
terminal do is unused
terminal enum is unused
terminal for is unused
terminal return is unused
terminal struct is unused
terminal switch is unused
terminal union is unused
terminal while is unused
terminal 'sizeof' is unused
terminal '#' is unused
terminal '##' is unused
terminal '...' is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_clang -> function_definition                (0)
	variable -> identifier                             (1)
	assign -> expr '=' expr                            (2)
	assign -> expr '*=' expr                           (3)
	assign -> expr '/=' expr                           (4)
	assign -> expr '%=' expr                           (5)
	assign -> expr '+=' expr                           (6)
	assign -> expr '-=' expr                           (7)
	assign -> expr '>>=' expr                          (8)
	assign -> expr '<<=' expr                          (9)
	assign -> expr '&=' expr                           (10)
	assign -> expr '^=' expr                           (11)
	assign -> expr '|=' expr                           (12)
	member -> expr '->' variable                       (13)
	member -> expr '.' variable                        (14)
	call -> expr '(' exprs ')'                         (15)
	exprs ->                                           (16)
	exprs -> expr                                      (17)
	exprs -> exprs ',' expr                            (18)
	index -> expr '[' expr ']'                         (19)
	unary -> '++' expr                                 (20)
	unary -> expr '++'                                 (21)
	unary -> '--' expr                                 (22)
	unary -> expr '--'                                 (23)
	unary -> '&' expr                                  (24)
	unary -> '*' expr                                  (25)
	unary -> '+' expr                                  (26)
	unary -> '-' expr                                  (27)
	unary -> '~' expr                                  (28)
	unary -> '!' expr                                  (29)
	unary -> sizeof expr                               (30)
	binary -> expr '+' expr                            (31)
	binary -> expr '*' expr                            (32)
	binary -> expr '-' expr                            (33)
	binary -> expr '/' expr                            (34)
	binary -> expr '%' expr                            (35)
	binary -> expr '<<' expr                           (36)
	binary -> expr '>>' expr                           (37)
	binary -> expr '<' expr                            (38)
	binary -> expr '>' expr                            (39)
	binary -> expr '>=' expr                           (40)
	binary -> expr '<=' expr                           (41)
	binary -> expr '==' expr                           (42)
	binary -> expr '!=' expr                           (43)
	binary -> expr '&&' expr                           (44)
	binary -> expr '||' expr                           (45)
	binary -> expr '^' expr                            (46)
	binary -> expr '&' expr                            (47)
	binary -> expr '|' expr                            (48)
	ternary -> expr '?' expr ':' expr                  (49)
	ternary -> expr '?' ':' expr                       (50)
	expr -> variable                                   (51)
	expr -> integer_const                              (52)
	expr -> float_const                                (53)
	expr -> char_const                                 (54)
	expr -> ternary                                    (55)
	expr -> binary                                     (56)
	expr -> unary                                      (57)
	expr -> assign                                     (58)
	expr -> member                                     (59)
	expr -> call                                       (60)
	expr -> index                                      (61)
	expr -> '(' expr ')'                               (62)
	function_definition -> decl_spec declarator block   (63)
	decl_spec -> storage_spec decl_spec                (64)
	decl_spec -> storage_spec                          (65)
	decl_spec -> type_spec decl_spec                   (66)
	decl_spec -> type_spec                             (67)
	decl_spec -> type_qual decl_spec                   (68)
	decl_spec -> type_qual                             (69)
	storage_spec -> auto                               (70)
	storage_spec -> register                           (71)
	storage_spec -> static                             (72)
	storage_spec -> extern                             (73)
	storage_spec -> typedef                            (74)
	type_spec -> void                                  (75)
	type_spec -> char                                  (76)
	type_spec -> short                                 (77)
	type_spec -> int                                   (78)
	type_spec -> long                                  (79)
	type_spec -> float                                 (80)
	type_spec -> double                                (81)
	type_spec -> signed                                (82)
	type_spec -> unsigned                              (83)
	type_qual -> const                                 (84)
	type_qual -> volatile                              (85)
	declarator -> pointer direct_decl                  (86)
	declarator -> direct_decl                          (87)
	type_qualifier_list -> type_qual                   (88)
	type_qualifier_list -> type_qualifier_list type_qual   (89)
	pointer -> '*'                                     (90)
	pointer -> '*' pointer                             (91)
	pointer -> '*' type_qualifier_list                 (92)
	pointer -> '*' type_qualifier_list pointer         (93)
	direct_decl -> ident_decl                          (94)
	direct_decl -> declarator type_modifier            (95)
	direct_decl -> declarator                          (96)
	ident_decl -> variable type_modifier               (97)
	type_modifier -> array_modifier                    (98)
	type_modifier -> func_modifier                     (99)
	array_modifier -> '[' expr ']' type_modifier       (100)
	array_modifier -> '[' expr ']'                     (101)
	func_modifier -> '(' ')'                           (102)
	stmt -> if_stmt                                    (103)
	stmt -> block                                      (104)
	stmt -> expr                                       (105)
	block -> '{' stmts '}'                             (106)
	stmts -> stmts ';' stmt                            (107)
	stmts -> stmts ';'                                 (108)
	stmts -> stmt                                      (109)
	stmts ->                                           (110)
	if_stmt -> if '(' expr ')' stmt                    (111)
	if_stmt -> if '(' expr ')' stmt else stmt          (112)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	identifier     { L.RangedToken (L.Identifier _) _ }
	string         { L.RangedToken (L.StringLit _) _ }
	integer_const  { L.RangedToken (L.IntConst _) _ }
	float_const    { L.RangedToken (L.FloatConst _) _ }
	char_const     { L.RangedToken (L.CharConst _) _ }
	if             { L.RangedToken L.If _ }
	else           { L.RangedToken L.Else _ }
	auto           { L.RangedToken L.Auto _ }
	break          { L.RangedToken L.Break _ }
	case           { L.RangedToken L.Case _ }
	char           { L.RangedToken L.Char _ }
	const          { L.RangedToken L.Const _ }
	continue       { L.RangedToken L.Continue _ }
	default        { L.RangedToken L.Default _ }
	do             { L.RangedToken L.Do _ }
	double         { L.RangedToken L.Double _ }
	enum           { L.RangedToken L.Enum _ }
	extern         { L.RangedToken L.Extern _ }
	float          { L.RangedToken L.Float _ }
	for            { L.RangedToken L.For _ }
	int            { L.RangedToken L.Int _ }
	long           { L.RangedToken L.Long _ }
	register       { L.RangedToken L.Register _ }
	return         { L.RangedToken L.Return _ }
	short          { L.RangedToken L.Short _ }
	signed         { L.RangedToken L.Signed _ }
	sizeof         { L.RangedToken L.Sizeof _ }
	static         { L.RangedToken L.Static _ }
	struct         { L.RangedToken L.Struct _ }
	switch         { L.RangedToken L.Switch _ }
	typedef        { L.RangedToken L.Typedef _ }
	union          { L.RangedToken L.Union _ }
	unsigned       { L.RangedToken L.Unsigned _ }
	void           { L.RangedToken L.Void _ }
	volatile       { L.RangedToken L.Volatile _ }
	while          { L.RangedToken L.While _ }
	'+'            { L.RangedToken L.Plus _ }
	'-'            { L.RangedToken L.Minus _ }
	'*'            { L.RangedToken L.Times _ }
	'/'            { L.RangedToken L.Div _ }
	'++'           { L.RangedToken L.Inc _ }
	'--'           { L.RangedToken L.Dec _ }
	'&&'           { L.RangedToken L.LAnd _ }
	'||'           { L.RangedToken L.LOr _ }
	'sizeof'       { L.RangedToken L.SizeOfOp _ }
	'%'            { L.RangedToken L.Mod _ }
	'='            { L.RangedToken L.AEq _ }
	'=='           { L.RangedToken L.Eq _ }
	'!='           { L.RangedToken L.NotEq _ }
	'!'            { L.RangedToken L.Bang _ }
	'<'            { L.RangedToken L.Le _ }
	'<='           { L.RangedToken L.LEq _ }
	'>'            { L.RangedToken L.Gr _ }
	'>='           { L.RangedToken L.GEq _ }
	'~'            { L.RangedToken L.Complement _ }
	'&'            { L.RangedToken L.Amp _ }
	'|'            { L.RangedToken L.Or _ }
	'('            { L.RangedToken L.LParen _ }
	')'            { L.RangedToken L.RParen _ }
	'['            { L.RangedToken L.LBracket _ }
	']'            { L.RangedToken L.RBracket _ }
	'.'            { L.RangedToken L.Dot _ }
	':'            { L.RangedToken L.Colon _ }
	'->'           { L.RangedToken L.Arrow _ }
	'<<'           { L.RangedToken L.LShift _ }
	'>>'           { L.RangedToken L.RShift _ }
	'^'            { L.RangedToken L.Xor _ }
	'?'            { L.RangedToken L.QMark _ }
	'*='           { L.RangedToken L.TimesEq _ }
	'/='           { L.RangedToken L.DivEq _ }
	'%='           { L.RangedToken L.ModEq _ }
	'+='           { L.RangedToken L.PlusEq _ }
	'-='           { L.RangedToken L.MinusEq _ }
	'<<='          { L.RangedToken L.LShiftEq _ }
	'>>='          { L.RangedToken L.RShiftEq _ }
	'&='           { L.RangedToken L.AndEq _ }
	'|='           { L.RangedToken L.OrEq _ }
	'^='           { L.RangedToken L.XorEq _ }
	','            { L.RangedToken L.Comma _ }
	'#'            { L.RangedToken L.Pnd _ }
	'##'           { L.RangedToken L.DblPnd _ }
	'{'            { L.RangedToken L.LBrace _ }
	'}'            { L.RangedToken L.RBrace _ }
	';'            { L.RangedToken L.SemiColon _ }
	'...'          { L.RangedToken L.Ellipsis _ }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_clang    rule  0
	variable        rule  1
	assign          rules 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12
	member          rules 13, 14
	call            rule  15
	exprs           rules 16, 17, 18
	index           rule  19
	unary           rules 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30
	binary          rules 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48
	ternary         rules 49, 50
	expr            rules 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62
	function_definition rule  63
	decl_spec       rules 64, 65, 66, 67, 68, 69
	storage_spec    rules 70, 71, 72, 73, 74
	type_spec       rules 75, 76, 77, 78, 79, 80, 81, 82, 83
	type_qual       rules 84, 85
	declarator      rules 86, 87
	type_qualifier_list rules 88, 89
	pointer         rules 90, 91, 92, 93
	direct_decl     rules 94, 95, 96
	ident_decl      rule  97
	type_modifier   rules 98, 99
	array_modifier  rules 100, 101
	func_modifier   rule  102
	stmt            rules 103, 104, 105
	block           rule  106
	stmts           rules 107, 108, 109, 110
	if_stmt         rules 111, 112

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_clang -> . function_definition               (rule 0)

	auto           shift, and enter state 8
	char           shift, and enter state 9
	const          shift, and enter state 10
	double         shift, and enter state 11
	extern         shift, and enter state 12
	float          shift, and enter state 13
	int            shift, and enter state 14
	long           shift, and enter state 15
	register       shift, and enter state 16
	short          shift, and enter state 17
	signed         shift, and enter state 18
	static         shift, and enter state 19
	typedef        shift, and enter state 20
	unsigned       shift, and enter state 21
	void           shift, and enter state 22
	volatile       shift, and enter state 23

	function_definitiongoto state 3
	decl_spec      goto state 4
	storage_spec   goto state 5
	type_spec      goto state 6
	type_qual      goto state 7

State 1

	variable -> . identifier                            (rule 1)

	identifier     shift, and enter state 2


State 2

	variable -> identifier .                            (rule 1)

	else           reduce using rule 1
	'+'            reduce using rule 1
	'-'            reduce using rule 1
	'*'            reduce using rule 1
	'/'            reduce using rule 1
	'++'           reduce using rule 1
	'--'           reduce using rule 1
	'&&'           reduce using rule 1
	'||'           reduce using rule 1
	'%'            reduce using rule 1
	'='            reduce using rule 1
	'=='           reduce using rule 1
	'!='           reduce using rule 1
	'<'            reduce using rule 1
	'<='           reduce using rule 1
	'>'            reduce using rule 1
	'>='           reduce using rule 1
	'&'            reduce using rule 1
	'|'            reduce using rule 1
	'('            reduce using rule 1
	')'            reduce using rule 1
	'['            reduce using rule 1
	']'            reduce using rule 1
	'.'            reduce using rule 1
	':'            reduce using rule 1
	'->'           reduce using rule 1
	'<<'           reduce using rule 1
	'>>'           reduce using rule 1
	'^'            reduce using rule 1
	'?'            reduce using rule 1
	'*='           reduce using rule 1
	'/='           reduce using rule 1
	'%='           reduce using rule 1
	'+='           reduce using rule 1
	'-='           reduce using rule 1
	'<<='          reduce using rule 1
	'>>='          reduce using rule 1
	'&='           reduce using rule 1
	'|='           reduce using rule 1
	'^='           reduce using rule 1
	','            reduce using rule 1
	'}'            reduce using rule 1
	';'            reduce using rule 1


State 3

	%start_clang -> function_definition .               (rule 0)

	%eof           accept


State 4

	function_definition -> decl_spec . declarator block    (rule 63)

	identifier     shift, and enter state 2
	'*'            shift, and enter state 32

	variable       goto state 27
	declarator     goto state 28
	pointer        goto state 29
	direct_decl    goto state 30
	ident_decl     goto state 31

State 5

	decl_spec -> storage_spec . decl_spec               (rule 64)
	decl_spec -> storage_spec .                         (rule 65)

	identifier     reduce using rule 65
	auto           shift, and enter state 8
	char           shift, and enter state 9
	const          shift, and enter state 10
	double         shift, and enter state 11
	extern         shift, and enter state 12
	float          shift, and enter state 13
	int            shift, and enter state 14
	long           shift, and enter state 15
	register       shift, and enter state 16
	short          shift, and enter state 17
	signed         shift, and enter state 18
	static         shift, and enter state 19
	typedef        shift, and enter state 20
	unsigned       shift, and enter state 21
	void           shift, and enter state 22
	volatile       shift, and enter state 23
	'*'            reduce using rule 65

	decl_spec      goto state 26
	storage_spec   goto state 5
	type_spec      goto state 6
	type_qual      goto state 7

State 6

	decl_spec -> type_spec . decl_spec                  (rule 66)
	decl_spec -> type_spec .                            (rule 67)

	identifier     reduce using rule 67
	auto           shift, and enter state 8
	char           shift, and enter state 9
	const          shift, and enter state 10
	double         shift, and enter state 11
	extern         shift, and enter state 12
	float          shift, and enter state 13
	int            shift, and enter state 14
	long           shift, and enter state 15
	register       shift, and enter state 16
	short          shift, and enter state 17
	signed         shift, and enter state 18
	static         shift, and enter state 19
	typedef        shift, and enter state 20
	unsigned       shift, and enter state 21
	void           shift, and enter state 22
	volatile       shift, and enter state 23
	'*'            reduce using rule 67

	decl_spec      goto state 25
	storage_spec   goto state 5
	type_spec      goto state 6
	type_qual      goto state 7

State 7

	decl_spec -> type_qual . decl_spec                  (rule 68)
	decl_spec -> type_qual .                            (rule 69)

	identifier     reduce using rule 69
	auto           shift, and enter state 8
	char           shift, and enter state 9
	const          shift, and enter state 10
	double         shift, and enter state 11
	extern         shift, and enter state 12
	float          shift, and enter state 13
	int            shift, and enter state 14
	long           shift, and enter state 15
	register       shift, and enter state 16
	short          shift, and enter state 17
	signed         shift, and enter state 18
	static         shift, and enter state 19
	typedef        shift, and enter state 20
	unsigned       shift, and enter state 21
	void           shift, and enter state 22
	volatile       shift, and enter state 23
	'*'            reduce using rule 69

	decl_spec      goto state 24
	storage_spec   goto state 5
	type_spec      goto state 6
	type_qual      goto state 7

State 8

	storage_spec -> auto .                              (rule 70)

	identifier     reduce using rule 70
	auto           reduce using rule 70
	char           reduce using rule 70
	const          reduce using rule 70
	double         reduce using rule 70
	extern         reduce using rule 70
	float          reduce using rule 70
	int            reduce using rule 70
	long           reduce using rule 70
	register       reduce using rule 70
	short          reduce using rule 70
	signed         reduce using rule 70
	static         reduce using rule 70
	typedef        reduce using rule 70
	unsigned       reduce using rule 70
	void           reduce using rule 70
	volatile       reduce using rule 70
	'*'            reduce using rule 70


State 9

	type_spec -> char .                                 (rule 76)

	identifier     reduce using rule 76
	auto           reduce using rule 76
	char           reduce using rule 76
	const          reduce using rule 76
	double         reduce using rule 76
	extern         reduce using rule 76
	float          reduce using rule 76
	int            reduce using rule 76
	long           reduce using rule 76
	register       reduce using rule 76
	short          reduce using rule 76
	signed         reduce using rule 76
	static         reduce using rule 76
	typedef        reduce using rule 76
	unsigned       reduce using rule 76
	void           reduce using rule 76
	volatile       reduce using rule 76
	'*'            reduce using rule 76


State 10

	type_qual -> const .                                (rule 84)

	identifier     reduce using rule 84
	auto           reduce using rule 84
	char           reduce using rule 84
	const          reduce using rule 84
	double         reduce using rule 84
	extern         reduce using rule 84
	float          reduce using rule 84
	int            reduce using rule 84
	long           reduce using rule 84
	register       reduce using rule 84
	short          reduce using rule 84
	signed         reduce using rule 84
	static         reduce using rule 84
	typedef        reduce using rule 84
	unsigned       reduce using rule 84
	void           reduce using rule 84
	volatile       reduce using rule 84
	'*'            reduce using rule 84


State 11

	type_spec -> double .                               (rule 81)

	identifier     reduce using rule 81
	auto           reduce using rule 81
	char           reduce using rule 81
	const          reduce using rule 81
	double         reduce using rule 81
	extern         reduce using rule 81
	float          reduce using rule 81
	int            reduce using rule 81
	long           reduce using rule 81
	register       reduce using rule 81
	short          reduce using rule 81
	signed         reduce using rule 81
	static         reduce using rule 81
	typedef        reduce using rule 81
	unsigned       reduce using rule 81
	void           reduce using rule 81
	volatile       reduce using rule 81
	'*'            reduce using rule 81


State 12

	storage_spec -> extern .                            (rule 73)

	identifier     reduce using rule 73
	auto           reduce using rule 73
	char           reduce using rule 73
	const          reduce using rule 73
	double         reduce using rule 73
	extern         reduce using rule 73
	float          reduce using rule 73
	int            reduce using rule 73
	long           reduce using rule 73
	register       reduce using rule 73
	short          reduce using rule 73
	signed         reduce using rule 73
	static         reduce using rule 73
	typedef        reduce using rule 73
	unsigned       reduce using rule 73
	void           reduce using rule 73
	volatile       reduce using rule 73
	'*'            reduce using rule 73


State 13

	type_spec -> float .                                (rule 80)

	identifier     reduce using rule 80
	auto           reduce using rule 80
	char           reduce using rule 80
	const          reduce using rule 80
	double         reduce using rule 80
	extern         reduce using rule 80
	float          reduce using rule 80
	int            reduce using rule 80
	long           reduce using rule 80
	register       reduce using rule 80
	short          reduce using rule 80
	signed         reduce using rule 80
	static         reduce using rule 80
	typedef        reduce using rule 80
	unsigned       reduce using rule 80
	void           reduce using rule 80
	volatile       reduce using rule 80
	'*'            reduce using rule 80


State 14

	type_spec -> int .                                  (rule 78)

	identifier     reduce using rule 78
	auto           reduce using rule 78
	char           reduce using rule 78
	const          reduce using rule 78
	double         reduce using rule 78
	extern         reduce using rule 78
	float          reduce using rule 78
	int            reduce using rule 78
	long           reduce using rule 78
	register       reduce using rule 78
	short          reduce using rule 78
	signed         reduce using rule 78
	static         reduce using rule 78
	typedef        reduce using rule 78
	unsigned       reduce using rule 78
	void           reduce using rule 78
	volatile       reduce using rule 78
	'*'            reduce using rule 78


State 15

	type_spec -> long .                                 (rule 79)

	identifier     reduce using rule 79
	auto           reduce using rule 79
	char           reduce using rule 79
	const          reduce using rule 79
	double         reduce using rule 79
	extern         reduce using rule 79
	float          reduce using rule 79
	int            reduce using rule 79
	long           reduce using rule 79
	register       reduce using rule 79
	short          reduce using rule 79
	signed         reduce using rule 79
	static         reduce using rule 79
	typedef        reduce using rule 79
	unsigned       reduce using rule 79
	void           reduce using rule 79
	volatile       reduce using rule 79
	'*'            reduce using rule 79


State 16

	storage_spec -> register .                          (rule 71)

	identifier     reduce using rule 71
	auto           reduce using rule 71
	char           reduce using rule 71
	const          reduce using rule 71
	double         reduce using rule 71
	extern         reduce using rule 71
	float          reduce using rule 71
	int            reduce using rule 71
	long           reduce using rule 71
	register       reduce using rule 71
	short          reduce using rule 71
	signed         reduce using rule 71
	static         reduce using rule 71
	typedef        reduce using rule 71
	unsigned       reduce using rule 71
	void           reduce using rule 71
	volatile       reduce using rule 71
	'*'            reduce using rule 71


State 17

	type_spec -> short .                                (rule 77)

	identifier     reduce using rule 77
	auto           reduce using rule 77
	char           reduce using rule 77
	const          reduce using rule 77
	double         reduce using rule 77
	extern         reduce using rule 77
	float          reduce using rule 77
	int            reduce using rule 77
	long           reduce using rule 77
	register       reduce using rule 77
	short          reduce using rule 77
	signed         reduce using rule 77
	static         reduce using rule 77
	typedef        reduce using rule 77
	unsigned       reduce using rule 77
	void           reduce using rule 77
	volatile       reduce using rule 77
	'*'            reduce using rule 77


State 18

	type_spec -> signed .                               (rule 82)

	identifier     reduce using rule 82
	auto           reduce using rule 82
	char           reduce using rule 82
	const          reduce using rule 82
	double         reduce using rule 82
	extern         reduce using rule 82
	float          reduce using rule 82
	int            reduce using rule 82
	long           reduce using rule 82
	register       reduce using rule 82
	short          reduce using rule 82
	signed         reduce using rule 82
	static         reduce using rule 82
	typedef        reduce using rule 82
	unsigned       reduce using rule 82
	void           reduce using rule 82
	volatile       reduce using rule 82
	'*'            reduce using rule 82


State 19

	storage_spec -> static .                            (rule 72)

	identifier     reduce using rule 72
	auto           reduce using rule 72
	char           reduce using rule 72
	const          reduce using rule 72
	double         reduce using rule 72
	extern         reduce using rule 72
	float          reduce using rule 72
	int            reduce using rule 72
	long           reduce using rule 72
	register       reduce using rule 72
	short          reduce using rule 72
	signed         reduce using rule 72
	static         reduce using rule 72
	typedef        reduce using rule 72
	unsigned       reduce using rule 72
	void           reduce using rule 72
	volatile       reduce using rule 72
	'*'            reduce using rule 72


State 20

	storage_spec -> typedef .                           (rule 74)

	identifier     reduce using rule 74
	auto           reduce using rule 74
	char           reduce using rule 74
	const          reduce using rule 74
	double         reduce using rule 74
	extern         reduce using rule 74
	float          reduce using rule 74
	int            reduce using rule 74
	long           reduce using rule 74
	register       reduce using rule 74
	short          reduce using rule 74
	signed         reduce using rule 74
	static         reduce using rule 74
	typedef        reduce using rule 74
	unsigned       reduce using rule 74
	void           reduce using rule 74
	volatile       reduce using rule 74
	'*'            reduce using rule 74


State 21

	type_spec -> unsigned .                             (rule 83)

	identifier     reduce using rule 83
	auto           reduce using rule 83
	char           reduce using rule 83
	const          reduce using rule 83
	double         reduce using rule 83
	extern         reduce using rule 83
	float          reduce using rule 83
	int            reduce using rule 83
	long           reduce using rule 83
	register       reduce using rule 83
	short          reduce using rule 83
	signed         reduce using rule 83
	static         reduce using rule 83
	typedef        reduce using rule 83
	unsigned       reduce using rule 83
	void           reduce using rule 83
	volatile       reduce using rule 83
	'*'            reduce using rule 83


State 22

	type_spec -> void .                                 (rule 75)

	identifier     reduce using rule 75
	auto           reduce using rule 75
	char           reduce using rule 75
	const          reduce using rule 75
	double         reduce using rule 75
	extern         reduce using rule 75
	float          reduce using rule 75
	int            reduce using rule 75
	long           reduce using rule 75
	register       reduce using rule 75
	short          reduce using rule 75
	signed         reduce using rule 75
	static         reduce using rule 75
	typedef        reduce using rule 75
	unsigned       reduce using rule 75
	void           reduce using rule 75
	volatile       reduce using rule 75
	'*'            reduce using rule 75


State 23

	type_qual -> volatile .                             (rule 85)

	identifier     reduce using rule 85
	auto           reduce using rule 85
	char           reduce using rule 85
	const          reduce using rule 85
	double         reduce using rule 85
	extern         reduce using rule 85
	float          reduce using rule 85
	int            reduce using rule 85
	long           reduce using rule 85
	register       reduce using rule 85
	short          reduce using rule 85
	signed         reduce using rule 85
	static         reduce using rule 85
	typedef        reduce using rule 85
	unsigned       reduce using rule 85
	void           reduce using rule 85
	volatile       reduce using rule 85
	'*'            reduce using rule 85


State 24

	decl_spec -> type_qual decl_spec .                  (rule 68)

	identifier     reduce using rule 68
	'*'            reduce using rule 68


State 25

	decl_spec -> type_spec decl_spec .                  (rule 66)

	identifier     reduce using rule 66
	'*'            reduce using rule 66


State 26

	decl_spec -> storage_spec decl_spec .               (rule 64)

	identifier     reduce using rule 64
	'*'            reduce using rule 64


State 27

	ident_decl -> variable . type_modifier              (rule 97)

	'('            shift, and enter state 42
	'['            shift, and enter state 43

	type_modifier  goto state 45
	array_modifier goto state 39
	func_modifier  goto state 40

State 28

	function_definition -> decl_spec declarator . block    (rule 63)
	direct_decl -> declarator . type_modifier           (rule 95)
	direct_decl -> declarator .                         (rule 96)

	'('            shift, and enter state 42
			(reduce using rule 96)

	'['            shift, and enter state 43
			(reduce using rule 96)

	'{'            shift, and enter state 44
			(reduce using rule 96)


	type_modifier  goto state 38
	array_modifier goto state 39
	func_modifier  goto state 40
	block          goto state 41

State 29

	declarator -> pointer . direct_decl                 (rule 86)

	identifier     shift, and enter state 2
	'*'            shift, and enter state 32

	variable       goto state 27
	declarator     goto state 36
	pointer        goto state 29
	direct_decl    goto state 37
	ident_decl     goto state 31

State 30

	declarator -> direct_decl .                         (rule 87)

	'('            reduce using rule 87
	'['            reduce using rule 87
	'{'            reduce using rule 87


State 31

	direct_decl -> ident_decl .                         (rule 94)

	'('            reduce using rule 94
	'['            reduce using rule 94
	'{'            reduce using rule 94


State 32

	pointer -> '*' .                                    (rule 90)
	pointer -> '*' . pointer                            (rule 91)
	pointer -> '*' . type_qualifier_list                (rule 92)
	pointer -> '*' . type_qualifier_list pointer        (rule 93)

	identifier     reduce using rule 90
	const          shift, and enter state 10
	volatile       shift, and enter state 23
	'*'            reduce using rule 90

	type_qual      goto state 33
	type_qualifier_listgoto state 34
	pointer        goto state 35

State 33

	type_qualifier_list -> type_qual .                  (rule 88)

	identifier     reduce using rule 88
	const          reduce using rule 88
	volatile       reduce using rule 88
	'*'            reduce using rule 88


State 34

	type_qualifier_list -> type_qualifier_list . type_qual    (rule 89)
	pointer -> '*' type_qualifier_list .                (rule 92)
	pointer -> '*' type_qualifier_list . pointer        (rule 93)

	identifier     reduce using rule 92
	const          shift, and enter state 10
	volatile       shift, and enter state 23
	'*'            reduce using rule 92

	type_qual      goto state 75
	pointer        goto state 76

State 35

	pointer -> '*' pointer .                            (rule 91)

	identifier     reduce using rule 91
	'*'            reduce using rule 91


State 36

	direct_decl -> declarator . type_modifier           (rule 95)
	direct_decl -> declarator .                         (rule 96)

	'('            shift, and enter state 42
			(reduce using rule 96)

	'['            shift, and enter state 43
			(reduce using rule 96)

	'{'            reduce using rule 96

	type_modifier  goto state 38
	array_modifier goto state 39
	func_modifier  goto state 40

State 37

	declarator -> pointer direct_decl .                 (rule 86)
	declarator -> direct_decl .                         (rule 87)

	'('            reduce using rule 87
			(reduce using rule 86)

	'['            reduce using rule 87
			(reduce using rule 86)

	'{'            reduce using rule 87
			(reduce using rule 86)



State 38

	direct_decl -> declarator type_modifier .           (rule 95)

	'('            reduce using rule 95
	'['            reduce using rule 95
	'{'            reduce using rule 95


State 39

	type_modifier -> array_modifier .                   (rule 98)

	'('            reduce using rule 98
	'['            reduce using rule 98
	'{'            reduce using rule 98


State 40

	type_modifier -> func_modifier .                    (rule 99)

	'('            reduce using rule 99
	'['            reduce using rule 99
	'{'            reduce using rule 99


State 41

	function_definition -> decl_spec declarator block .    (rule 63)

	%eof           reduce using rule 63


State 42

	func_modifier -> '(' . ')'                          (rule 102)

	')'            shift, and enter state 74


State 43

	array_modifier -> '[' . expr ']' type_modifier      (rule 100)
	array_modifier -> '[' . expr ']'                    (rule 101)

	identifier     shift, and enter state 2
	integer_const  shift, and enter state 59
	float_const    shift, and enter state 60
	char_const     shift, and enter state 61
	sizeof         shift, and enter state 63
	'+'            shift, and enter state 64
	'-'            shift, and enter state 65
	'*'            shift, and enter state 66
	'++'           shift, and enter state 67
	'--'           shift, and enter state 68
	'!'            shift, and enter state 69
	'~'            shift, and enter state 70
	'&'            shift, and enter state 71
	'('            shift, and enter state 72

	variable       goto state 46
	assign         goto state 47
	member         goto state 48
	call           goto state 49
	index          goto state 50
	unary          goto state 51
	binary         goto state 52
	ternary        goto state 53
	expr           goto state 73

State 44

	block -> '{' . stmts '}'                            (rule 106)

	identifier     shift, and enter state 2
	integer_const  shift, and enter state 59
	float_const    shift, and enter state 60
	char_const     shift, and enter state 61
	if             shift, and enter state 62
	sizeof         shift, and enter state 63
	'+'            shift, and enter state 64
	'-'            shift, and enter state 65
	'*'            shift, and enter state 66
	'++'           shift, and enter state 67
	'--'           shift, and enter state 68
	'!'            shift, and enter state 69
	'~'            shift, and enter state 70
	'&'            shift, and enter state 71
	'('            shift, and enter state 72
	'{'            shift, and enter state 44
	'}'            reduce using rule 110
	';'            reduce using rule 110

	variable       goto state 46
	assign         goto state 47
	member         goto state 48
	call           goto state 49
	index          goto state 50
	unary          goto state 51
	binary         goto state 52
	ternary        goto state 53
	expr           goto state 54
	stmt           goto state 55
	block          goto state 56
	stmts          goto state 57
	if_stmt        goto state 58

State 45

	ident_decl -> variable type_modifier .              (rule 97)

	'('            reduce using rule 97
	'['            reduce using rule 97
	'{'            reduce using rule 97


State 46

	expr -> variable .                                  (rule 51)

	else           reduce using rule 51
	'+'            reduce using rule 51
	'-'            reduce using rule 51
	'*'            reduce using rule 51
	'/'            reduce using rule 51
	'++'           reduce using rule 51
	'--'           reduce using rule 51
	'&&'           reduce using rule 51
	'||'           reduce using rule 51
	'%'            reduce using rule 51
	'='            reduce using rule 51
	'=='           reduce using rule 51
	'!='           reduce using rule 51
	'<'            reduce using rule 51
	'<='           reduce using rule 51
	'>'            reduce using rule 51
	'>='           reduce using rule 51
	'&'            reduce using rule 51
	'|'            reduce using rule 51
	'('            reduce using rule 51
	')'            reduce using rule 51
	'['            reduce using rule 51
	']'            reduce using rule 51
	'.'            reduce using rule 51
	':'            reduce using rule 51
	'->'           reduce using rule 51
	'<<'           reduce using rule 51
	'>>'           reduce using rule 51
	'^'            reduce using rule 51
	'?'            reduce using rule 51
	'*='           reduce using rule 51
	'/='           reduce using rule 51
	'%='           reduce using rule 51
	'+='           reduce using rule 51
	'-='           reduce using rule 51
	'<<='          reduce using rule 51
	'>>='          reduce using rule 51
	'&='           reduce using rule 51
	'|='           reduce using rule 51
	'^='           reduce using rule 51
	','            reduce using rule 51
	'}'            reduce using rule 51
	';'            reduce using rule 51


State 47

	expr -> assign .                                    (rule 58)

	else           reduce using rule 58
	'+'            reduce using rule 58
	'-'            reduce using rule 58
	'*'            reduce using rule 58
	'/'            reduce using rule 58
	'++'           reduce using rule 58
	'--'           reduce using rule 58
	'&&'           reduce using rule 58
	'||'           reduce using rule 58
	'%'            reduce using rule 58
	'='            reduce using rule 58
	'=='           reduce using rule 58
	'!='           reduce using rule 58
	'<'            reduce using rule 58
	'<='           reduce using rule 58
	'>'            reduce using rule 58
	'>='           reduce using rule 58
	'&'            reduce using rule 58
	'|'            reduce using rule 58
	'('            reduce using rule 58
	')'            reduce using rule 58
	'['            reduce using rule 58
	']'            reduce using rule 58
	'.'            reduce using rule 58
	':'            reduce using rule 58
	'->'           reduce using rule 58
	'<<'           reduce using rule 58
	'>>'           reduce using rule 58
	'^'            reduce using rule 58
	'?'            reduce using rule 58
	'*='           reduce using rule 58
	'/='           reduce using rule 58
	'%='           reduce using rule 58
	'+='           reduce using rule 58
	'-='           reduce using rule 58
	'<<='          reduce using rule 58
	'>>='          reduce using rule 58
	'&='           reduce using rule 58
	'|='           reduce using rule 58
	'^='           reduce using rule 58
	','            reduce using rule 58
	'}'            reduce using rule 58
	';'            reduce using rule 58


State 48

	expr -> member .                                    (rule 59)

	else           reduce using rule 59
	'+'            reduce using rule 59
	'-'            reduce using rule 59
	'*'            reduce using rule 59
	'/'            reduce using rule 59
	'++'           reduce using rule 59
	'--'           reduce using rule 59
	'&&'           reduce using rule 59
	'||'           reduce using rule 59
	'%'            reduce using rule 59
	'='            reduce using rule 59
	'=='           reduce using rule 59
	'!='           reduce using rule 59
	'<'            reduce using rule 59
	'<='           reduce using rule 59
	'>'            reduce using rule 59
	'>='           reduce using rule 59
	'&'            reduce using rule 59
	'|'            reduce using rule 59
	'('            reduce using rule 59
	')'            reduce using rule 59
	'['            reduce using rule 59
	']'            reduce using rule 59
	'.'            reduce using rule 59
	':'            reduce using rule 59
	'->'           reduce using rule 59
	'<<'           reduce using rule 59
	'>>'           reduce using rule 59
	'^'            reduce using rule 59
	'?'            reduce using rule 59
	'*='           reduce using rule 59
	'/='           reduce using rule 59
	'%='           reduce using rule 59
	'+='           reduce using rule 59
	'-='           reduce using rule 59
	'<<='          reduce using rule 59
	'>>='          reduce using rule 59
	'&='           reduce using rule 59
	'|='           reduce using rule 59
	'^='           reduce using rule 59
	','            reduce using rule 59
	'}'            reduce using rule 59
	';'            reduce using rule 59


State 49

	expr -> call .                                      (rule 60)

	else           reduce using rule 60
	'+'            reduce using rule 60
	'-'            reduce using rule 60
	'*'            reduce using rule 60
	'/'            reduce using rule 60
	'++'           reduce using rule 60
	'--'           reduce using rule 60
	'&&'           reduce using rule 60
	'||'           reduce using rule 60
	'%'            reduce using rule 60
	'='            reduce using rule 60
	'=='           reduce using rule 60
	'!='           reduce using rule 60
	'<'            reduce using rule 60
	'<='           reduce using rule 60
	'>'            reduce using rule 60
	'>='           reduce using rule 60
	'&'            reduce using rule 60
	'|'            reduce using rule 60
	'('            reduce using rule 60
	')'            reduce using rule 60
	'['            reduce using rule 60
	']'            reduce using rule 60
	'.'            reduce using rule 60
	':'            reduce using rule 60
	'->'           reduce using rule 60
	'<<'           reduce using rule 60
	'>>'           reduce using rule 60
	'^'            reduce using rule 60
	'?'            reduce using rule 60
	'*='           reduce using rule 60
	'/='           reduce using rule 60
	'%='           reduce using rule 60
	'+='           reduce using rule 60
	'-='           reduce using rule 60
	'<<='          reduce using rule 60
	'>>='          reduce using rule 60
	'&='           reduce using rule 60
	'|='           reduce using rule 60
	'^='           reduce using rule 60
	','            reduce using rule 60
	'}'            reduce using rule 60
	';'            reduce using rule 60


State 50

	expr -> index .                                     (rule 61)

	else           reduce using rule 61
	'+'            reduce using rule 61
	'-'            reduce using rule 61
	'*'            reduce using rule 61
	'/'            reduce using rule 61
	'++'           reduce using rule 61
	'--'           reduce using rule 61
	'&&'           reduce using rule 61
	'||'           reduce using rule 61
	'%'            reduce using rule 61
	'='            reduce using rule 61
	'=='           reduce using rule 61
	'!='           reduce using rule 61
	'<'            reduce using rule 61
	'<='           reduce using rule 61
	'>'            reduce using rule 61
	'>='           reduce using rule 61
	'&'            reduce using rule 61
	'|'            reduce using rule 61
	'('            reduce using rule 61
	')'            reduce using rule 61
	'['            reduce using rule 61
	']'            reduce using rule 61
	'.'            reduce using rule 61
	':'            reduce using rule 61
	'->'           reduce using rule 61
	'<<'           reduce using rule 61
	'>>'           reduce using rule 61
	'^'            reduce using rule 61
	'?'            reduce using rule 61
	'*='           reduce using rule 61
	'/='           reduce using rule 61
	'%='           reduce using rule 61
	'+='           reduce using rule 61
	'-='           reduce using rule 61
	'<<='          reduce using rule 61
	'>>='          reduce using rule 61
	'&='           reduce using rule 61
	'|='           reduce using rule 61
	'^='           reduce using rule 61
	','            reduce using rule 61
	'}'            reduce using rule 61
	';'            reduce using rule 61


State 51

	expr -> unary .                                     (rule 57)

	else           reduce using rule 57
	'+'            reduce using rule 57
	'-'            reduce using rule 57
	'*'            reduce using rule 57
	'/'            reduce using rule 57
	'++'           reduce using rule 57
	'--'           reduce using rule 57
	'&&'           reduce using rule 57
	'||'           reduce using rule 57
	'%'            reduce using rule 57
	'='            reduce using rule 57
	'=='           reduce using rule 57
	'!='           reduce using rule 57
	'<'            reduce using rule 57
	'<='           reduce using rule 57
	'>'            reduce using rule 57
	'>='           reduce using rule 57
	'&'            reduce using rule 57
	'|'            reduce using rule 57
	'('            reduce using rule 57
	')'            reduce using rule 57
	'['            reduce using rule 57
	']'            reduce using rule 57
	'.'            reduce using rule 57
	':'            reduce using rule 57
	'->'           reduce using rule 57
	'<<'           reduce using rule 57
	'>>'           reduce using rule 57
	'^'            reduce using rule 57
	'?'            reduce using rule 57
	'*='           reduce using rule 57
	'/='           reduce using rule 57
	'%='           reduce using rule 57
	'+='           reduce using rule 57
	'-='           reduce using rule 57
	'<<='          reduce using rule 57
	'>>='          reduce using rule 57
	'&='           reduce using rule 57
	'|='           reduce using rule 57
	'^='           reduce using rule 57
	','            reduce using rule 57
	'}'            reduce using rule 57
	';'            reduce using rule 57


State 52

	expr -> binary .                                    (rule 56)

	else           reduce using rule 56
	'+'            reduce using rule 56
	'-'            reduce using rule 56
	'*'            reduce using rule 56
	'/'            reduce using rule 56
	'++'           reduce using rule 56
	'--'           reduce using rule 56
	'&&'           reduce using rule 56
	'||'           reduce using rule 56
	'%'            reduce using rule 56
	'='            reduce using rule 56
	'=='           reduce using rule 56
	'!='           reduce using rule 56
	'<'            reduce using rule 56
	'<='           reduce using rule 56
	'>'            reduce using rule 56
	'>='           reduce using rule 56
	'&'            reduce using rule 56
	'|'            reduce using rule 56
	'('            reduce using rule 56
	')'            reduce using rule 56
	'['            reduce using rule 56
	']'            reduce using rule 56
	'.'            reduce using rule 56
	':'            reduce using rule 56
	'->'           reduce using rule 56
	'<<'           reduce using rule 56
	'>>'           reduce using rule 56
	'^'            reduce using rule 56
	'?'            reduce using rule 56
	'*='           reduce using rule 56
	'/='           reduce using rule 56
	'%='           reduce using rule 56
	'+='           reduce using rule 56
	'-='           reduce using rule 56
	'<<='          reduce using rule 56
	'>>='          reduce using rule 56
	'&='           reduce using rule 56
	'|='           reduce using rule 56
	'^='           reduce using rule 56
	','            reduce using rule 56
	'}'            reduce using rule 56
	';'            reduce using rule 56


State 53

	expr -> ternary .                                   (rule 55)

	else           reduce using rule 55
	'+'            reduce using rule 55
	'-'            reduce using rule 55
	'*'            reduce using rule 55
	'/'            reduce using rule 55
	'++'           reduce using rule 55
	'--'           reduce using rule 55
	'&&'           reduce using rule 55
	'||'           reduce using rule 55
	'%'            reduce using rule 55
	'='            reduce using rule 55
	'=='           reduce using rule 55
	'!='           reduce using rule 55
	'<'            reduce using rule 55
	'<='           reduce using rule 55
	'>'            reduce using rule 55
	'>='           reduce using rule 55
	'&'            reduce using rule 55
	'|'            reduce using rule 55
	'('            reduce using rule 55
	')'            reduce using rule 55
	'['            reduce using rule 55
	']'            reduce using rule 55
	'.'            reduce using rule 55
	':'            reduce using rule 55
	'->'           reduce using rule 55
	'<<'           reduce using rule 55
	'>>'           reduce using rule 55
	'^'            reduce using rule 55
	'?'            reduce using rule 55
	'*='           reduce using rule 55
	'/='           reduce using rule 55
	'%='           reduce using rule 55
	'+='           reduce using rule 55
	'-='           reduce using rule 55
	'<<='          reduce using rule 55
	'>>='          reduce using rule 55
	'&='           reduce using rule 55
	'|='           reduce using rule 55
	'^='           reduce using rule 55
	','            reduce using rule 55
	'}'            reduce using rule 55
	';'            reduce using rule 55


State 54

	assign -> expr . '=' expr                           (rule 2)
	assign -> expr . '*=' expr                          (rule 3)
	assign -> expr . '/=' expr                          (rule 4)
	assign -> expr . '%=' expr                          (rule 5)
	assign -> expr . '+=' expr                          (rule 6)
	assign -> expr . '-=' expr                          (rule 7)
	assign -> expr . '>>=' expr                         (rule 8)
	assign -> expr . '<<=' expr                         (rule 9)
	assign -> expr . '&=' expr                          (rule 10)
	assign -> expr . '^=' expr                          (rule 11)
	assign -> expr . '|=' expr                          (rule 12)
	member -> expr . '->' variable                      (rule 13)
	member -> expr . '.' variable                       (rule 14)
	call -> expr . '(' exprs ')'                        (rule 15)
	index -> expr . '[' expr ']'                        (rule 19)
	unary -> expr . '++'                                (rule 21)
	unary -> expr . '--'                                (rule 23)
	binary -> expr . '+' expr                           (rule 31)
	binary -> expr . '*' expr                           (rule 32)
	binary -> expr . '-' expr                           (rule 33)
	binary -> expr . '/' expr                           (rule 34)
	binary -> expr . '%' expr                           (rule 35)
	binary -> expr . '<<' expr                          (rule 36)
	binary -> expr . '>>' expr                          (rule 37)
	binary -> expr . '<' expr                           (rule 38)
	binary -> expr . '>' expr                           (rule 39)
	binary -> expr . '>=' expr                          (rule 40)
	binary -> expr . '<=' expr                          (rule 41)
	binary -> expr . '==' expr                          (rule 42)
	binary -> expr . '!=' expr                          (rule 43)
	binary -> expr . '&&' expr                          (rule 44)
	binary -> expr . '||' expr                          (rule 45)
	binary -> expr . '^' expr                           (rule 46)
	binary -> expr . '&' expr                           (rule 47)
	binary -> expr . '|' expr                           (rule 48)
	ternary -> expr . '?' expr ':' expr                 (rule 49)
	ternary -> expr . '?' ':' expr                      (rule 50)
	stmt -> expr .                                      (rule 105)

	else           reduce using rule 105
	'+'            shift, and enter state 77
	'-'            shift, and enter state 78
	'*'            shift, and enter state 79
	'/'            shift, and enter state 80
	'++'           shift, and enter state 81
	'--'           shift, and enter state 82
	'&&'           shift, and enter state 83
	'||'           shift, and enter state 84
	'%'            shift, and enter state 85
	'='            shift, and enter state 86
	'=='           shift, and enter state 87
	'!='           shift, and enter state 88
	'<'            shift, and enter state 89
	'<='           shift, and enter state 90
	'>'            shift, and enter state 91
	'>='           shift, and enter state 92
	'&'            shift, and enter state 93
	'|'            shift, and enter state 94
	'('            shift, and enter state 95
	'['            shift, and enter state 96
	'.'            shift, and enter state 98
	'->'           shift, and enter state 99
	'<<'           shift, and enter state 100
	'>>'           shift, and enter state 101
	'^'            shift, and enter state 102
	'?'            shift, and enter state 103
	'*='           shift, and enter state 104
	'/='           shift, and enter state 105
	'%='           shift, and enter state 106
	'+='           shift, and enter state 107
	'-='           shift, and enter state 108
	'<<='          shift, and enter state 109
	'>>='          shift, and enter state 110
	'&='           shift, and enter state 111
	'|='           shift, and enter state 112
	'^='           shift, and enter state 113
	'}'            reduce using rule 105
	';'            reduce using rule 105


State 55

	stmts -> stmt .                                     (rule 109)

	'}'            reduce using rule 109
	';'            reduce using rule 109


State 56

	stmt -> block .                                     (rule 104)

	else           reduce using rule 104
	'}'            reduce using rule 104
	';'            reduce using rule 104


State 57

	block -> '{' stmts . '}'                            (rule 106)
	stmts -> stmts . ';' stmt                           (rule 107)
	stmts -> stmts . ';'                                (rule 108)

	'}'            shift, and enter state 125
	';'            shift, and enter state 126


State 58

	stmt -> if_stmt .                                   (rule 103)

	else           reduce using rule 103
	'}'            reduce using rule 103
	';'            reduce using rule 103


State 59

	expr -> integer_const .                             (rule 52)

	else           reduce using rule 52
	'+'            reduce using rule 52
	'-'            reduce using rule 52
	'*'            reduce using rule 52
	'/'            reduce using rule 52
	'++'           reduce using rule 52
	'--'           reduce using rule 52
	'&&'           reduce using rule 52
	'||'           reduce using rule 52
	'%'            reduce using rule 52
	'='            reduce using rule 52
	'=='           reduce using rule 52
	'!='           reduce using rule 52
	'<'            reduce using rule 52
	'<='           reduce using rule 52
	'>'            reduce using rule 52
	'>='           reduce using rule 52
	'&'            reduce using rule 52
	'|'            reduce using rule 52
	'('            reduce using rule 52
	')'            reduce using rule 52
	'['            reduce using rule 52
	']'            reduce using rule 52
	'.'            reduce using rule 52
	':'            reduce using rule 52
	'->'           reduce using rule 52
	'<<'           reduce using rule 52
	'>>'           reduce using rule 52
	'^'            reduce using rule 52
	'?'            reduce using rule 52
	'*='           reduce using rule 52
	'/='           reduce using rule 52
	'%='           reduce using rule 52
	'+='           reduce using rule 52
	'-='           reduce using rule 52
	'<<='          reduce using rule 52
	'>>='          reduce using rule 52
	'&='           reduce using rule 52
	'|='           reduce using rule 52
	'^='           reduce using rule 52
	','            reduce using rule 52
	'}'            reduce using rule 52
	';'            reduce using rule 52


State 60

	expr -> float_const .                               (rule 53)

	else           reduce using rule 53
	'+'            reduce using rule 53
	'-'            reduce using rule 53
	'*'            reduce using rule 53
	'/'            reduce using rule 53
	'++'           reduce using rule 53
	'--'           reduce using rule 53
	'&&'           reduce using rule 53
	'||'           reduce using rule 53
	'%'            reduce using rule 53
	'='            reduce using rule 53
	'=='           reduce using rule 53
	'!='           reduce using rule 53
	'<'            reduce using rule 53
	'<='           reduce using rule 53
	'>'            reduce using rule 53
	'>='           reduce using rule 53
	'&'            reduce using rule 53
	'|'            reduce using rule 53
	'('            reduce using rule 53
	')'            reduce using rule 53
	'['            reduce using rule 53
	']'            reduce using rule 53
	'.'            reduce using rule 53
	':'            reduce using rule 53
	'->'           reduce using rule 53
	'<<'           reduce using rule 53
	'>>'           reduce using rule 53
	'^'            reduce using rule 53
	'?'            reduce using rule 53
	'*='           reduce using rule 53
	'/='           reduce using rule 53
	'%='           reduce using rule 53
	'+='           reduce using rule 53
	'-='           reduce using rule 53
	'<<='          reduce using rule 53
	'>>='          reduce using rule 53
	'&='           reduce using rule 53
	'|='           reduce using rule 53
	'^='           reduce using rule 53
	','            reduce using rule 53
	'}'            reduce using rule 53
	';'            reduce using rule 53


State 61

	expr -> char_const .                                (rule 54)

	else           reduce using rule 54
	'+'            reduce using rule 54
	'-'            reduce using rule 54
	'*'            reduce using rule 54
	'/'            reduce using rule 54
	'++'           reduce using rule 54
	'--'           reduce using rule 54
	'&&'           reduce using rule 54
	'||'           reduce using rule 54
	'%'            reduce using rule 54
	'='            reduce using rule 54
	'=='           reduce using rule 54
	'!='           reduce using rule 54
	'<'            reduce using rule 54
	'<='           reduce using rule 54
	'>'            reduce using rule 54
	'>='           reduce using rule 54
	'&'            reduce using rule 54
	'|'            reduce using rule 54
	'('            reduce using rule 54
	')'            reduce using rule 54
	'['            reduce using rule 54
	']'            reduce using rule 54
	'.'            reduce using rule 54
	':'            reduce using rule 54
	'->'           reduce using rule 54
	'<<'           reduce using rule 54
	'>>'           reduce using rule 54
	'^'            reduce using rule 54
	'?'            reduce using rule 54
	'*='           reduce using rule 54
	'/='           reduce using rule 54
	'%='           reduce using rule 54
	'+='           reduce using rule 54
	'-='           reduce using rule 54
	'<<='          reduce using rule 54
	'>>='          reduce using rule 54
	'&='           reduce using rule 54
	'|='           reduce using rule 54
	'^='           reduce using rule 54
	','            reduce using rule 54
	'}'            reduce using rule 54
	';'            reduce using rule 54


State 62

	if_stmt -> if . '(' expr ')' stmt                   (rule 111)
	if_stmt -> if . '(' expr ')' stmt else stmt         (rule 112)

	'('            shift, and enter state 124


State 63

	unary -> sizeof . expr                              (rule 30)

	identifier     shift, and enter state 2
	integer_const  shift, and enter state 59
	float_const    shift, and enter state 60
	char_const     shift, and enter state 61
	sizeof         shift, and enter state 63
	'+'            shift, and enter state 64
	'-'            shift, and enter state 65
	'*'            shift, and enter state 66
	'++'           shift, and enter state 67
	'--'           shift, and enter state 68
	'!'            shift, and enter state 69
	'~'            shift, and enter state 70
	'&'            shift, and enter state 71
	'('            shift, and enter state 72

	variable       goto state 46
	assign         goto state 47
	member         goto state 48
	call           goto state 49
	index          goto state 50
	unary          goto state 51
	binary         goto state 52
	ternary        goto state 53
	expr           goto state 123

State 64

	unary -> '+' . expr                                 (rule 26)

	identifier     shift, and enter state 2
	integer_const  shift, and enter state 59
	float_const    shift, and enter state 60
	char_const     shift, and enter state 61
	sizeof         shift, and enter state 63
	'+'            shift, and enter state 64
	'-'            shift, and enter state 65
	'*'            shift, and enter state 66
	'++'           shift, and enter state 67
	'--'           shift, and enter state 68
	'!'            shift, and enter state 69
	'~'            shift, and enter state 70
	'&'            shift, and enter state 71
	'('            shift, and enter state 72

	variable       goto state 46
	assign         goto state 47
	member         goto state 48
	call           goto state 49
	index          goto state 50
	unary          goto state 51
	binary         goto state 52
	ternary        goto state 53
	expr           goto state 122

State 65

	unary -> '-' . expr                                 (rule 27)

	identifier     shift, and enter state 2
	integer_const  shift, and enter state 59
	float_const    shift, and enter state 60
	char_const     shift, and enter state 61
	sizeof         shift, and enter state 63
	'+'            shift, and enter state 64
	'-'            shift, and enter state 65
	'*'            shift, and enter state 66
	'++'           shift, and enter state 67
	'--'           shift, and enter state 68
	'!'            shift, and enter state 69
	'~'            shift, and enter state 70
	'&'            shift, and enter state 71
	'('            shift, and enter state 72

	variable       goto state 46
	assign         goto state 47
	member         goto state 48
	call           goto state 49
	index          goto state 50
	unary          goto state 51
	binary         goto state 52
	ternary        goto state 53
	expr           goto state 121

State 66

	unary -> '*' . expr                                 (rule 25)

	identifier     shift, and enter state 2
	integer_const  shift, and enter state 59
	float_const    shift, and enter state 60
	char_const     shift, and enter state 61
	sizeof         shift, and enter state 63
	'+'            shift, and enter state 64
	'-'            shift, and enter state 65
	'*'            shift, and enter state 66
	'++'           shift, and enter state 67
	'--'           shift, and enter state 68
	'!'            shift, and enter state 69
	'~'            shift, and enter state 70
	'&'            shift, and enter state 71
	'('            shift, and enter state 72

	variable       goto state 46
	assign         goto state 47
	member         goto state 48
	call           goto state 49
	index          goto state 50
	unary          goto state 51
	binary         goto state 52
	ternary        goto state 53
	expr           goto state 120

State 67

	unary -> '++' . expr                                (rule 20)

	identifier     shift, and enter state 2
	integer_const  shift, and enter state 59
	float_const    shift, and enter state 60
	char_const     shift, and enter state 61
	sizeof         shift, and enter state 63
	'+'            shift, and enter state 64
	'-'            shift, and enter state 65
	'*'            shift, and enter state 66
	'++'           shift, and enter state 67
	'--'           shift, and enter state 68
	'!'            shift, and enter state 69
	'~'            shift, and enter state 70
	'&'            shift, and enter state 71
	'('            shift, and enter state 72

	variable       goto state 46
	assign         goto state 47
	member         goto state 48
	call           goto state 49
	index          goto state 50
	unary          goto state 51
	binary         goto state 52
	ternary        goto state 53
	expr           goto state 119

State 68

	unary -> '--' . expr                                (rule 22)

	identifier     shift, and enter state 2
	integer_const  shift, and enter state 59
	float_const    shift, and enter state 60
	char_const     shift, and enter state 61
	sizeof         shift, and enter state 63
	'+'            shift, and enter state 64
	'-'            shift, and enter state 65
	'*'            shift, and enter state 66
	'++'           shift, and enter state 67
	'--'           shift, and enter state 68
	'!'            shift, and enter state 69
	'~'            shift, and enter state 70
	'&'            shift, and enter state 71
	'('            shift, and enter state 72

	variable       goto state 46
	assign         goto state 47
	member         goto state 48
	call           goto state 49
	index          goto state 50
	unary          goto state 51
	binary         goto state 52
	ternary        goto state 53
	expr           goto state 118

State 69

	unary -> '!' . expr                                 (rule 29)

	identifier     shift, and enter state 2
	integer_const  shift, and enter state 59
	float_const    shift, and enter state 60
	char_const     shift, and enter state 61
	sizeof         shift, and enter state 63
	'+'            shift, and enter state 64
	'-'            shift, and enter state 65
	'*'            shift, and enter state 66
	'++'           shift, and enter state 67
	'--'           shift, and enter state 68
	'!'            shift, and enter state 69
	'~'            shift, and enter state 70
	'&'            shift, and enter state 71
	'('            shift, and enter state 72

	variable       goto state 46
	assign         goto state 47
	member         goto state 48
	call           goto state 49
	index          goto state 50
	unary          goto state 51
	binary         goto state 52
	ternary        goto state 53
	expr           goto state 117

State 70

	unary -> '~' . expr                                 (rule 28)

	identifier     shift, and enter state 2
	integer_const  shift, and enter state 59
	float_const    shift, and enter state 60
	char_const     shift, and enter state 61
	sizeof         shift, and enter state 63
	'+'            shift, and enter state 64
	'-'            shift, and enter state 65
	'*'            shift, and enter state 66
	'++'           shift, and enter state 67
	'--'           shift, and enter state 68
	'!'            shift, and enter state 69
	'~'            shift, and enter state 70
	'&'            shift, and enter state 71
	'('            shift, and enter state 72

	variable       goto state 46
	assign         goto state 47
	member         goto state 48
	call           goto state 49
	index          goto state 50
	unary          goto state 51
	binary         goto state 52
	ternary        goto state 53
	expr           goto state 116

State 71

	unary -> '&' . expr                                 (rule 24)

	identifier     shift, and enter state 2
	integer_const  shift, and enter state 59
	float_const    shift, and enter state 60
	char_const     shift, and enter state 61
	sizeof         shift, and enter state 63
	'+'            shift, and enter state 64
	'-'            shift, and enter state 65
	'*'            shift, and enter state 66
	'++'           shift, and enter state 67
	'--'           shift, and enter state 68
	'!'            shift, and enter state 69
	'~'            shift, and enter state 70
	'&'            shift, and enter state 71
	'('            shift, and enter state 72

	variable       goto state 46
	assign         goto state 47
	member         goto state 48
	call           goto state 49
	index          goto state 50
	unary          goto state 51
	binary         goto state 52
	ternary        goto state 53
	expr           goto state 115

State 72

	expr -> '(' . expr ')'                              (rule 62)

	identifier     shift, and enter state 2
	integer_const  shift, and enter state 59
	float_const    shift, and enter state 60
	char_const     shift, and enter state 61
	sizeof         shift, and enter state 63
	'+'            shift, and enter state 64
	'-'            shift, and enter state 65
	'*'            shift, and enter state 66
	'++'           shift, and enter state 67
	'--'           shift, and enter state 68
	'!'            shift, and enter state 69
	'~'            shift, and enter state 70
	'&'            shift, and enter state 71
	'('            shift, and enter state 72

	variable       goto state 46
	assign         goto state 47
	member         goto state 48
	call           goto state 49
	index          goto state 50
	unary          goto state 51
	binary         goto state 52
	ternary        goto state 53
	expr           goto state 114

State 73

	assign -> expr . '=' expr                           (rule 2)
	assign -> expr . '*=' expr                          (rule 3)
	assign -> expr . '/=' expr                          (rule 4)
	assign -> expr . '%=' expr                          (rule 5)
	assign -> expr . '+=' expr                          (rule 6)
	assign -> expr . '-=' expr                          (rule 7)
	assign -> expr . '>>=' expr                         (rule 8)
	assign -> expr . '<<=' expr                         (rule 9)
	assign -> expr . '&=' expr                          (rule 10)
	assign -> expr . '^=' expr                          (rule 11)
	assign -> expr . '|=' expr                          (rule 12)
	member -> expr . '->' variable                      (rule 13)
	member -> expr . '.' variable                       (rule 14)
	call -> expr . '(' exprs ')'                        (rule 15)
	index -> expr . '[' expr ']'                        (rule 19)
	unary -> expr . '++'                                (rule 21)
	unary -> expr . '--'                                (rule 23)
	binary -> expr . '+' expr                           (rule 31)
	binary -> expr . '*' expr                           (rule 32)
	binary -> expr . '-' expr                           (rule 33)
	binary -> expr . '/' expr                           (rule 34)
	binary -> expr . '%' expr                           (rule 35)
	binary -> expr . '<<' expr                          (rule 36)
	binary -> expr . '>>' expr                          (rule 37)
	binary -> expr . '<' expr                           (rule 38)
	binary -> expr . '>' expr                           (rule 39)
	binary -> expr . '>=' expr                          (rule 40)
	binary -> expr . '<=' expr                          (rule 41)
	binary -> expr . '==' expr                          (rule 42)
	binary -> expr . '!=' expr                          (rule 43)
	binary -> expr . '&&' expr                          (rule 44)
	binary -> expr . '||' expr                          (rule 45)
	binary -> expr . '^' expr                           (rule 46)
	binary -> expr . '&' expr                           (rule 47)
	binary -> expr . '|' expr                           (rule 48)
	ternary -> expr . '?' expr ':' expr                 (rule 49)
	ternary -> expr . '?' ':' expr                      (rule 50)
	array_modifier -> '[' expr . ']' type_modifier      (rule 100)
	array_modifier -> '[' expr . ']'                    (rule 101)

	'+'            shift, and enter state 77
	'-'            shift, and enter state 78
	'*'            shift, and enter state 79
	'/'            shift, and enter state 80
	'++'           shift, and enter state 81
	'--'           shift, and enter state 82
	'&&'           shift, and enter state 83
	'||'           shift, and enter state 84
	'%'            shift, and enter state 85
	'='            shift, and enter state 86
	'=='           shift, and enter state 87
	'!='           shift, and enter state 88
	'<'            shift, and enter state 89
	'<='           shift, and enter state 90
	'>'            shift, and enter state 91
	'>='           shift, and enter state 92
	'&'            shift, and enter state 93
	'|'            shift, and enter state 94
	'('            shift, and enter state 95
	'['            shift, and enter state 96
	']'            shift, and enter state 97
	'.'            shift, and enter state 98
	'->'           shift, and enter state 99
	'<<'           shift, and enter state 100
	'>>'           shift, and enter state 101
	'^'            shift, and enter state 102
	'?'            shift, and enter state 103
	'*='           shift, and enter state 104
	'/='           shift, and enter state 105
	'%='           shift, and enter state 106
	'+='           shift, and enter state 107
	'-='           shift, and enter state 108
	'<<='          shift, and enter state 109
	'>>='          shift, and enter state 110
	'&='           shift, and enter state 111
	'|='           shift, and enter state 112
	'^='           shift, and enter state 113


State 74

	func_modifier -> '(' ')' .                          (rule 102)

	'('            reduce using rule 102
	'['            reduce using rule 102
	'{'            reduce using rule 102


State 75

	type_qualifier_list -> type_qualifier_list type_qual .    (rule 89)

	identifier     reduce using rule 89
	const          reduce using rule 89
	volatile       reduce using rule 89
	'*'            reduce using rule 89


State 76

	pointer -> '*' type_qualifier_list pointer .        (rule 93)

	identifier     reduce using rule 93
	'*'            reduce using rule 93


State 77

	binary -> expr '+' . expr                           (rule 31)

	identifier     shift, and enter state 2
	integer_const  shift, and enter state 59
	float_const    shift, and enter state 60
	char_const     shift, and enter state 61
	sizeof         shift, and enter state 63
	'+'            shift, and enter state 64
	'-'            shift, and enter state 65
	'*'            shift, and enter state 66
	'++'           shift, and enter state 67
	'--'           shift, and enter state 68
	'!'            shift, and enter state 69
	'~'            shift, and enter state 70
	'&'            shift, and enter state 71
	'('            shift, and enter state 72

	variable       goto state 46
	assign         goto state 47
	member         goto state 48
	call           goto state 49
	index          goto state 50
	unary          goto state 51
	binary         goto state 52
	ternary        goto state 53
	expr           goto state 166

State 78

	binary -> expr '-' . expr                           (rule 33)

	identifier     shift, and enter state 2
	integer_const  shift, and enter state 59
	float_const    shift, and enter state 60
	char_const     shift, and enter state 61
	sizeof         shift, and enter state 63
	'+'            shift, and enter state 64
	'-'            shift, and enter state 65
	'*'            shift, and enter state 66
	'++'           shift, and enter state 67
	'--'           shift, and enter state 68
	'!'            shift, and enter state 69
	'~'            shift, and enter state 70
	'&'            shift, and enter state 71
	'('            shift, and enter state 72

	variable       goto state 46
	assign         goto state 47
	member         goto state 48
	call           goto state 49
	index          goto state 50
	unary          goto state 51
	binary         goto state 52
	ternary        goto state 53
	expr           goto state 165

State 79

	binary -> expr '*' . expr                           (rule 32)

	identifier     shift, and enter state 2
	integer_const  shift, and enter state 59
	float_const    shift, and enter state 60
	char_const     shift, and enter state 61
	sizeof         shift, and enter state 63
	'+'            shift, and enter state 64
	'-'            shift, and enter state 65
	'*'            shift, and enter state 66
	'++'           shift, and enter state 67
	'--'           shift, and enter state 68
	'!'            shift, and enter state 69
	'~'            shift, and enter state 70
	'&'            shift, and enter state 71
	'('            shift, and enter state 72

	variable       goto state 46
	assign         goto state 47
	member         goto state 48
	call           goto state 49
	index          goto state 50
	unary          goto state 51
	binary         goto state 52
	ternary        goto state 53
	expr           goto state 164

State 80

	binary -> expr '/' . expr                           (rule 34)

	identifier     shift, and enter state 2
	integer_const  shift, and enter state 59
	float_const    shift, and enter state 60
	char_const     shift, and enter state 61
	sizeof         shift, and enter state 63
	'+'            shift, and enter state 64
	'-'            shift, and enter state 65
	'*'            shift, and enter state 66
	'++'           shift, and enter state 67
	'--'           shift, and enter state 68
	'!'            shift, and enter state 69
	'~'            shift, and enter state 70
	'&'            shift, and enter state 71
	'('            shift, and enter state 72

	variable       goto state 46
	assign         goto state 47
	member         goto state 48
	call           goto state 49
	index          goto state 50
	unary          goto state 51
	binary         goto state 52
	ternary        goto state 53
	expr           goto state 163

State 81

	unary -> expr '++' .                                (rule 21)

	else           reduce using rule 21
	'+'            reduce using rule 21
	'-'            reduce using rule 21
	'*'            reduce using rule 21
	'/'            reduce using rule 21
	'++'           reduce using rule 21
	'--'           reduce using rule 21
	'&&'           reduce using rule 21
	'||'           reduce using rule 21
	'%'            reduce using rule 21
	'='            reduce using rule 21
	'=='           reduce using rule 21
	'!='           reduce using rule 21
	'<'            reduce using rule 21
	'<='           reduce using rule 21
	'>'            reduce using rule 21
	'>='           reduce using rule 21
	'&'            reduce using rule 21
	'|'            reduce using rule 21
	'('            reduce using rule 21
	')'            reduce using rule 21
	'['            reduce using rule 21
	']'            reduce using rule 21
	'.'            reduce using rule 21
	':'            reduce using rule 21
	'->'           reduce using rule 21
	'<<'           reduce using rule 21
	'>>'           reduce using rule 21
	'^'            reduce using rule 21
	'?'            reduce using rule 21
	'*='           reduce using rule 21
	'/='           reduce using rule 21
	'%='           reduce using rule 21
	'+='           reduce using rule 21
	'-='           reduce using rule 21
	'<<='          reduce using rule 21
	'>>='          reduce using rule 21
	'&='           reduce using rule 21
	'|='           reduce using rule 21
	'^='           reduce using rule 21
	','            reduce using rule 21
	'}'            reduce using rule 21
	';'            reduce using rule 21


State 82

	unary -> expr '--' .                                (rule 23)

	else           reduce using rule 23
	'+'            reduce using rule 23
	'-'            reduce using rule 23
	'*'            reduce using rule 23
	'/'            reduce using rule 23
	'++'           reduce using rule 23
	'--'           reduce using rule 23
	'&&'           reduce using rule 23
	'||'           reduce using rule 23
	'%'            reduce using rule 23
	'='            reduce using rule 23
	'=='           reduce using rule 23
	'!='           reduce using rule 23
	'<'            reduce using rule 23
	'<='           reduce using rule 23
	'>'            reduce using rule 23
	'>='           reduce using rule 23
	'&'            reduce using rule 23
	'|'            reduce using rule 23
	'('            reduce using rule 23
	')'            reduce using rule 23
	'['            reduce using rule 23
	']'            reduce using rule 23
	'.'            reduce using rule 23
	':'            reduce using rule 23
	'->'           reduce using rule 23
	'<<'           reduce using rule 23
	'>>'           reduce using rule 23
	'^'            reduce using rule 23
	'?'            reduce using rule 23
	'*='           reduce using rule 23
	'/='           reduce using rule 23
	'%='           reduce using rule 23
	'+='           reduce using rule 23
	'-='           reduce using rule 23
	'<<='          reduce using rule 23
	'>>='          reduce using rule 23
	'&='           reduce using rule 23
	'|='           reduce using rule 23
	'^='           reduce using rule 23
	','            reduce using rule 23
	'}'            reduce using rule 23
	';'            reduce using rule 23


State 83

	binary -> expr '&&' . expr                          (rule 44)

	identifier     shift, and enter state 2
	integer_const  shift, and enter state 59
	float_const    shift, and enter state 60
	char_const     shift, and enter state 61
	sizeof         shift, and enter state 63
	'+'            shift, and enter state 64
	'-'            shift, and enter state 65
	'*'            shift, and enter state 66
	'++'           shift, and enter state 67
	'--'           shift, and enter state 68
	'!'            shift, and enter state 69
	'~'            shift, and enter state 70
	'&'            shift, and enter state 71
	'('            shift, and enter state 72

	variable       goto state 46
	assign         goto state 47
	member         goto state 48
	call           goto state 49
	index          goto state 50
	unary          goto state 51
	binary         goto state 52
	ternary        goto state 53
	expr           goto state 162

State 84

	binary -> expr '||' . expr                          (rule 45)

	identifier     shift, and enter state 2
	integer_const  shift, and enter state 59
	float_const    shift, and enter state 60
	char_const     shift, and enter state 61
	sizeof         shift, and enter state 63
	'+'            shift, and enter state 64
	'-'            shift, and enter state 65
	'*'            shift, and enter state 66
	'++'           shift, and enter state 67
	'--'           shift, and enter state 68
	'!'            shift, and enter state 69
	'~'            shift, and enter state 70
	'&'            shift, and enter state 71
	'('            shift, and enter state 72

	variable       goto state 46
	assign         goto state 47
	member         goto state 48
	call           goto state 49
	index          goto state 50
	unary          goto state 51
	binary         goto state 52
	ternary        goto state 53
	expr           goto state 161

State 85

	binary -> expr '%' . expr                           (rule 35)

	identifier     shift, and enter state 2
	integer_const  shift, and enter state 59
	float_const    shift, and enter state 60
	char_const     shift, and enter state 61
	sizeof         shift, and enter state 63
	'+'            shift, and enter state 64
	'-'            shift, and enter state 65
	'*'            shift, and enter state 66
	'++'           shift, and enter state 67
	'--'           shift, and enter state 68
	'!'            shift, and enter state 69
	'~'            shift, and enter state 70
	'&'            shift, and enter state 71
	'('            shift, and enter state 72

	variable       goto state 46
	assign         goto state 47
	member         goto state 48
	call           goto state 49
	index          goto state 50
	unary          goto state 51
	binary         goto state 52
	ternary        goto state 53
	expr           goto state 160

State 86

	assign -> expr '=' . expr                           (rule 2)

	identifier     shift, and enter state 2
	integer_const  shift, and enter state 59
	float_const    shift, and enter state 60
	char_const     shift, and enter state 61
	sizeof         shift, and enter state 63
	'+'            shift, and enter state 64
	'-'            shift, and enter state 65
	'*'            shift, and enter state 66
	'++'           shift, and enter state 67
	'--'           shift, and enter state 68
	'!'            shift, and enter state 69
	'~'            shift, and enter state 70
	'&'            shift, and enter state 71
	'('            shift, and enter state 72

	variable       goto state 46
	assign         goto state 47
	member         goto state 48
	call           goto state 49
	index          goto state 50
	unary          goto state 51
	binary         goto state 52
	ternary        goto state 53
	expr           goto state 159

State 87

	binary -> expr '==' . expr                          (rule 42)

	identifier     shift, and enter state 2
	integer_const  shift, and enter state 59
	float_const    shift, and enter state 60
	char_const     shift, and enter state 61
	sizeof         shift, and enter state 63
	'+'            shift, and enter state 64
	'-'            shift, and enter state 65
	'*'            shift, and enter state 66
	'++'           shift, and enter state 67
	'--'           shift, and enter state 68
	'!'            shift, and enter state 69
	'~'            shift, and enter state 70
	'&'            shift, and enter state 71
	'('            shift, and enter state 72

	variable       goto state 46
	assign         goto state 47
	member         goto state 48
	call           goto state 49
	index          goto state 50
	unary          goto state 51
	binary         goto state 52
	ternary        goto state 53
	expr           goto state 158

State 88

	binary -> expr '!=' . expr                          (rule 43)

	identifier     shift, and enter state 2
	integer_const  shift, and enter state 59
	float_const    shift, and enter state 60
	char_const     shift, and enter state 61
	sizeof         shift, and enter state 63
	'+'            shift, and enter state 64
	'-'            shift, and enter state 65
	'*'            shift, and enter state 66
	'++'           shift, and enter state 67
	'--'           shift, and enter state 68
	'!'            shift, and enter state 69
	'~'            shift, and enter state 70
	'&'            shift, and enter state 71
	'('            shift, and enter state 72

	variable       goto state 46
	assign         goto state 47
	member         goto state 48
	call           goto state 49
	index          goto state 50
	unary          goto state 51
	binary         goto state 52
	ternary        goto state 53
	expr           goto state 157

State 89

	binary -> expr '<' . expr                           (rule 38)

	identifier     shift, and enter state 2
	integer_const  shift, and enter state 59
	float_const    shift, and enter state 60
	char_const     shift, and enter state 61
	sizeof         shift, and enter state 63
	'+'            shift, and enter state 64
	'-'            shift, and enter state 65
	'*'            shift, and enter state 66
	'++'           shift, and enter state 67
	'--'           shift, and enter state 68
	'!'            shift, and enter state 69
	'~'            shift, and enter state 70
	'&'            shift, and enter state 71
	'('            shift, and enter state 72

	variable       goto state 46
	assign         goto state 47
	member         goto state 48
	call           goto state 49
	index          goto state 50
	unary          goto state 51
	binary         goto state 52
	ternary        goto state 53
	expr           goto state 156

State 90

	binary -> expr '<=' . expr                          (rule 41)

	identifier     shift, and enter state 2
	integer_const  shift, and enter state 59
	float_const    shift, and enter state 60
	char_const     shift, and enter state 61
	sizeof         shift, and enter state 63
	'+'            shift, and enter state 64
	'-'            shift, and enter state 65
	'*'            shift, and enter state 66
	'++'           shift, and enter state 67
	'--'           shift, and enter state 68
	'!'            shift, and enter state 69
	'~'            shift, and enter state 70
	'&'            shift, and enter state 71
	'('            shift, and enter state 72

	variable       goto state 46
	assign         goto state 47
	member         goto state 48
	call           goto state 49
	index          goto state 50
	unary          goto state 51
	binary         goto state 52
	ternary        goto state 53
	expr           goto state 155

State 91

	binary -> expr '>' . expr                           (rule 39)

	identifier     shift, and enter state 2
	integer_const  shift, and enter state 59
	float_const    shift, and enter state 60
	char_const     shift, and enter state 61
	sizeof         shift, and enter state 63
	'+'            shift, and enter state 64
	'-'            shift, and enter state 65
	'*'            shift, and enter state 66
	'++'           shift, and enter state 67
	'--'           shift, and enter state 68
	'!'            shift, and enter state 69
	'~'            shift, and enter state 70
	'&'            shift, and enter state 71
	'('            shift, and enter state 72

	variable       goto state 46
	assign         goto state 47
	member         goto state 48
	call           goto state 49
	index          goto state 50
	unary          goto state 51
	binary         goto state 52
	ternary        goto state 53
	expr           goto state 154

State 92

	binary -> expr '>=' . expr                          (rule 40)

	identifier     shift, and enter state 2
	integer_const  shift, and enter state 59
	float_const    shift, and enter state 60
	char_const     shift, and enter state 61
	sizeof         shift, and enter state 63
	'+'            shift, and enter state 64
	'-'            shift, and enter state 65
	'*'            shift, and enter state 66
	'++'           shift, and enter state 67
	'--'           shift, and enter state 68
	'!'            shift, and enter state 69
	'~'            shift, and enter state 70
	'&'            shift, and enter state 71
	'('            shift, and enter state 72

	variable       goto state 46
	assign         goto state 47
	member         goto state 48
	call           goto state 49
	index          goto state 50
	unary          goto state 51
	binary         goto state 52
	ternary        goto state 53
	expr           goto state 153

State 93

	binary -> expr '&' . expr                           (rule 47)

	identifier     shift, and enter state 2
	integer_const  shift, and enter state 59
	float_const    shift, and enter state 60
	char_const     shift, and enter state 61
	sizeof         shift, and enter state 63
	'+'            shift, and enter state 64
	'-'            shift, and enter state 65
	'*'            shift, and enter state 66
	'++'           shift, and enter state 67
	'--'           shift, and enter state 68
	'!'            shift, and enter state 69
	'~'            shift, and enter state 70
	'&'            shift, and enter state 71
	'('            shift, and enter state 72

	variable       goto state 46
	assign         goto state 47
	member         goto state 48
	call           goto state 49
	index          goto state 50
	unary          goto state 51
	binary         goto state 52
	ternary        goto state 53
	expr           goto state 152

State 94

	binary -> expr '|' . expr                           (rule 48)

	identifier     shift, and enter state 2
	integer_const  shift, and enter state 59
	float_const    shift, and enter state 60
	char_const     shift, and enter state 61
	sizeof         shift, and enter state 63
	'+'            shift, and enter state 64
	'-'            shift, and enter state 65
	'*'            shift, and enter state 66
	'++'           shift, and enter state 67
	'--'           shift, and enter state 68
	'!'            shift, and enter state 69
	'~'            shift, and enter state 70
	'&'            shift, and enter state 71
	'('            shift, and enter state 72

	variable       goto state 46
	assign         goto state 47
	member         goto state 48
	call           goto state 49
	index          goto state 50
	unary          goto state 51
	binary         goto state 52
	ternary        goto state 53
	expr           goto state 151

State 95

	call -> expr '(' . exprs ')'                        (rule 15)

	identifier     shift, and enter state 2
	integer_const  shift, and enter state 59
	float_const    shift, and enter state 60
	char_const     shift, and enter state 61
	sizeof         shift, and enter state 63
	'+'            shift, and enter state 64
	'-'            shift, and enter state 65
	'*'            shift, and enter state 66
	'++'           shift, and enter state 67
	'--'           shift, and enter state 68
	'!'            shift, and enter state 69
	'~'            shift, and enter state 70
	'&'            shift, and enter state 71
	'('            shift, and enter state 72
	')'            reduce using rule 16
	','            reduce using rule 16

	variable       goto state 46
	assign         goto state 47
	member         goto state 48
	call           goto state 49
	exprs          goto state 149
	index          goto state 50
	unary          goto state 51
	binary         goto state 52
	ternary        goto state 53
	expr           goto state 150

State 96

	index -> expr '[' . expr ']'                        (rule 19)

	identifier     shift, and enter state 2
	integer_const  shift, and enter state 59
	float_const    shift, and enter state 60
	char_const     shift, and enter state 61
	sizeof         shift, and enter state 63
	'+'            shift, and enter state 64
	'-'            shift, and enter state 65
	'*'            shift, and enter state 66
	'++'           shift, and enter state 67
	'--'           shift, and enter state 68
	'!'            shift, and enter state 69
	'~'            shift, and enter state 70
	'&'            shift, and enter state 71
	'('            shift, and enter state 72

	variable       goto state 46
	assign         goto state 47
	member         goto state 48
	call           goto state 49
	index          goto state 50
	unary          goto state 51
	binary         goto state 52
	ternary        goto state 53
	expr           goto state 148

State 97

	array_modifier -> '[' expr ']' . type_modifier      (rule 100)
	array_modifier -> '[' expr ']' .                    (rule 101)

	'('            reduce using rule 101
	'['            reduce using rule 101
	'{'            reduce using rule 101

	type_modifier  goto state 147
	array_modifier goto state 39
	func_modifier  goto state 40

State 98

	member -> expr '.' . variable                       (rule 14)

	identifier     shift, and enter state 2

	variable       goto state 146

State 99

	member -> expr '->' . variable                      (rule 13)

	identifier     shift, and enter state 2

	variable       goto state 145

State 100

	binary -> expr '<<' . expr                          (rule 36)

	identifier     shift, and enter state 2
	integer_const  shift, and enter state 59
	float_const    shift, and enter state 60
	char_const     shift, and enter state 61
	sizeof         shift, and enter state 63
	'+'            shift, and enter state 64
	'-'            shift, and enter state 65
	'*'            shift, and enter state 66
	'++'           shift, and enter state 67
	'--'           shift, and enter state 68
	'!'            shift, and enter state 69
	'~'            shift, and enter state 70
	'&'            shift, and enter state 71
	'('            shift, and enter state 72

	variable       goto state 46
	assign         goto state 47
	member         goto state 48
	call           goto state 49
	index          goto state 50
	unary          goto state 51
	binary         goto state 52
	ternary        goto state 53
	expr           goto state 144

State 101

	binary -> expr '>>' . expr                          (rule 37)

	identifier     shift, and enter state 2
	integer_const  shift, and enter state 59
	float_const    shift, and enter state 60
	char_const     shift, and enter state 61
	sizeof         shift, and enter state 63
	'+'            shift, and enter state 64
	'-'            shift, and enter state 65
	'*'            shift, and enter state 66
	'++'           shift, and enter state 67
	'--'           shift, and enter state 68
	'!'            shift, and enter state 69
	'~'            shift, and enter state 70
	'&'            shift, and enter state 71
	'('            shift, and enter state 72

	variable       goto state 46
	assign         goto state 47
	member         goto state 48
	call           goto state 49
	index          goto state 50
	unary          goto state 51
	binary         goto state 52
	ternary        goto state 53
	expr           goto state 143

State 102

	binary -> expr '^' . expr                           (rule 46)

	identifier     shift, and enter state 2
	integer_const  shift, and enter state 59
	float_const    shift, and enter state 60
	char_const     shift, and enter state 61
	sizeof         shift, and enter state 63
	'+'            shift, and enter state 64
	'-'            shift, and enter state 65
	'*'            shift, and enter state 66
	'++'           shift, and enter state 67
	'--'           shift, and enter state 68
	'!'            shift, and enter state 69
	'~'            shift, and enter state 70
	'&'            shift, and enter state 71
	'('            shift, and enter state 72

	variable       goto state 46
	assign         goto state 47
	member         goto state 48
	call           goto state 49
	index          goto state 50
	unary          goto state 51
	binary         goto state 52
	ternary        goto state 53
	expr           goto state 142

State 103

	ternary -> expr '?' . expr ':' expr                 (rule 49)
	ternary -> expr '?' . ':' expr                      (rule 50)

	identifier     shift, and enter state 2
	integer_const  shift, and enter state 59
	float_const    shift, and enter state 60
	char_const     shift, and enter state 61
	sizeof         shift, and enter state 63
	'+'            shift, and enter state 64
	'-'            shift, and enter state 65
	'*'            shift, and enter state 66
	'++'           shift, and enter state 67
	'--'           shift, and enter state 68
	'!'            shift, and enter state 69
	'~'            shift, and enter state 70
	'&'            shift, and enter state 71
	'('            shift, and enter state 72
	':'            shift, and enter state 141

	variable       goto state 46
	assign         goto state 47
	member         goto state 48
	call           goto state 49
	index          goto state 50
	unary          goto state 51
	binary         goto state 52
	ternary        goto state 53
	expr           goto state 140

State 104

	assign -> expr '*=' . expr                          (rule 3)

	identifier     shift, and enter state 2
	integer_const  shift, and enter state 59
	float_const    shift, and enter state 60
	char_const     shift, and enter state 61
	sizeof         shift, and enter state 63
	'+'            shift, and enter state 64
	'-'            shift, and enter state 65
	'*'            shift, and enter state 66
	'++'           shift, and enter state 67
	'--'           shift, and enter state 68
	'!'            shift, and enter state 69
	'~'            shift, and enter state 70
	'&'            shift, and enter state 71
	'('            shift, and enter state 72

	variable       goto state 46
	assign         goto state 47
	member         goto state 48
	call           goto state 49
	index          goto state 50
	unary          goto state 51
	binary         goto state 52
	ternary        goto state 53
	expr           goto state 139

State 105

	assign -> expr '/=' . expr                          (rule 4)

	identifier     shift, and enter state 2
	integer_const  shift, and enter state 59
	float_const    shift, and enter state 60
	char_const     shift, and enter state 61
	sizeof         shift, and enter state 63
	'+'            shift, and enter state 64
	'-'            shift, and enter state 65
	'*'            shift, and enter state 66
	'++'           shift, and enter state 67
	'--'           shift, and enter state 68
	'!'            shift, and enter state 69
	'~'            shift, and enter state 70
	'&'            shift, and enter state 71
	'('            shift, and enter state 72

	variable       goto state 46
	assign         goto state 47
	member         goto state 48
	call           goto state 49
	index          goto state 50
	unary          goto state 51
	binary         goto state 52
	ternary        goto state 53
	expr           goto state 138

State 106

	assign -> expr '%=' . expr                          (rule 5)

	identifier     shift, and enter state 2
	integer_const  shift, and enter state 59
	float_const    shift, and enter state 60
	char_const     shift, and enter state 61
	sizeof         shift, and enter state 63
	'+'            shift, and enter state 64
	'-'            shift, and enter state 65
	'*'            shift, and enter state 66
	'++'           shift, and enter state 67
	'--'           shift, and enter state 68
	'!'            shift, and enter state 69
	'~'            shift, and enter state 70
	'&'            shift, and enter state 71
	'('            shift, and enter state 72

	variable       goto state 46
	assign         goto state 47
	member         goto state 48
	call           goto state 49
	index          goto state 50
	unary          goto state 51
	binary         goto state 52
	ternary        goto state 53
	expr           goto state 137

State 107

	assign -> expr '+=' . expr                          (rule 6)

	identifier     shift, and enter state 2
	integer_const  shift, and enter state 59
	float_const    shift, and enter state 60
	char_const     shift, and enter state 61
	sizeof         shift, and enter state 63
	'+'            shift, and enter state 64
	'-'            shift, and enter state 65
	'*'            shift, and enter state 66
	'++'           shift, and enter state 67
	'--'           shift, and enter state 68
	'!'            shift, and enter state 69
	'~'            shift, and enter state 70
	'&'            shift, and enter state 71
	'('            shift, and enter state 72

	variable       goto state 46
	assign         goto state 47
	member         goto state 48
	call           goto state 49
	index          goto state 50
	unary          goto state 51
	binary         goto state 52
	ternary        goto state 53
	expr           goto state 136

State 108

	assign -> expr '-=' . expr                          (rule 7)

	identifier     shift, and enter state 2
	integer_const  shift, and enter state 59
	float_const    shift, and enter state 60
	char_const     shift, and enter state 61
	sizeof         shift, and enter state 63
	'+'            shift, and enter state 64
	'-'            shift, and enter state 65
	'*'            shift, and enter state 66
	'++'           shift, and enter state 67
	'--'           shift, and enter state 68
	'!'            shift, and enter state 69
	'~'            shift, and enter state 70
	'&'            shift, and enter state 71
	'('            shift, and enter state 72

	variable       goto state 46
	assign         goto state 47
	member         goto state 48
	call           goto state 49
	index          goto state 50
	unary          goto state 51
	binary         goto state 52
	ternary        goto state 53
	expr           goto state 135

State 109

	assign -> expr '<<=' . expr                         (rule 9)

	identifier     shift, and enter state 2
	integer_const  shift, and enter state 59
	float_const    shift, and enter state 60
	char_const     shift, and enter state 61
	sizeof         shift, and enter state 63
	'+'            shift, and enter state 64
	'-'            shift, and enter state 65
	'*'            shift, and enter state 66
	'++'           shift, and enter state 67
	'--'           shift, and enter state 68
	'!'            shift, and enter state 69
	'~'            shift, and enter state 70
	'&'            shift, and enter state 71
	'('            shift, and enter state 72

	variable       goto state 46
	assign         goto state 47
	member         goto state 48
	call           goto state 49
	index          goto state 50
	unary          goto state 51
	binary         goto state 52
	ternary        goto state 53
	expr           goto state 134

State 110

	assign -> expr '>>=' . expr                         (rule 8)

	identifier     shift, and enter state 2
	integer_const  shift, and enter state 59
	float_const    shift, and enter state 60
	char_const     shift, and enter state 61
	sizeof         shift, and enter state 63
	'+'            shift, and enter state 64
	'-'            shift, and enter state 65
	'*'            shift, and enter state 66
	'++'           shift, and enter state 67
	'--'           shift, and enter state 68
	'!'            shift, and enter state 69
	'~'            shift, and enter state 70
	'&'            shift, and enter state 71
	'('            shift, and enter state 72

	variable       goto state 46
	assign         goto state 47
	member         goto state 48
	call           goto state 49
	index          goto state 50
	unary          goto state 51
	binary         goto state 52
	ternary        goto state 53
	expr           goto state 133

State 111

	assign -> expr '&=' . expr                          (rule 10)

	identifier     shift, and enter state 2
	integer_const  shift, and enter state 59
	float_const    shift, and enter state 60
	char_const     shift, and enter state 61
	sizeof         shift, and enter state 63
	'+'            shift, and enter state 64
	'-'            shift, and enter state 65
	'*'            shift, and enter state 66
	'++'           shift, and enter state 67
	'--'           shift, and enter state 68
	'!'            shift, and enter state 69
	'~'            shift, and enter state 70
	'&'            shift, and enter state 71
	'('            shift, and enter state 72

	variable       goto state 46
	assign         goto state 47
	member         goto state 48
	call           goto state 49
	index          goto state 50
	unary          goto state 51
	binary         goto state 52
	ternary        goto state 53
	expr           goto state 132

State 112

	assign -> expr '|=' . expr                          (rule 12)

	identifier     shift, and enter state 2
	integer_const  shift, and enter state 59
	float_const    shift, and enter state 60
	char_const     shift, and enter state 61
	sizeof         shift, and enter state 63
	'+'            shift, and enter state 64
	'-'            shift, and enter state 65
	'*'            shift, and enter state 66
	'++'           shift, and enter state 67
	'--'           shift, and enter state 68
	'!'            shift, and enter state 69
	'~'            shift, and enter state 70
	'&'            shift, and enter state 71
	'('            shift, and enter state 72

	variable       goto state 46
	assign         goto state 47
	member         goto state 48
	call           goto state 49
	index          goto state 50
	unary          goto state 51
	binary         goto state 52
	ternary        goto state 53
	expr           goto state 131

State 113

	assign -> expr '^=' . expr                          (rule 11)

	identifier     shift, and enter state 2
	integer_const  shift, and enter state 59
	float_const    shift, and enter state 60
	char_const     shift, and enter state 61
	sizeof         shift, and enter state 63
	'+'            shift, and enter state 64
	'-'            shift, and enter state 65
	'*'            shift, and enter state 66
	'++'           shift, and enter state 67
	'--'           shift, and enter state 68
	'!'            shift, and enter state 69
	'~'            shift, and enter state 70
	'&'            shift, and enter state 71
	'('            shift, and enter state 72

	variable       goto state 46
	assign         goto state 47
	member         goto state 48
	call           goto state 49
	index          goto state 50
	unary          goto state 51
	binary         goto state 52
	ternary        goto state 53
	expr           goto state 130

State 114

	assign -> expr . '=' expr                           (rule 2)
	assign -> expr . '*=' expr                          (rule 3)
	assign -> expr . '/=' expr                          (rule 4)
	assign -> expr . '%=' expr                          (rule 5)
	assign -> expr . '+=' expr                          (rule 6)
	assign -> expr . '-=' expr                          (rule 7)
	assign -> expr . '>>=' expr                         (rule 8)
	assign -> expr . '<<=' expr                         (rule 9)
	assign -> expr . '&=' expr                          (rule 10)
	assign -> expr . '^=' expr                          (rule 11)
	assign -> expr . '|=' expr                          (rule 12)
	member -> expr . '->' variable                      (rule 13)
	member -> expr . '.' variable                       (rule 14)
	call -> expr . '(' exprs ')'                        (rule 15)
	index -> expr . '[' expr ']'                        (rule 19)
	unary -> expr . '++'                                (rule 21)
	unary -> expr . '--'                                (rule 23)
	binary -> expr . '+' expr                           (rule 31)
	binary -> expr . '*' expr                           (rule 32)
	binary -> expr . '-' expr                           (rule 33)
	binary -> expr . '/' expr                           (rule 34)
	binary -> expr . '%' expr                           (rule 35)
	binary -> expr . '<<' expr                          (rule 36)
	binary -> expr . '>>' expr                          (rule 37)
	binary -> expr . '<' expr                           (rule 38)
	binary -> expr . '>' expr                           (rule 39)
	binary -> expr . '>=' expr                          (rule 40)
	binary -> expr . '<=' expr                          (rule 41)
	binary -> expr . '==' expr                          (rule 42)
	binary -> expr . '!=' expr                          (rule 43)
	binary -> expr . '&&' expr                          (rule 44)
	binary -> expr . '||' expr                          (rule 45)
	binary -> expr . '^' expr                           (rule 46)
	binary -> expr . '&' expr                           (rule 47)
	binary -> expr . '|' expr                           (rule 48)
	ternary -> expr . '?' expr ':' expr                 (rule 49)
	ternary -> expr . '?' ':' expr                      (rule 50)
	expr -> '(' expr . ')'                              (rule 62)

	'+'            shift, and enter state 77
	'-'            shift, and enter state 78
	'*'            shift, and enter state 79
	'/'            shift, and enter state 80
	'++'           shift, and enter state 81
	'--'           shift, and enter state 82
	'&&'           shift, and enter state 83
	'||'           shift, and enter state 84
	'%'            shift, and enter state 85
	'='            shift, and enter state 86
	'=='           shift, and enter state 87
	'!='           shift, and enter state 88
	'<'            shift, and enter state 89
	'<='           shift, and enter state 90
	'>'            shift, and enter state 91
	'>='           shift, and enter state 92
	'&'            shift, and enter state 93
	'|'            shift, and enter state 94
	'('            shift, and enter state 95
	')'            shift, and enter state 129
	'['            shift, and enter state 96
	'.'            shift, and enter state 98
	'->'           shift, and enter state 99
	'<<'           shift, and enter state 100
	'>>'           shift, and enter state 101
	'^'            shift, and enter state 102
	'?'            shift, and enter state 103
	'*='           shift, and enter state 104
	'/='           shift, and enter state 105
	'%='           shift, and enter state 106
	'+='           shift, and enter state 107
	'-='           shift, and enter state 108
	'<<='          shift, and enter state 109
	'>>='          shift, and enter state 110
	'&='           shift, and enter state 111
	'|='           shift, and enter state 112
	'^='           shift, and enter state 113


State 115

	assign -> expr . '=' expr                           (rule 2)
	assign -> expr . '*=' expr                          (rule 3)
	assign -> expr . '/=' expr                          (rule 4)
	assign -> expr . '%=' expr                          (rule 5)
	assign -> expr . '+=' expr                          (rule 6)
	assign -> expr . '-=' expr                          (rule 7)
	assign -> expr . '>>=' expr                         (rule 8)
	assign -> expr . '<<=' expr                         (rule 9)
	assign -> expr . '&=' expr                          (rule 10)
	assign -> expr . '^=' expr                          (rule 11)
	assign -> expr . '|=' expr                          (rule 12)
	member -> expr . '->' variable                      (rule 13)
	member -> expr . '.' variable                       (rule 14)
	call -> expr . '(' exprs ')'                        (rule 15)
	index -> expr . '[' expr ']'                        (rule 19)
	unary -> expr . '++'                                (rule 21)
	unary -> expr . '--'                                (rule 23)
	unary -> '&' expr .                                 (rule 24)
	binary -> expr . '+' expr                           (rule 31)
	binary -> expr . '*' expr                           (rule 32)
	binary -> expr . '-' expr                           (rule 33)
	binary -> expr . '/' expr                           (rule 34)
	binary -> expr . '%' expr                           (rule 35)
	binary -> expr . '<<' expr                          (rule 36)
	binary -> expr . '>>' expr                          (rule 37)
	binary -> expr . '<' expr                           (rule 38)
	binary -> expr . '>' expr                           (rule 39)
	binary -> expr . '>=' expr                          (rule 40)
	binary -> expr . '<=' expr                          (rule 41)
	binary -> expr . '==' expr                          (rule 42)
	binary -> expr . '!=' expr                          (rule 43)
	binary -> expr . '&&' expr                          (rule 44)
	binary -> expr . '||' expr                          (rule 45)
	binary -> expr . '^' expr                           (rule 46)
	binary -> expr . '&' expr                           (rule 47)
	binary -> expr . '|' expr                           (rule 48)
	ternary -> expr . '?' expr ':' expr                 (rule 49)
	ternary -> expr . '?' ':' expr                      (rule 50)

	else           reduce using rule 24
	'+'            reduce using rule 24
	'-'            reduce using rule 24
	'*'            reduce using rule 24
	'/'            reduce using rule 24
	'++'           shift, and enter state 81
	'--'           shift, and enter state 82
	'&&'           reduce using rule 24
	'||'           reduce using rule 24
	'%'            reduce using rule 24
	'='            reduce using rule 24
	'=='           reduce using rule 24
	'!='           reduce using rule 24
	'<'            reduce using rule 24
	'<='           reduce using rule 24
	'>'            reduce using rule 24
	'>='           reduce using rule 24
	'&'            reduce using rule 24
	'|'            reduce using rule 24
	'('            shift, and enter state 95
	')'            reduce using rule 24
	'['            shift, and enter state 96
	']'            reduce using rule 24
	'.'            shift, and enter state 98
	':'            reduce using rule 24
	'->'           shift, and enter state 99
	'<<'           reduce using rule 24
	'>>'           reduce using rule 24
	'^'            reduce using rule 24
	'?'            reduce using rule 24
	'*='           reduce using rule 24
	'/='           reduce using rule 24
	'%='           reduce using rule 24
	'+='           reduce using rule 24
	'-='           reduce using rule 24
	'<<='          reduce using rule 24
	'>>='          reduce using rule 24
	'&='           reduce using rule 24
	'|='           reduce using rule 24
	'^='           reduce using rule 24
	','            reduce using rule 24
	'}'            reduce using rule 24
	';'            reduce using rule 24


State 116

	assign -> expr . '=' expr                           (rule 2)
	assign -> expr . '*=' expr                          (rule 3)
	assign -> expr . '/=' expr                          (rule 4)
	assign -> expr . '%=' expr                          (rule 5)
	assign -> expr . '+=' expr                          (rule 6)
	assign -> expr . '-=' expr                          (rule 7)
	assign -> expr . '>>=' expr                         (rule 8)
	assign -> expr . '<<=' expr                         (rule 9)
	assign -> expr . '&=' expr                          (rule 10)
	assign -> expr . '^=' expr                          (rule 11)
	assign -> expr . '|=' expr                          (rule 12)
	member -> expr . '->' variable                      (rule 13)
	member -> expr . '.' variable                       (rule 14)
	call -> expr . '(' exprs ')'                        (rule 15)
	index -> expr . '[' expr ']'                        (rule 19)
	unary -> expr . '++'                                (rule 21)
	unary -> expr . '--'                                (rule 23)
	unary -> '~' expr .                                 (rule 28)
	binary -> expr . '+' expr                           (rule 31)
	binary -> expr . '*' expr                           (rule 32)
	binary -> expr . '-' expr                           (rule 33)
	binary -> expr . '/' expr                           (rule 34)
	binary -> expr . '%' expr                           (rule 35)
	binary -> expr . '<<' expr                          (rule 36)
	binary -> expr . '>>' expr                          (rule 37)
	binary -> expr . '<' expr                           (rule 38)
	binary -> expr . '>' expr                           (rule 39)
	binary -> expr . '>=' expr                          (rule 40)
	binary -> expr . '<=' expr                          (rule 41)
	binary -> expr . '==' expr                          (rule 42)
	binary -> expr . '!=' expr                          (rule 43)
	binary -> expr . '&&' expr                          (rule 44)
	binary -> expr . '||' expr                          (rule 45)
	binary -> expr . '^' expr                           (rule 46)
	binary -> expr . '&' expr                           (rule 47)
	binary -> expr . '|' expr                           (rule 48)
	ternary -> expr . '?' expr ':' expr                 (rule 49)
	ternary -> expr . '?' ':' expr                      (rule 50)

	else           reduce using rule 28
	'+'            reduce using rule 28
	'-'            reduce using rule 28
	'*'            reduce using rule 28
	'/'            reduce using rule 28
	'++'           shift, and enter state 81
	'--'           shift, and enter state 82
	'&&'           reduce using rule 28
	'||'           reduce using rule 28
	'%'            reduce using rule 28
	'='            reduce using rule 28
	'=='           reduce using rule 28
	'!='           reduce using rule 28
	'<'            reduce using rule 28
	'<='           reduce using rule 28
	'>'            reduce using rule 28
	'>='           reduce using rule 28
	'&'            reduce using rule 28
	'|'            reduce using rule 28
	'('            shift, and enter state 95
	')'            reduce using rule 28
	'['            shift, and enter state 96
	']'            reduce using rule 28
	'.'            shift, and enter state 98
	':'            reduce using rule 28
	'->'           shift, and enter state 99
	'<<'           reduce using rule 28
	'>>'           reduce using rule 28
	'^'            reduce using rule 28
	'?'            reduce using rule 28
	'*='           reduce using rule 28
	'/='           reduce using rule 28
	'%='           reduce using rule 28
	'+='           reduce using rule 28
	'-='           reduce using rule 28
	'<<='          reduce using rule 28
	'>>='          reduce using rule 28
	'&='           reduce using rule 28
	'|='           reduce using rule 28
	'^='           reduce using rule 28
	','            reduce using rule 28
	'}'            reduce using rule 28
	';'            reduce using rule 28


State 117

	assign -> expr . '=' expr                           (rule 2)
	assign -> expr . '*=' expr                          (rule 3)
	assign -> expr . '/=' expr                          (rule 4)
	assign -> expr . '%=' expr                          (rule 5)
	assign -> expr . '+=' expr                          (rule 6)
	assign -> expr . '-=' expr                          (rule 7)
	assign -> expr . '>>=' expr                         (rule 8)
	assign -> expr . '<<=' expr                         (rule 9)
	assign -> expr . '&=' expr                          (rule 10)
	assign -> expr . '^=' expr                          (rule 11)
	assign -> expr . '|=' expr                          (rule 12)
	member -> expr . '->' variable                      (rule 13)
	member -> expr . '.' variable                       (rule 14)
	call -> expr . '(' exprs ')'                        (rule 15)
	index -> expr . '[' expr ']'                        (rule 19)
	unary -> expr . '++'                                (rule 21)
	unary -> expr . '--'                                (rule 23)
	unary -> '!' expr .                                 (rule 29)
	binary -> expr . '+' expr                           (rule 31)
	binary -> expr . '*' expr                           (rule 32)
	binary -> expr . '-' expr                           (rule 33)
	binary -> expr . '/' expr                           (rule 34)
	binary -> expr . '%' expr                           (rule 35)
	binary -> expr . '<<' expr                          (rule 36)
	binary -> expr . '>>' expr                          (rule 37)
	binary -> expr . '<' expr                           (rule 38)
	binary -> expr . '>' expr                           (rule 39)
	binary -> expr . '>=' expr                          (rule 40)
	binary -> expr . '<=' expr                          (rule 41)
	binary -> expr . '==' expr                          (rule 42)
	binary -> expr . '!=' expr                          (rule 43)
	binary -> expr . '&&' expr                          (rule 44)
	binary -> expr . '||' expr                          (rule 45)
	binary -> expr . '^' expr                           (rule 46)
	binary -> expr . '&' expr                           (rule 47)
	binary -> expr . '|' expr                           (rule 48)
	ternary -> expr . '?' expr ':' expr                 (rule 49)
	ternary -> expr . '?' ':' expr                      (rule 50)

	else           reduce using rule 29
	'+'            reduce using rule 29
	'-'            reduce using rule 29
	'*'            reduce using rule 29
	'/'            reduce using rule 29
	'++'           shift, and enter state 81
	'--'           shift, and enter state 82
	'&&'           reduce using rule 29
	'||'           reduce using rule 29
	'%'            reduce using rule 29
	'='            reduce using rule 29
	'=='           reduce using rule 29
	'!='           reduce using rule 29
	'<'            reduce using rule 29
	'<='           reduce using rule 29
	'>'            reduce using rule 29
	'>='           reduce using rule 29
	'&'            reduce using rule 29
	'|'            reduce using rule 29
	'('            shift, and enter state 95
	')'            reduce using rule 29
	'['            shift, and enter state 96
	']'            reduce using rule 29
	'.'            shift, and enter state 98
	':'            reduce using rule 29
	'->'           shift, and enter state 99
	'<<'           reduce using rule 29
	'>>'           reduce using rule 29
	'^'            reduce using rule 29
	'?'            reduce using rule 29
	'*='           reduce using rule 29
	'/='           reduce using rule 29
	'%='           reduce using rule 29
	'+='           reduce using rule 29
	'-='           reduce using rule 29
	'<<='          reduce using rule 29
	'>>='          reduce using rule 29
	'&='           reduce using rule 29
	'|='           reduce using rule 29
	'^='           reduce using rule 29
	','            reduce using rule 29
	'}'            reduce using rule 29
	';'            reduce using rule 29


State 118

	assign -> expr . '=' expr                           (rule 2)
	assign -> expr . '*=' expr                          (rule 3)
	assign -> expr . '/=' expr                          (rule 4)
	assign -> expr . '%=' expr                          (rule 5)
	assign -> expr . '+=' expr                          (rule 6)
	assign -> expr . '-=' expr                          (rule 7)
	assign -> expr . '>>=' expr                         (rule 8)
	assign -> expr . '<<=' expr                         (rule 9)
	assign -> expr . '&=' expr                          (rule 10)
	assign -> expr . '^=' expr                          (rule 11)
	assign -> expr . '|=' expr                          (rule 12)
	member -> expr . '->' variable                      (rule 13)
	member -> expr . '.' variable                       (rule 14)
	call -> expr . '(' exprs ')'                        (rule 15)
	index -> expr . '[' expr ']'                        (rule 19)
	unary -> expr . '++'                                (rule 21)
	unary -> '--' expr .                                (rule 22)
	unary -> expr . '--'                                (rule 23)
	binary -> expr . '+' expr                           (rule 31)
	binary -> expr . '*' expr                           (rule 32)
	binary -> expr . '-' expr                           (rule 33)
	binary -> expr . '/' expr                           (rule 34)
	binary -> expr . '%' expr                           (rule 35)
	binary -> expr . '<<' expr                          (rule 36)
	binary -> expr . '>>' expr                          (rule 37)
	binary -> expr . '<' expr                           (rule 38)
	binary -> expr . '>' expr                           (rule 39)
	binary -> expr . '>=' expr                          (rule 40)
	binary -> expr . '<=' expr                          (rule 41)
	binary -> expr . '==' expr                          (rule 42)
	binary -> expr . '!=' expr                          (rule 43)
	binary -> expr . '&&' expr                          (rule 44)
	binary -> expr . '||' expr                          (rule 45)
	binary -> expr . '^' expr                           (rule 46)
	binary -> expr . '&' expr                           (rule 47)
	binary -> expr . '|' expr                           (rule 48)
	ternary -> expr . '?' expr ':' expr                 (rule 49)
	ternary -> expr . '?' ':' expr                      (rule 50)

	else           reduce using rule 22
	'+'            reduce using rule 22
	'-'            reduce using rule 22
	'*'            reduce using rule 22
	'/'            reduce using rule 22
	'++'           shift, and enter state 81
	'--'           shift, and enter state 82
	'&&'           reduce using rule 22
	'||'           reduce using rule 22
	'%'            reduce using rule 22
	'='            reduce using rule 22
	'=='           reduce using rule 22
	'!='           reduce using rule 22
	'<'            reduce using rule 22
	'<='           reduce using rule 22
	'>'            reduce using rule 22
	'>='           reduce using rule 22
	'&'            reduce using rule 22
	'|'            reduce using rule 22
	'('            shift, and enter state 95
	')'            reduce using rule 22
	'['            shift, and enter state 96
	']'            reduce using rule 22
	'.'            shift, and enter state 98
	':'            reduce using rule 22
	'->'           shift, and enter state 99
	'<<'           reduce using rule 22
	'>>'           reduce using rule 22
	'^'            reduce using rule 22
	'?'            reduce using rule 22
	'*='           reduce using rule 22
	'/='           reduce using rule 22
	'%='           reduce using rule 22
	'+='           reduce using rule 22
	'-='           reduce using rule 22
	'<<='          reduce using rule 22
	'>>='          reduce using rule 22
	'&='           reduce using rule 22
	'|='           reduce using rule 22
	'^='           reduce using rule 22
	','            reduce using rule 22
	'}'            reduce using rule 22
	';'            reduce using rule 22


State 119

	assign -> expr . '=' expr                           (rule 2)
	assign -> expr . '*=' expr                          (rule 3)
	assign -> expr . '/=' expr                          (rule 4)
	assign -> expr . '%=' expr                          (rule 5)
	assign -> expr . '+=' expr                          (rule 6)
	assign -> expr . '-=' expr                          (rule 7)
	assign -> expr . '>>=' expr                         (rule 8)
	assign -> expr . '<<=' expr                         (rule 9)
	assign -> expr . '&=' expr                          (rule 10)
	assign -> expr . '^=' expr                          (rule 11)
	assign -> expr . '|=' expr                          (rule 12)
	member -> expr . '->' variable                      (rule 13)
	member -> expr . '.' variable                       (rule 14)
	call -> expr . '(' exprs ')'                        (rule 15)
	index -> expr . '[' expr ']'                        (rule 19)
	unary -> '++' expr .                                (rule 20)
	unary -> expr . '++'                                (rule 21)
	unary -> expr . '--'                                (rule 23)
	binary -> expr . '+' expr                           (rule 31)
	binary -> expr . '*' expr                           (rule 32)
	binary -> expr . '-' expr                           (rule 33)
	binary -> expr . '/' expr                           (rule 34)
	binary -> expr . '%' expr                           (rule 35)
	binary -> expr . '<<' expr                          (rule 36)
	binary -> expr . '>>' expr                          (rule 37)
	binary -> expr . '<' expr                           (rule 38)
	binary -> expr . '>' expr                           (rule 39)
	binary -> expr . '>=' expr                          (rule 40)
	binary -> expr . '<=' expr                          (rule 41)
	binary -> expr . '==' expr                          (rule 42)
	binary -> expr . '!=' expr                          (rule 43)
	binary -> expr . '&&' expr                          (rule 44)
	binary -> expr . '||' expr                          (rule 45)
	binary -> expr . '^' expr                           (rule 46)
	binary -> expr . '&' expr                           (rule 47)
	binary -> expr . '|' expr                           (rule 48)
	ternary -> expr . '?' expr ':' expr                 (rule 49)
	ternary -> expr . '?' ':' expr                      (rule 50)

	else           reduce using rule 20
	'+'            reduce using rule 20
	'-'            reduce using rule 20
	'*'            reduce using rule 20
	'/'            reduce using rule 20
	'++'           shift, and enter state 81
	'--'           shift, and enter state 82
	'&&'           reduce using rule 20
	'||'           reduce using rule 20
	'%'            reduce using rule 20
	'='            reduce using rule 20
	'=='           reduce using rule 20
	'!='           reduce using rule 20
	'<'            reduce using rule 20
	'<='           reduce using rule 20
	'>'            reduce using rule 20
	'>='           reduce using rule 20
	'&'            reduce using rule 20
	'|'            reduce using rule 20
	'('            shift, and enter state 95
	')'            reduce using rule 20
	'['            shift, and enter state 96
	']'            reduce using rule 20
	'.'            shift, and enter state 98
	':'            reduce using rule 20
	'->'           shift, and enter state 99
	'<<'           reduce using rule 20
	'>>'           reduce using rule 20
	'^'            reduce using rule 20
	'?'            reduce using rule 20
	'*='           reduce using rule 20
	'/='           reduce using rule 20
	'%='           reduce using rule 20
	'+='           reduce using rule 20
	'-='           reduce using rule 20
	'<<='          reduce using rule 20
	'>>='          reduce using rule 20
	'&='           reduce using rule 20
	'|='           reduce using rule 20
	'^='           reduce using rule 20
	','            reduce using rule 20
	'}'            reduce using rule 20
	';'            reduce using rule 20


State 120

	assign -> expr . '=' expr                           (rule 2)
	assign -> expr . '*=' expr                          (rule 3)
	assign -> expr . '/=' expr                          (rule 4)
	assign -> expr . '%=' expr                          (rule 5)
	assign -> expr . '+=' expr                          (rule 6)
	assign -> expr . '-=' expr                          (rule 7)
	assign -> expr . '>>=' expr                         (rule 8)
	assign -> expr . '<<=' expr                         (rule 9)
	assign -> expr . '&=' expr                          (rule 10)
	assign -> expr . '^=' expr                          (rule 11)
	assign -> expr . '|=' expr                          (rule 12)
	member -> expr . '->' variable                      (rule 13)
	member -> expr . '.' variable                       (rule 14)
	call -> expr . '(' exprs ')'                        (rule 15)
	index -> expr . '[' expr ']'                        (rule 19)
	unary -> expr . '++'                                (rule 21)
	unary -> expr . '--'                                (rule 23)
	unary -> '*' expr .                                 (rule 25)
	binary -> expr . '+' expr                           (rule 31)
	binary -> expr . '*' expr                           (rule 32)
	binary -> expr . '-' expr                           (rule 33)
	binary -> expr . '/' expr                           (rule 34)
	binary -> expr . '%' expr                           (rule 35)
	binary -> expr . '<<' expr                          (rule 36)
	binary -> expr . '>>' expr                          (rule 37)
	binary -> expr . '<' expr                           (rule 38)
	binary -> expr . '>' expr                           (rule 39)
	binary -> expr . '>=' expr                          (rule 40)
	binary -> expr . '<=' expr                          (rule 41)
	binary -> expr . '==' expr                          (rule 42)
	binary -> expr . '!=' expr                          (rule 43)
	binary -> expr . '&&' expr                          (rule 44)
	binary -> expr . '||' expr                          (rule 45)
	binary -> expr . '^' expr                           (rule 46)
	binary -> expr . '&' expr                           (rule 47)
	binary -> expr . '|' expr                           (rule 48)
	ternary -> expr . '?' expr ':' expr                 (rule 49)
	ternary -> expr . '?' ':' expr                      (rule 50)

	else           reduce using rule 25
	'+'            reduce using rule 25
	'-'            reduce using rule 25
	'*'            reduce using rule 25
	'/'            reduce using rule 25
	'++'           shift, and enter state 81
	'--'           shift, and enter state 82
	'&&'           reduce using rule 25
	'||'           reduce using rule 25
	'%'            reduce using rule 25
	'='            reduce using rule 25
	'=='           reduce using rule 25
	'!='           reduce using rule 25
	'<'            reduce using rule 25
	'<='           reduce using rule 25
	'>'            reduce using rule 25
	'>='           reduce using rule 25
	'&'            reduce using rule 25
	'|'            reduce using rule 25
	'('            shift, and enter state 95
	')'            reduce using rule 25
	'['            shift, and enter state 96
	']'            reduce using rule 25
	'.'            shift, and enter state 98
	':'            reduce using rule 25
	'->'           shift, and enter state 99
	'<<'           reduce using rule 25
	'>>'           reduce using rule 25
	'^'            reduce using rule 25
	'?'            reduce using rule 25
	'*='           reduce using rule 25
	'/='           reduce using rule 25
	'%='           reduce using rule 25
	'+='           reduce using rule 25
	'-='           reduce using rule 25
	'<<='          reduce using rule 25
	'>>='          reduce using rule 25
	'&='           reduce using rule 25
	'|='           reduce using rule 25
	'^='           reduce using rule 25
	','            reduce using rule 25
	'}'            reduce using rule 25
	';'            reduce using rule 25


State 121

	assign -> expr . '=' expr                           (rule 2)
	assign -> expr . '*=' expr                          (rule 3)
	assign -> expr . '/=' expr                          (rule 4)
	assign -> expr . '%=' expr                          (rule 5)
	assign -> expr . '+=' expr                          (rule 6)
	assign -> expr . '-=' expr                          (rule 7)
	assign -> expr . '>>=' expr                         (rule 8)
	assign -> expr . '<<=' expr                         (rule 9)
	assign -> expr . '&=' expr                          (rule 10)
	assign -> expr . '^=' expr                          (rule 11)
	assign -> expr . '|=' expr                          (rule 12)
	member -> expr . '->' variable                      (rule 13)
	member -> expr . '.' variable                       (rule 14)
	call -> expr . '(' exprs ')'                        (rule 15)
	index -> expr . '[' expr ']'                        (rule 19)
	unary -> expr . '++'                                (rule 21)
	unary -> expr . '--'                                (rule 23)
	unary -> '-' expr .                                 (rule 27)
	binary -> expr . '+' expr                           (rule 31)
	binary -> expr . '*' expr                           (rule 32)
	binary -> expr . '-' expr                           (rule 33)
	binary -> expr . '/' expr                           (rule 34)
	binary -> expr . '%' expr                           (rule 35)
	binary -> expr . '<<' expr                          (rule 36)
	binary -> expr . '>>' expr                          (rule 37)
	binary -> expr . '<' expr                           (rule 38)
	binary -> expr . '>' expr                           (rule 39)
	binary -> expr . '>=' expr                          (rule 40)
	binary -> expr . '<=' expr                          (rule 41)
	binary -> expr . '==' expr                          (rule 42)
	binary -> expr . '!=' expr                          (rule 43)
	binary -> expr . '&&' expr                          (rule 44)
	binary -> expr . '||' expr                          (rule 45)
	binary -> expr . '^' expr                           (rule 46)
	binary -> expr . '&' expr                           (rule 47)
	binary -> expr . '|' expr                           (rule 48)
	ternary -> expr . '?' expr ':' expr                 (rule 49)
	ternary -> expr . '?' ':' expr                      (rule 50)

	else           reduce using rule 27
	'+'            reduce using rule 27
	'-'            reduce using rule 27
	'*'            reduce using rule 27
	'/'            reduce using rule 27
	'++'           shift, and enter state 81
	'--'           shift, and enter state 82
	'&&'           reduce using rule 27
	'||'           reduce using rule 27
	'%'            reduce using rule 27
	'='            reduce using rule 27
	'=='           reduce using rule 27
	'!='           reduce using rule 27
	'<'            reduce using rule 27
	'<='           reduce using rule 27
	'>'            reduce using rule 27
	'>='           reduce using rule 27
	'&'            reduce using rule 27
	'|'            reduce using rule 27
	'('            shift, and enter state 95
	')'            reduce using rule 27
	'['            shift, and enter state 96
	']'            reduce using rule 27
	'.'            shift, and enter state 98
	':'            reduce using rule 27
	'->'           shift, and enter state 99
	'<<'           reduce using rule 27
	'>>'           reduce using rule 27
	'^'            reduce using rule 27
	'?'            reduce using rule 27
	'*='           reduce using rule 27
	'/='           reduce using rule 27
	'%='           reduce using rule 27
	'+='           reduce using rule 27
	'-='           reduce using rule 27
	'<<='          reduce using rule 27
	'>>='          reduce using rule 27
	'&='           reduce using rule 27
	'|='           reduce using rule 27
	'^='           reduce using rule 27
	','            reduce using rule 27
	'}'            reduce using rule 27
	';'            reduce using rule 27


State 122

	assign -> expr . '=' expr                           (rule 2)
	assign -> expr . '*=' expr                          (rule 3)
	assign -> expr . '/=' expr                          (rule 4)
	assign -> expr . '%=' expr                          (rule 5)
	assign -> expr . '+=' expr                          (rule 6)
	assign -> expr . '-=' expr                          (rule 7)
	assign -> expr . '>>=' expr                         (rule 8)
	assign -> expr . '<<=' expr                         (rule 9)
	assign -> expr . '&=' expr                          (rule 10)
	assign -> expr . '^=' expr                          (rule 11)
	assign -> expr . '|=' expr                          (rule 12)
	member -> expr . '->' variable                      (rule 13)
	member -> expr . '.' variable                       (rule 14)
	call -> expr . '(' exprs ')'                        (rule 15)
	index -> expr . '[' expr ']'                        (rule 19)
	unary -> expr . '++'                                (rule 21)
	unary -> expr . '--'                                (rule 23)
	unary -> '+' expr .                                 (rule 26)
	binary -> expr . '+' expr                           (rule 31)
	binary -> expr . '*' expr                           (rule 32)
	binary -> expr . '-' expr                           (rule 33)
	binary -> expr . '/' expr                           (rule 34)
	binary -> expr . '%' expr                           (rule 35)
	binary -> expr . '<<' expr                          (rule 36)
	binary -> expr . '>>' expr                          (rule 37)
	binary -> expr . '<' expr                           (rule 38)
	binary -> expr . '>' expr                           (rule 39)
	binary -> expr . '>=' expr                          (rule 40)
	binary -> expr . '<=' expr                          (rule 41)
	binary -> expr . '==' expr                          (rule 42)
	binary -> expr . '!=' expr                          (rule 43)
	binary -> expr . '&&' expr                          (rule 44)
	binary -> expr . '||' expr                          (rule 45)
	binary -> expr . '^' expr                           (rule 46)
	binary -> expr . '&' expr                           (rule 47)
	binary -> expr . '|' expr                           (rule 48)
	ternary -> expr . '?' expr ':' expr                 (rule 49)
	ternary -> expr . '?' ':' expr                      (rule 50)

	else           reduce using rule 26
	'+'            reduce using rule 26
	'-'            reduce using rule 26
	'*'            reduce using rule 26
	'/'            reduce using rule 26
	'++'           shift, and enter state 81
	'--'           shift, and enter state 82
	'&&'           reduce using rule 26
	'||'           reduce using rule 26
	'%'            reduce using rule 26
	'='            reduce using rule 26
	'=='           reduce using rule 26
	'!='           reduce using rule 26
	'<'            reduce using rule 26
	'<='           reduce using rule 26
	'>'            reduce using rule 26
	'>='           reduce using rule 26
	'&'            reduce using rule 26
	'|'            reduce using rule 26
	'('            shift, and enter state 95
	')'            reduce using rule 26
	'['            shift, and enter state 96
	']'            reduce using rule 26
	'.'            shift, and enter state 98
	':'            reduce using rule 26
	'->'           shift, and enter state 99
	'<<'           reduce using rule 26
	'>>'           reduce using rule 26
	'^'            reduce using rule 26
	'?'            reduce using rule 26
	'*='           reduce using rule 26
	'/='           reduce using rule 26
	'%='           reduce using rule 26
	'+='           reduce using rule 26
	'-='           reduce using rule 26
	'<<='          reduce using rule 26
	'>>='          reduce using rule 26
	'&='           reduce using rule 26
	'|='           reduce using rule 26
	'^='           reduce using rule 26
	','            reduce using rule 26
	'}'            reduce using rule 26
	';'            reduce using rule 26


State 123

	assign -> expr . '=' expr                           (rule 2)
	assign -> expr . '*=' expr                          (rule 3)
	assign -> expr . '/=' expr                          (rule 4)
	assign -> expr . '%=' expr                          (rule 5)
	assign -> expr . '+=' expr                          (rule 6)
	assign -> expr . '-=' expr                          (rule 7)
	assign -> expr . '>>=' expr                         (rule 8)
	assign -> expr . '<<=' expr                         (rule 9)
	assign -> expr . '&=' expr                          (rule 10)
	assign -> expr . '^=' expr                          (rule 11)
	assign -> expr . '|=' expr                          (rule 12)
	member -> expr . '->' variable                      (rule 13)
	member -> expr . '.' variable                       (rule 14)
	call -> expr . '(' exprs ')'                        (rule 15)
	index -> expr . '[' expr ']'                        (rule 19)
	unary -> expr . '++'                                (rule 21)
	unary -> expr . '--'                                (rule 23)
	unary -> sizeof expr .                              (rule 30)
	binary -> expr . '+' expr                           (rule 31)
	binary -> expr . '*' expr                           (rule 32)
	binary -> expr . '-' expr                           (rule 33)
	binary -> expr . '/' expr                           (rule 34)
	binary -> expr . '%' expr                           (rule 35)
	binary -> expr . '<<' expr                          (rule 36)
	binary -> expr . '>>' expr                          (rule 37)
	binary -> expr . '<' expr                           (rule 38)
	binary -> expr . '>' expr                           (rule 39)
	binary -> expr . '>=' expr                          (rule 40)
	binary -> expr . '<=' expr                          (rule 41)
	binary -> expr . '==' expr                          (rule 42)
	binary -> expr . '!=' expr                          (rule 43)
	binary -> expr . '&&' expr                          (rule 44)
	binary -> expr . '||' expr                          (rule 45)
	binary -> expr . '^' expr                           (rule 46)
	binary -> expr . '&' expr                           (rule 47)
	binary -> expr . '|' expr                           (rule 48)
	ternary -> expr . '?' expr ':' expr                 (rule 49)
	ternary -> expr . '?' ':' expr                      (rule 50)

	else           reduce using rule 30
	'+'            reduce using rule 30
	'-'            reduce using rule 30
	'*'            reduce using rule 30
	'/'            reduce using rule 30
	'++'           shift, and enter state 81
	'--'           shift, and enter state 82
	'&&'           reduce using rule 30
	'||'           reduce using rule 30
	'%'            reduce using rule 30
	'='            reduce using rule 30
	'=='           reduce using rule 30
	'!='           reduce using rule 30
	'<'            reduce using rule 30
	'<='           reduce using rule 30
	'>'            reduce using rule 30
	'>='           reduce using rule 30
	'&'            reduce using rule 30
	'|'            reduce using rule 30
	'('            shift, and enter state 95
	')'            reduce using rule 30
	'['            shift, and enter state 96
	']'            reduce using rule 30
	'.'            shift, and enter state 98
	':'            reduce using rule 30
	'->'           shift, and enter state 99
	'<<'           reduce using rule 30
	'>>'           reduce using rule 30
	'^'            reduce using rule 30
	'?'            reduce using rule 30
	'*='           reduce using rule 30
	'/='           reduce using rule 30
	'%='           reduce using rule 30
	'+='           reduce using rule 30
	'-='           reduce using rule 30
	'<<='          reduce using rule 30
	'>>='          reduce using rule 30
	'&='           reduce using rule 30
	'|='           reduce using rule 30
	'^='           reduce using rule 30
	','            reduce using rule 30
	'}'            reduce using rule 30
	';'            reduce using rule 30


State 124

	if_stmt -> if '(' . expr ')' stmt                   (rule 111)
	if_stmt -> if '(' . expr ')' stmt else stmt         (rule 112)

	identifier     shift, and enter state 2
	integer_const  shift, and enter state 59
	float_const    shift, and enter state 60
	char_const     shift, and enter state 61
	sizeof         shift, and enter state 63
	'+'            shift, and enter state 64
	'-'            shift, and enter state 65
	'*'            shift, and enter state 66
	'++'           shift, and enter state 67
	'--'           shift, and enter state 68
	'!'            shift, and enter state 69
	'~'            shift, and enter state 70
	'&'            shift, and enter state 71
	'('            shift, and enter state 72

	variable       goto state 46
	assign         goto state 47
	member         goto state 48
	call           goto state 49
	index          goto state 50
	unary          goto state 51
	binary         goto state 52
	ternary        goto state 53
	expr           goto state 128

State 125

	block -> '{' stmts '}' .                            (rule 106)

	else           reduce using rule 106
	'}'            reduce using rule 106
	';'            reduce using rule 106
	%eof           reduce using rule 106


State 126

	stmts -> stmts ';' . stmt                           (rule 107)
	stmts -> stmts ';' .                                (rule 108)

	identifier     shift, and enter state 2
	integer_const  shift, and enter state 59
	float_const    shift, and enter state 60
	char_const     shift, and enter state 61
	if             shift, and enter state 62
	sizeof         shift, and enter state 63
	'+'            shift, and enter state 64
	'-'            shift, and enter state 65
	'*'            shift, and enter state 66
	'++'           shift, and enter state 67
	'--'           shift, and enter state 68
	'!'            shift, and enter state 69
	'~'            shift, and enter state 70
	'&'            shift, and enter state 71
	'('            shift, and enter state 72
	'{'            shift, and enter state 44
	'}'            reduce using rule 108
	';'            reduce using rule 108

	variable       goto state 46
	assign         goto state 47
	member         goto state 48
	call           goto state 49
	index          goto state 50
	unary          goto state 51
	binary         goto state 52
	ternary        goto state 53
	expr           goto state 54
	stmt           goto state 127
	block          goto state 56
	if_stmt        goto state 58

State 127

	stmts -> stmts ';' stmt .                           (rule 107)

	'}'            reduce using rule 107
	';'            reduce using rule 107


State 128

	assign -> expr . '=' expr                           (rule 2)
	assign -> expr . '*=' expr                          (rule 3)
	assign -> expr . '/=' expr                          (rule 4)
	assign -> expr . '%=' expr                          (rule 5)
	assign -> expr . '+=' expr                          (rule 6)
	assign -> expr . '-=' expr                          (rule 7)
	assign -> expr . '>>=' expr                         (rule 8)
	assign -> expr . '<<=' expr                         (rule 9)
	assign -> expr . '&=' expr                          (rule 10)
	assign -> expr . '^=' expr                          (rule 11)
	assign -> expr . '|=' expr                          (rule 12)
	member -> expr . '->' variable                      (rule 13)
	member -> expr . '.' variable                       (rule 14)
	call -> expr . '(' exprs ')'                        (rule 15)
	index -> expr . '[' expr ']'                        (rule 19)
	unary -> expr . '++'                                (rule 21)
	unary -> expr . '--'                                (rule 23)
	binary -> expr . '+' expr                           (rule 31)
	binary -> expr . '*' expr                           (rule 32)
	binary -> expr . '-' expr                           (rule 33)
	binary -> expr . '/' expr                           (rule 34)
	binary -> expr . '%' expr                           (rule 35)
	binary -> expr . '<<' expr                          (rule 36)
	binary -> expr . '>>' expr                          (rule 37)
	binary -> expr . '<' expr                           (rule 38)
	binary -> expr . '>' expr                           (rule 39)
	binary -> expr . '>=' expr                          (rule 40)
	binary -> expr . '<=' expr                          (rule 41)
	binary -> expr . '==' expr                          (rule 42)
	binary -> expr . '!=' expr                          (rule 43)
	binary -> expr . '&&' expr                          (rule 44)
	binary -> expr . '||' expr                          (rule 45)
	binary -> expr . '^' expr                           (rule 46)
	binary -> expr . '&' expr                           (rule 47)
	binary -> expr . '|' expr                           (rule 48)
	ternary -> expr . '?' expr ':' expr                 (rule 49)
	ternary -> expr . '?' ':' expr                      (rule 50)
	if_stmt -> if '(' expr . ')' stmt                   (rule 111)
	if_stmt -> if '(' expr . ')' stmt else stmt         (rule 112)

	'+'            shift, and enter state 77
	'-'            shift, and enter state 78
	'*'            shift, and enter state 79
	'/'            shift, and enter state 80
	'++'           shift, and enter state 81
	'--'           shift, and enter state 82
	'&&'           shift, and enter state 83
	'||'           shift, and enter state 84
	'%'            shift, and enter state 85
	'='            shift, and enter state 86
	'=='           shift, and enter state 87
	'!='           shift, and enter state 88
	'<'            shift, and enter state 89
	'<='           shift, and enter state 90
	'>'            shift, and enter state 91
	'>='           shift, and enter state 92
	'&'            shift, and enter state 93
	'|'            shift, and enter state 94
	'('            shift, and enter state 95
	')'            shift, and enter state 172
	'['            shift, and enter state 96
	'.'            shift, and enter state 98
	'->'           shift, and enter state 99
	'<<'           shift, and enter state 100
	'>>'           shift, and enter state 101
	'^'            shift, and enter state 102
	'?'            shift, and enter state 103
	'*='           shift, and enter state 104
	'/='           shift, and enter state 105
	'%='           shift, and enter state 106
	'+='           shift, and enter state 107
	'-='           shift, and enter state 108
	'<<='          shift, and enter state 109
	'>>='          shift, and enter state 110
	'&='           shift, and enter state 111
	'|='           shift, and enter state 112
	'^='           shift, and enter state 113


State 129

	expr -> '(' expr ')' .                              (rule 62)

	else           reduce using rule 62
	'+'            reduce using rule 62
	'-'            reduce using rule 62
	'*'            reduce using rule 62
	'/'            reduce using rule 62
	'++'           reduce using rule 62
	'--'           reduce using rule 62
	'&&'           reduce using rule 62
	'||'           reduce using rule 62
	'%'            reduce using rule 62
	'='            reduce using rule 62
	'=='           reduce using rule 62
	'!='           reduce using rule 62
	'<'            reduce using rule 62
	'<='           reduce using rule 62
	'>'            reduce using rule 62
	'>='           reduce using rule 62
	'&'            reduce using rule 62
	'|'            reduce using rule 62
	'('            reduce using rule 62
	')'            reduce using rule 62
	'['            reduce using rule 62
	']'            reduce using rule 62
	'.'            reduce using rule 62
	':'            reduce using rule 62
	'->'           reduce using rule 62
	'<<'           reduce using rule 62
	'>>'           reduce using rule 62
	'^'            reduce using rule 62
	'?'            reduce using rule 62
	'*='           reduce using rule 62
	'/='           reduce using rule 62
	'%='           reduce using rule 62
	'+='           reduce using rule 62
	'-='           reduce using rule 62
	'<<='          reduce using rule 62
	'>>='          reduce using rule 62
	'&='           reduce using rule 62
	'|='           reduce using rule 62
	'^='           reduce using rule 62
	','            reduce using rule 62
	'}'            reduce using rule 62
	';'            reduce using rule 62


State 130

	assign -> expr . '=' expr                           (rule 2)
	assign -> expr . '*=' expr                          (rule 3)
	assign -> expr . '/=' expr                          (rule 4)
	assign -> expr . '%=' expr                          (rule 5)
	assign -> expr . '+=' expr                          (rule 6)
	assign -> expr . '-=' expr                          (rule 7)
	assign -> expr . '>>=' expr                         (rule 8)
	assign -> expr . '<<=' expr                         (rule 9)
	assign -> expr . '&=' expr                          (rule 10)
	assign -> expr . '^=' expr                          (rule 11)
	assign -> expr '^=' expr .                          (rule 11)
	assign -> expr . '|=' expr                          (rule 12)
	member -> expr . '->' variable                      (rule 13)
	member -> expr . '.' variable                       (rule 14)
	call -> expr . '(' exprs ')'                        (rule 15)
	index -> expr . '[' expr ']'                        (rule 19)
	unary -> expr . '++'                                (rule 21)
	unary -> expr . '--'                                (rule 23)
	binary -> expr . '+' expr                           (rule 31)
	binary -> expr . '*' expr                           (rule 32)
	binary -> expr . '-' expr                           (rule 33)
	binary -> expr . '/' expr                           (rule 34)
	binary -> expr . '%' expr                           (rule 35)
	binary -> expr . '<<' expr                          (rule 36)
	binary -> expr . '>>' expr                          (rule 37)
	binary -> expr . '<' expr                           (rule 38)
	binary -> expr . '>' expr                           (rule 39)
	binary -> expr . '>=' expr                          (rule 40)
	binary -> expr . '<=' expr                          (rule 41)
	binary -> expr . '==' expr                          (rule 42)
	binary -> expr . '!=' expr                          (rule 43)
	binary -> expr . '&&' expr                          (rule 44)
	binary -> expr . '||' expr                          (rule 45)
	binary -> expr . '^' expr                           (rule 46)
	binary -> expr . '&' expr                           (rule 47)
	binary -> expr . '|' expr                           (rule 48)
	ternary -> expr . '?' expr ':' expr                 (rule 49)
	ternary -> expr . '?' ':' expr                      (rule 50)

	else           reduce using rule 11
	'+'            shift, and enter state 77
	'-'            shift, and enter state 78
	'*'            shift, and enter state 79
	'/'            shift, and enter state 80
	'++'           shift, and enter state 81
	'--'           shift, and enter state 82
	'&&'           shift, and enter state 83
	'||'           shift, and enter state 84
	'%'            shift, and enter state 85
	'='            shift, and enter state 86
	'=='           shift, and enter state 87
	'!='           shift, and enter state 88
	'<'            shift, and enter state 89
	'<='           shift, and enter state 90
	'>'            shift, and enter state 91
	'>='           shift, and enter state 92
	'&'            shift, and enter state 93
	'|'            shift, and enter state 94
	'('            shift, and enter state 95
	')'            reduce using rule 11
	'['            shift, and enter state 96
	']'            reduce using rule 11
	'.'            shift, and enter state 98
	':'            reduce using rule 11
	'->'           shift, and enter state 99
	'<<'           shift, and enter state 100
	'>>'           shift, and enter state 101
	'^'            shift, and enter state 102
	'?'            shift, and enter state 103
	'*='           shift, and enter state 104
	'/='           shift, and enter state 105
	'%='           shift, and enter state 106
	'+='           shift, and enter state 107
	'-='           shift, and enter state 108
	'<<='          shift, and enter state 109
	'>>='          shift, and enter state 110
	'&='           shift, and enter state 111
	'|='           shift, and enter state 112
	'^='           shift, and enter state 113
	','            reduce using rule 11
	'}'            reduce using rule 11
	';'            reduce using rule 11


State 131

	assign -> expr . '=' expr                           (rule 2)
	assign -> expr . '*=' expr                          (rule 3)
	assign -> expr . '/=' expr                          (rule 4)
	assign -> expr . '%=' expr                          (rule 5)
	assign -> expr . '+=' expr                          (rule 6)
	assign -> expr . '-=' expr                          (rule 7)
	assign -> expr . '>>=' expr                         (rule 8)
	assign -> expr . '<<=' expr                         (rule 9)
	assign -> expr . '&=' expr                          (rule 10)
	assign -> expr . '^=' expr                          (rule 11)
	assign -> expr . '|=' expr                          (rule 12)
	assign -> expr '|=' expr .                          (rule 12)
	member -> expr . '->' variable                      (rule 13)
	member -> expr . '.' variable                       (rule 14)
	call -> expr . '(' exprs ')'                        (rule 15)
	index -> expr . '[' expr ']'                        (rule 19)
	unary -> expr . '++'                                (rule 21)
	unary -> expr . '--'                                (rule 23)
	binary -> expr . '+' expr                           (rule 31)
	binary -> expr . '*' expr                           (rule 32)
	binary -> expr . '-' expr                           (rule 33)
	binary -> expr . '/' expr                           (rule 34)
	binary -> expr . '%' expr                           (rule 35)
	binary -> expr . '<<' expr                          (rule 36)
	binary -> expr . '>>' expr                          (rule 37)
	binary -> expr . '<' expr                           (rule 38)
	binary -> expr . '>' expr                           (rule 39)
	binary -> expr . '>=' expr                          (rule 40)
	binary -> expr . '<=' expr                          (rule 41)
	binary -> expr . '==' expr                          (rule 42)
	binary -> expr . '!=' expr                          (rule 43)
	binary -> expr . '&&' expr                          (rule 44)
	binary -> expr . '||' expr                          (rule 45)
	binary -> expr . '^' expr                           (rule 46)
	binary -> expr . '&' expr                           (rule 47)
	binary -> expr . '|' expr                           (rule 48)
	ternary -> expr . '?' expr ':' expr                 (rule 49)
	ternary -> expr . '?' ':' expr                      (rule 50)

	else           reduce using rule 12
	'+'            shift, and enter state 77
	'-'            shift, and enter state 78
	'*'            shift, and enter state 79
	'/'            shift, and enter state 80
	'++'           shift, and enter state 81
	'--'           shift, and enter state 82
	'&&'           shift, and enter state 83
	'||'           shift, and enter state 84
	'%'            shift, and enter state 85
	'='            shift, and enter state 86
	'=='           shift, and enter state 87
	'!='           shift, and enter state 88
	'<'            shift, and enter state 89
	'<='           shift, and enter state 90
	'>'            shift, and enter state 91
	'>='           shift, and enter state 92
	'&'            shift, and enter state 93
	'|'            shift, and enter state 94
	'('            shift, and enter state 95
	')'            reduce using rule 12
	'['            shift, and enter state 96
	']'            reduce using rule 12
	'.'            shift, and enter state 98
	':'            reduce using rule 12
	'->'           shift, and enter state 99
	'<<'           shift, and enter state 100
	'>>'           shift, and enter state 101
	'^'            shift, and enter state 102
	'?'            shift, and enter state 103
	'*='           shift, and enter state 104
	'/='           shift, and enter state 105
	'%='           shift, and enter state 106
	'+='           shift, and enter state 107
	'-='           shift, and enter state 108
	'<<='          shift, and enter state 109
	'>>='          shift, and enter state 110
	'&='           shift, and enter state 111
	'|='           shift, and enter state 112
	'^='           shift, and enter state 113
	','            reduce using rule 12
	'}'            reduce using rule 12
	';'            reduce using rule 12


State 132

	assign -> expr . '=' expr                           (rule 2)
	assign -> expr . '*=' expr                          (rule 3)
	assign -> expr . '/=' expr                          (rule 4)
	assign -> expr . '%=' expr                          (rule 5)
	assign -> expr . '+=' expr                          (rule 6)
	assign -> expr . '-=' expr                          (rule 7)
	assign -> expr . '>>=' expr                         (rule 8)
	assign -> expr . '<<=' expr                         (rule 9)
	assign -> expr . '&=' expr                          (rule 10)
	assign -> expr '&=' expr .                          (rule 10)
	assign -> expr . '^=' expr                          (rule 11)
	assign -> expr . '|=' expr                          (rule 12)
	member -> expr . '->' variable                      (rule 13)
	member -> expr . '.' variable                       (rule 14)
	call -> expr . '(' exprs ')'                        (rule 15)
	index -> expr . '[' expr ']'                        (rule 19)
	unary -> expr . '++'                                (rule 21)
	unary -> expr . '--'                                (rule 23)
	binary -> expr . '+' expr                           (rule 31)
	binary -> expr . '*' expr                           (rule 32)
	binary -> expr . '-' expr                           (rule 33)
	binary -> expr . '/' expr                           (rule 34)
	binary -> expr . '%' expr                           (rule 35)
	binary -> expr . '<<' expr                          (rule 36)
	binary -> expr . '>>' expr                          (rule 37)
	binary -> expr . '<' expr                           (rule 38)
	binary -> expr . '>' expr                           (rule 39)
	binary -> expr . '>=' expr                          (rule 40)
	binary -> expr . '<=' expr                          (rule 41)
	binary -> expr . '==' expr                          (rule 42)
	binary -> expr . '!=' expr                          (rule 43)
	binary -> expr . '&&' expr                          (rule 44)
	binary -> expr . '||' expr                          (rule 45)
	binary -> expr . '^' expr                           (rule 46)
	binary -> expr . '&' expr                           (rule 47)
	binary -> expr . '|' expr                           (rule 48)
	ternary -> expr . '?' expr ':' expr                 (rule 49)
	ternary -> expr . '?' ':' expr                      (rule 50)

	else           reduce using rule 10
	'+'            shift, and enter state 77
	'-'            shift, and enter state 78
	'*'            shift, and enter state 79
	'/'            shift, and enter state 80
	'++'           shift, and enter state 81
	'--'           shift, and enter state 82
	'&&'           shift, and enter state 83
	'||'           shift, and enter state 84
	'%'            shift, and enter state 85
	'='            shift, and enter state 86
	'=='           shift, and enter state 87
	'!='           shift, and enter state 88
	'<'            shift, and enter state 89
	'<='           shift, and enter state 90
	'>'            shift, and enter state 91
	'>='           shift, and enter state 92
	'&'            shift, and enter state 93
	'|'            shift, and enter state 94
	'('            shift, and enter state 95
	')'            reduce using rule 10
	'['            shift, and enter state 96
	']'            reduce using rule 10
	'.'            shift, and enter state 98
	':'            reduce using rule 10
	'->'           shift, and enter state 99
	'<<'           shift, and enter state 100
	'>>'           shift, and enter state 101
	'^'            shift, and enter state 102
	'?'            shift, and enter state 103
	'*='           shift, and enter state 104
	'/='           shift, and enter state 105
	'%='           shift, and enter state 106
	'+='           shift, and enter state 107
	'-='           shift, and enter state 108
	'<<='          shift, and enter state 109
	'>>='          shift, and enter state 110
	'&='           shift, and enter state 111
	'|='           shift, and enter state 112
	'^='           shift, and enter state 113
	','            reduce using rule 10
	'}'            reduce using rule 10
	';'            reduce using rule 10


State 133

	assign -> expr . '=' expr                           (rule 2)
	assign -> expr . '*=' expr                          (rule 3)
	assign -> expr . '/=' expr                          (rule 4)
	assign -> expr . '%=' expr                          (rule 5)
	assign -> expr . '+=' expr                          (rule 6)
	assign -> expr . '-=' expr                          (rule 7)
	assign -> expr . '>>=' expr                         (rule 8)
	assign -> expr '>>=' expr .                         (rule 8)
	assign -> expr . '<<=' expr                         (rule 9)
	assign -> expr . '&=' expr                          (rule 10)
	assign -> expr . '^=' expr                          (rule 11)
	assign -> expr . '|=' expr                          (rule 12)
	member -> expr . '->' variable                      (rule 13)
	member -> expr . '.' variable                       (rule 14)
	call -> expr . '(' exprs ')'                        (rule 15)
	index -> expr . '[' expr ']'                        (rule 19)
	unary -> expr . '++'                                (rule 21)
	unary -> expr . '--'                                (rule 23)
	binary -> expr . '+' expr                           (rule 31)
	binary -> expr . '*' expr                           (rule 32)
	binary -> expr . '-' expr                           (rule 33)
	binary -> expr . '/' expr                           (rule 34)
	binary -> expr . '%' expr                           (rule 35)
	binary -> expr . '<<' expr                          (rule 36)
	binary -> expr . '>>' expr                          (rule 37)
	binary -> expr . '<' expr                           (rule 38)
	binary -> expr . '>' expr                           (rule 39)
	binary -> expr . '>=' expr                          (rule 40)
	binary -> expr . '<=' expr                          (rule 41)
	binary -> expr . '==' expr                          (rule 42)
	binary -> expr . '!=' expr                          (rule 43)
	binary -> expr . '&&' expr                          (rule 44)
	binary -> expr . '||' expr                          (rule 45)
	binary -> expr . '^' expr                           (rule 46)
	binary -> expr . '&' expr                           (rule 47)
	binary -> expr . '|' expr                           (rule 48)
	ternary -> expr . '?' expr ':' expr                 (rule 49)
	ternary -> expr . '?' ':' expr                      (rule 50)

	else           reduce using rule 8
	'+'            shift, and enter state 77
	'-'            shift, and enter state 78
	'*'            shift, and enter state 79
	'/'            shift, and enter state 80
	'++'           shift, and enter state 81
	'--'           shift, and enter state 82
	'&&'           shift, and enter state 83
	'||'           shift, and enter state 84
	'%'            shift, and enter state 85
	'='            shift, and enter state 86
	'=='           shift, and enter state 87
	'!='           shift, and enter state 88
	'<'            shift, and enter state 89
	'<='           shift, and enter state 90
	'>'            shift, and enter state 91
	'>='           shift, and enter state 92
	'&'            shift, and enter state 93
	'|'            shift, and enter state 94
	'('            shift, and enter state 95
	')'            reduce using rule 8
	'['            shift, and enter state 96
	']'            reduce using rule 8
	'.'            shift, and enter state 98
	':'            reduce using rule 8
	'->'           shift, and enter state 99
	'<<'           shift, and enter state 100
	'>>'           shift, and enter state 101
	'^'            shift, and enter state 102
	'?'            shift, and enter state 103
	'*='           shift, and enter state 104
	'/='           shift, and enter state 105
	'%='           shift, and enter state 106
	'+='           shift, and enter state 107
	'-='           shift, and enter state 108
	'<<='          shift, and enter state 109
	'>>='          shift, and enter state 110
	'&='           shift, and enter state 111
	'|='           shift, and enter state 112
	'^='           shift, and enter state 113
	','            reduce using rule 8
	'}'            reduce using rule 8
	';'            reduce using rule 8


State 134

	assign -> expr . '=' expr                           (rule 2)
	assign -> expr . '*=' expr                          (rule 3)
	assign -> expr . '/=' expr                          (rule 4)
	assign -> expr . '%=' expr                          (rule 5)
	assign -> expr . '+=' expr                          (rule 6)
	assign -> expr . '-=' expr                          (rule 7)
	assign -> expr . '>>=' expr                         (rule 8)
	assign -> expr . '<<=' expr                         (rule 9)
	assign -> expr '<<=' expr .                         (rule 9)
	assign -> expr . '&=' expr                          (rule 10)
	assign -> expr . '^=' expr                          (rule 11)
	assign -> expr . '|=' expr                          (rule 12)
	member -> expr . '->' variable                      (rule 13)
	member -> expr . '.' variable                       (rule 14)
	call -> expr . '(' exprs ')'                        (rule 15)
	index -> expr . '[' expr ']'                        (rule 19)
	unary -> expr . '++'                                (rule 21)
	unary -> expr . '--'                                (rule 23)
	binary -> expr . '+' expr                           (rule 31)
	binary -> expr . '*' expr                           (rule 32)
	binary -> expr . '-' expr                           (rule 33)
	binary -> expr . '/' expr                           (rule 34)
	binary -> expr . '%' expr                           (rule 35)
	binary -> expr . '<<' expr                          (rule 36)
	binary -> expr . '>>' expr                          (rule 37)
	binary -> expr . '<' expr                           (rule 38)
	binary -> expr . '>' expr                           (rule 39)
	binary -> expr . '>=' expr                          (rule 40)
	binary -> expr . '<=' expr                          (rule 41)
	binary -> expr . '==' expr                          (rule 42)
	binary -> expr . '!=' expr                          (rule 43)
	binary -> expr . '&&' expr                          (rule 44)
	binary -> expr . '||' expr                          (rule 45)
	binary -> expr . '^' expr                           (rule 46)
	binary -> expr . '&' expr                           (rule 47)
	binary -> expr . '|' expr                           (rule 48)
	ternary -> expr . '?' expr ':' expr                 (rule 49)
	ternary -> expr . '?' ':' expr                      (rule 50)

	else           reduce using rule 9
	'+'            shift, and enter state 77
	'-'            shift, and enter state 78
	'*'            shift, and enter state 79
	'/'            shift, and enter state 80
	'++'           shift, and enter state 81
	'--'           shift, and enter state 82
	'&&'           shift, and enter state 83
	'||'           shift, and enter state 84
	'%'            shift, and enter state 85
	'='            shift, and enter state 86
	'=='           shift, and enter state 87
	'!='           shift, and enter state 88
	'<'            shift, and enter state 89
	'<='           shift, and enter state 90
	'>'            shift, and enter state 91
	'>='           shift, and enter state 92
	'&'            shift, and enter state 93
	'|'            shift, and enter state 94
	'('            shift, and enter state 95
	')'            reduce using rule 9
	'['            shift, and enter state 96
	']'            reduce using rule 9
	'.'            shift, and enter state 98
	':'            reduce using rule 9
	'->'           shift, and enter state 99
	'<<'           shift, and enter state 100
	'>>'           shift, and enter state 101
	'^'            shift, and enter state 102
	'?'            shift, and enter state 103
	'*='           shift, and enter state 104
	'/='           shift, and enter state 105
	'%='           shift, and enter state 106
	'+='           shift, and enter state 107
	'-='           shift, and enter state 108
	'<<='          shift, and enter state 109
	'>>='          shift, and enter state 110
	'&='           shift, and enter state 111
	'|='           shift, and enter state 112
	'^='           shift, and enter state 113
	','            reduce using rule 9
	'}'            reduce using rule 9
	';'            reduce using rule 9


State 135

	assign -> expr . '=' expr                           (rule 2)
	assign -> expr . '*=' expr                          (rule 3)
	assign -> expr . '/=' expr                          (rule 4)
	assign -> expr . '%=' expr                          (rule 5)
	assign -> expr . '+=' expr                          (rule 6)
	assign -> expr . '-=' expr                          (rule 7)
	assign -> expr '-=' expr .                          (rule 7)
	assign -> expr . '>>=' expr                         (rule 8)
	assign -> expr . '<<=' expr                         (rule 9)
	assign -> expr . '&=' expr                          (rule 10)
	assign -> expr . '^=' expr                          (rule 11)
	assign -> expr . '|=' expr                          (rule 12)
	member -> expr . '->' variable                      (rule 13)
	member -> expr . '.' variable                       (rule 14)
	call -> expr . '(' exprs ')'                        (rule 15)
	index -> expr . '[' expr ']'                        (rule 19)
	unary -> expr . '++'                                (rule 21)
	unary -> expr . '--'                                (rule 23)
	binary -> expr . '+' expr                           (rule 31)
	binary -> expr . '*' expr                           (rule 32)
	binary -> expr . '-' expr                           (rule 33)
	binary -> expr . '/' expr                           (rule 34)
	binary -> expr . '%' expr                           (rule 35)
	binary -> expr . '<<' expr                          (rule 36)
	binary -> expr . '>>' expr                          (rule 37)
	binary -> expr . '<' expr                           (rule 38)
	binary -> expr . '>' expr                           (rule 39)
	binary -> expr . '>=' expr                          (rule 40)
	binary -> expr . '<=' expr                          (rule 41)
	binary -> expr . '==' expr                          (rule 42)
	binary -> expr . '!=' expr                          (rule 43)
	binary -> expr . '&&' expr                          (rule 44)
	binary -> expr . '||' expr                          (rule 45)
	binary -> expr . '^' expr                           (rule 46)
	binary -> expr . '&' expr                           (rule 47)
	binary -> expr . '|' expr                           (rule 48)
	ternary -> expr . '?' expr ':' expr                 (rule 49)
	ternary -> expr . '?' ':' expr                      (rule 50)

	else           reduce using rule 7
	'+'            shift, and enter state 77
	'-'            shift, and enter state 78
	'*'            shift, and enter state 79
	'/'            shift, and enter state 80
	'++'           shift, and enter state 81
	'--'           shift, and enter state 82
	'&&'           shift, and enter state 83
	'||'           shift, and enter state 84
	'%'            shift, and enter state 85
	'='            shift, and enter state 86
	'=='           shift, and enter state 87
	'!='           shift, and enter state 88
	'<'            shift, and enter state 89
	'<='           shift, and enter state 90
	'>'            shift, and enter state 91
	'>='           shift, and enter state 92
	'&'            shift, and enter state 93
	'|'            shift, and enter state 94
	'('            shift, and enter state 95
	')'            reduce using rule 7
	'['            shift, and enter state 96
	']'            reduce using rule 7
	'.'            shift, and enter state 98
	':'            reduce using rule 7
	'->'           shift, and enter state 99
	'<<'           shift, and enter state 100
	'>>'           shift, and enter state 101
	'^'            shift, and enter state 102
	'?'            shift, and enter state 103
	'*='           shift, and enter state 104
	'/='           shift, and enter state 105
	'%='           shift, and enter state 106
	'+='           shift, and enter state 107
	'-='           shift, and enter state 108
	'<<='          shift, and enter state 109
	'>>='          shift, and enter state 110
	'&='           shift, and enter state 111
	'|='           shift, and enter state 112
	'^='           shift, and enter state 113
	','            reduce using rule 7
	'}'            reduce using rule 7
	';'            reduce using rule 7


State 136

	assign -> expr . '=' expr                           (rule 2)
	assign -> expr . '*=' expr                          (rule 3)
	assign -> expr . '/=' expr                          (rule 4)
	assign -> expr . '%=' expr                          (rule 5)
	assign -> expr . '+=' expr                          (rule 6)
	assign -> expr '+=' expr .                          (rule 6)
	assign -> expr . '-=' expr                          (rule 7)
	assign -> expr . '>>=' expr                         (rule 8)
	assign -> expr . '<<=' expr                         (rule 9)
	assign -> expr . '&=' expr                          (rule 10)
	assign -> expr . '^=' expr                          (rule 11)
	assign -> expr . '|=' expr                          (rule 12)
	member -> expr . '->' variable                      (rule 13)
	member -> expr . '.' variable                       (rule 14)
	call -> expr . '(' exprs ')'                        (rule 15)
	index -> expr . '[' expr ']'                        (rule 19)
	unary -> expr . '++'                                (rule 21)
	unary -> expr . '--'                                (rule 23)
	binary -> expr . '+' expr                           (rule 31)
	binary -> expr . '*' expr                           (rule 32)
	binary -> expr . '-' expr                           (rule 33)
	binary -> expr . '/' expr                           (rule 34)
	binary -> expr . '%' expr                           (rule 35)
	binary -> expr . '<<' expr                          (rule 36)
	binary -> expr . '>>' expr                          (rule 37)
	binary -> expr . '<' expr                           (rule 38)
	binary -> expr . '>' expr                           (rule 39)
	binary -> expr . '>=' expr                          (rule 40)
	binary -> expr . '<=' expr                          (rule 41)
	binary -> expr . '==' expr                          (rule 42)
	binary -> expr . '!=' expr                          (rule 43)
	binary -> expr . '&&' expr                          (rule 44)
	binary -> expr . '||' expr                          (rule 45)
	binary -> expr . '^' expr                           (rule 46)
	binary -> expr . '&' expr                           (rule 47)
	binary -> expr . '|' expr                           (rule 48)
	ternary -> expr . '?' expr ':' expr                 (rule 49)
	ternary -> expr . '?' ':' expr                      (rule 50)

	else           reduce using rule 6
	'+'            shift, and enter state 77
	'-'            shift, and enter state 78
	'*'            shift, and enter state 79
	'/'            shift, and enter state 80
	'++'           shift, and enter state 81
	'--'           shift, and enter state 82
	'&&'           shift, and enter state 83
	'||'           shift, and enter state 84
	'%'            shift, and enter state 85
	'='            shift, and enter state 86
	'=='           shift, and enter state 87
	'!='           shift, and enter state 88
	'<'            shift, and enter state 89
	'<='           shift, and enter state 90
	'>'            shift, and enter state 91
	'>='           shift, and enter state 92
	'&'            shift, and enter state 93
	'|'            shift, and enter state 94
	'('            shift, and enter state 95
	')'            reduce using rule 6
	'['            shift, and enter state 96
	']'            reduce using rule 6
	'.'            shift, and enter state 98
	':'            reduce using rule 6
	'->'           shift, and enter state 99
	'<<'           shift, and enter state 100
	'>>'           shift, and enter state 101
	'^'            shift, and enter state 102
	'?'            shift, and enter state 103
	'*='           shift, and enter state 104
	'/='           shift, and enter state 105
	'%='           shift, and enter state 106
	'+='           shift, and enter state 107
	'-='           shift, and enter state 108
	'<<='          shift, and enter state 109
	'>>='          shift, and enter state 110
	'&='           shift, and enter state 111
	'|='           shift, and enter state 112
	'^='           shift, and enter state 113
	','            reduce using rule 6
	'}'            reduce using rule 6
	';'            reduce using rule 6


State 137

	assign -> expr . '=' expr                           (rule 2)
	assign -> expr . '*=' expr                          (rule 3)
	assign -> expr . '/=' expr                          (rule 4)
	assign -> expr . '%=' expr                          (rule 5)
	assign -> expr '%=' expr .                          (rule 5)
	assign -> expr . '+=' expr                          (rule 6)
	assign -> expr . '-=' expr                          (rule 7)
	assign -> expr . '>>=' expr                         (rule 8)
	assign -> expr . '<<=' expr                         (rule 9)
	assign -> expr . '&=' expr                          (rule 10)
	assign -> expr . '^=' expr                          (rule 11)
	assign -> expr . '|=' expr                          (rule 12)
	member -> expr . '->' variable                      (rule 13)
	member -> expr . '.' variable                       (rule 14)
	call -> expr . '(' exprs ')'                        (rule 15)
	index -> expr . '[' expr ']'                        (rule 19)
	unary -> expr . '++'                                (rule 21)
	unary -> expr . '--'                                (rule 23)
	binary -> expr . '+' expr                           (rule 31)
	binary -> expr . '*' expr                           (rule 32)
	binary -> expr . '-' expr                           (rule 33)
	binary -> expr . '/' expr                           (rule 34)
	binary -> expr . '%' expr                           (rule 35)
	binary -> expr . '<<' expr                          (rule 36)
	binary -> expr . '>>' expr                          (rule 37)
	binary -> expr . '<' expr                           (rule 38)
	binary -> expr . '>' expr                           (rule 39)
	binary -> expr . '>=' expr                          (rule 40)
	binary -> expr . '<=' expr                          (rule 41)
	binary -> expr . '==' expr                          (rule 42)
	binary -> expr . '!=' expr                          (rule 43)
	binary -> expr . '&&' expr                          (rule 44)
	binary -> expr . '||' expr                          (rule 45)
	binary -> expr . '^' expr                           (rule 46)
	binary -> expr . '&' expr                           (rule 47)
	binary -> expr . '|' expr                           (rule 48)
	ternary -> expr . '?' expr ':' expr                 (rule 49)
	ternary -> expr . '?' ':' expr                      (rule 50)

	else           reduce using rule 5
	'+'            shift, and enter state 77
	'-'            shift, and enter state 78
	'*'            shift, and enter state 79
	'/'            shift, and enter state 80
	'++'           shift, and enter state 81
	'--'           shift, and enter state 82
	'&&'           shift, and enter state 83
	'||'           shift, and enter state 84
	'%'            shift, and enter state 85
	'='            shift, and enter state 86
	'=='           shift, and enter state 87
	'!='           shift, and enter state 88
	'<'            shift, and enter state 89
	'<='           shift, and enter state 90
	'>'            shift, and enter state 91
	'>='           shift, and enter state 92
	'&'            shift, and enter state 93
	'|'            shift, and enter state 94
	'('            shift, and enter state 95
	')'            reduce using rule 5
	'['            shift, and enter state 96
	']'            reduce using rule 5
	'.'            shift, and enter state 98
	':'            reduce using rule 5
	'->'           shift, and enter state 99
	'<<'           shift, and enter state 100
	'>>'           shift, and enter state 101
	'^'            shift, and enter state 102
	'?'            shift, and enter state 103
	'*='           shift, and enter state 104
	'/='           shift, and enter state 105
	'%='           shift, and enter state 106
	'+='           shift, and enter state 107
	'-='           shift, and enter state 108
	'<<='          shift, and enter state 109
	'>>='          shift, and enter state 110
	'&='           shift, and enter state 111
	'|='           shift, and enter state 112
	'^='           shift, and enter state 113
	','            reduce using rule 5
	'}'            reduce using rule 5
	';'            reduce using rule 5


State 138

	assign -> expr . '=' expr                           (rule 2)
	assign -> expr . '*=' expr                          (rule 3)
	assign -> expr . '/=' expr                          (rule 4)
	assign -> expr '/=' expr .                          (rule 4)
	assign -> expr . '%=' expr                          (rule 5)
	assign -> expr . '+=' expr                          (rule 6)
	assign -> expr . '-=' expr                          (rule 7)
	assign -> expr . '>>=' expr                         (rule 8)
	assign -> expr . '<<=' expr                         (rule 9)
	assign -> expr . '&=' expr                          (rule 10)
	assign -> expr . '^=' expr                          (rule 11)
	assign -> expr . '|=' expr                          (rule 12)
	member -> expr . '->' variable                      (rule 13)
	member -> expr . '.' variable                       (rule 14)
	call -> expr . '(' exprs ')'                        (rule 15)
	index -> expr . '[' expr ']'                        (rule 19)
	unary -> expr . '++'                                (rule 21)
	unary -> expr . '--'                                (rule 23)
	binary -> expr . '+' expr                           (rule 31)
	binary -> expr . '*' expr                           (rule 32)
	binary -> expr . '-' expr                           (rule 33)
	binary -> expr . '/' expr                           (rule 34)
	binary -> expr . '%' expr                           (rule 35)
	binary -> expr . '<<' expr                          (rule 36)
	binary -> expr . '>>' expr                          (rule 37)
	binary -> expr . '<' expr                           (rule 38)
	binary -> expr . '>' expr                           (rule 39)
	binary -> expr . '>=' expr                          (rule 40)
	binary -> expr . '<=' expr                          (rule 41)
	binary -> expr . '==' expr                          (rule 42)
	binary -> expr . '!=' expr                          (rule 43)
	binary -> expr . '&&' expr                          (rule 44)
	binary -> expr . '||' expr                          (rule 45)
	binary -> expr . '^' expr                           (rule 46)
	binary -> expr . '&' expr                           (rule 47)
	binary -> expr . '|' expr                           (rule 48)
	ternary -> expr . '?' expr ':' expr                 (rule 49)
	ternary -> expr . '?' ':' expr                      (rule 50)

	else           reduce using rule 4
	'+'            shift, and enter state 77
	'-'            shift, and enter state 78
	'*'            shift, and enter state 79
	'/'            shift, and enter state 80
	'++'           shift, and enter state 81
	'--'           shift, and enter state 82
	'&&'           shift, and enter state 83
	'||'           shift, and enter state 84
	'%'            shift, and enter state 85
	'='            shift, and enter state 86
	'=='           shift, and enter state 87
	'!='           shift, and enter state 88
	'<'            shift, and enter state 89
	'<='           shift, and enter state 90
	'>'            shift, and enter state 91
	'>='           shift, and enter state 92
	'&'            shift, and enter state 93
	'|'            shift, and enter state 94
	'('            shift, and enter state 95
	')'            reduce using rule 4
	'['            shift, and enter state 96
	']'            reduce using rule 4
	'.'            shift, and enter state 98
	':'            reduce using rule 4
	'->'           shift, and enter state 99
	'<<'           shift, and enter state 100
	'>>'           shift, and enter state 101
	'^'            shift, and enter state 102
	'?'            shift, and enter state 103
	'*='           shift, and enter state 104
	'/='           shift, and enter state 105
	'%='           shift, and enter state 106
	'+='           shift, and enter state 107
	'-='           shift, and enter state 108
	'<<='          shift, and enter state 109
	'>>='          shift, and enter state 110
	'&='           shift, and enter state 111
	'|='           shift, and enter state 112
	'^='           shift, and enter state 113
	','            reduce using rule 4
	'}'            reduce using rule 4
	';'            reduce using rule 4


State 139

	assign -> expr . '=' expr                           (rule 2)
	assign -> expr . '*=' expr                          (rule 3)
	assign -> expr '*=' expr .                          (rule 3)
	assign -> expr . '/=' expr                          (rule 4)
	assign -> expr . '%=' expr                          (rule 5)
	assign -> expr . '+=' expr                          (rule 6)
	assign -> expr . '-=' expr                          (rule 7)
	assign -> expr . '>>=' expr                         (rule 8)
	assign -> expr . '<<=' expr                         (rule 9)
	assign -> expr . '&=' expr                          (rule 10)
	assign -> expr . '^=' expr                          (rule 11)
	assign -> expr . '|=' expr                          (rule 12)
	member -> expr . '->' variable                      (rule 13)
	member -> expr . '.' variable                       (rule 14)
	call -> expr . '(' exprs ')'                        (rule 15)
	index -> expr . '[' expr ']'                        (rule 19)
	unary -> expr . '++'                                (rule 21)
	unary -> expr . '--'                                (rule 23)
	binary -> expr . '+' expr                           (rule 31)
	binary -> expr . '*' expr                           (rule 32)
	binary -> expr . '-' expr                           (rule 33)
	binary -> expr . '/' expr                           (rule 34)
	binary -> expr . '%' expr                           (rule 35)
	binary -> expr . '<<' expr                          (rule 36)
	binary -> expr . '>>' expr                          (rule 37)
	binary -> expr . '<' expr                           (rule 38)
	binary -> expr . '>' expr                           (rule 39)
	binary -> expr . '>=' expr                          (rule 40)
	binary -> expr . '<=' expr                          (rule 41)
	binary -> expr . '==' expr                          (rule 42)
	binary -> expr . '!=' expr                          (rule 43)
	binary -> expr . '&&' expr                          (rule 44)
	binary -> expr . '||' expr                          (rule 45)
	binary -> expr . '^' expr                           (rule 46)
	binary -> expr . '&' expr                           (rule 47)
	binary -> expr . '|' expr                           (rule 48)
	ternary -> expr . '?' expr ':' expr                 (rule 49)
	ternary -> expr . '?' ':' expr                      (rule 50)

	else           reduce using rule 3
	'+'            shift, and enter state 77
	'-'            shift, and enter state 78
	'*'            shift, and enter state 79
	'/'            shift, and enter state 80
	'++'           shift, and enter state 81
	'--'           shift, and enter state 82
	'&&'           shift, and enter state 83
	'||'           shift, and enter state 84
	'%'            shift, and enter state 85
	'='            shift, and enter state 86
	'=='           shift, and enter state 87
	'!='           shift, and enter state 88
	'<'            shift, and enter state 89
	'<='           shift, and enter state 90
	'>'            shift, and enter state 91
	'>='           shift, and enter state 92
	'&'            shift, and enter state 93
	'|'            shift, and enter state 94
	'('            shift, and enter state 95
	')'            reduce using rule 3
	'['            shift, and enter state 96
	']'            reduce using rule 3
	'.'            shift, and enter state 98
	':'            reduce using rule 3
	'->'           shift, and enter state 99
	'<<'           shift, and enter state 100
	'>>'           shift, and enter state 101
	'^'            shift, and enter state 102
	'?'            shift, and enter state 103
	'*='           shift, and enter state 104
	'/='           shift, and enter state 105
	'%='           shift, and enter state 106
	'+='           shift, and enter state 107
	'-='           shift, and enter state 108
	'<<='          shift, and enter state 109
	'>>='          shift, and enter state 110
	'&='           shift, and enter state 111
	'|='           shift, and enter state 112
	'^='           shift, and enter state 113
	','            reduce using rule 3
	'}'            reduce using rule 3
	';'            reduce using rule 3


State 140

	assign -> expr . '=' expr                           (rule 2)
	assign -> expr . '*=' expr                          (rule 3)
	assign -> expr . '/=' expr                          (rule 4)
	assign -> expr . '%=' expr                          (rule 5)
	assign -> expr . '+=' expr                          (rule 6)
	assign -> expr . '-=' expr                          (rule 7)
	assign -> expr . '>>=' expr                         (rule 8)
	assign -> expr . '<<=' expr                         (rule 9)
	assign -> expr . '&=' expr                          (rule 10)
	assign -> expr . '^=' expr                          (rule 11)
	assign -> expr . '|=' expr                          (rule 12)
	member -> expr . '->' variable                      (rule 13)
	member -> expr . '.' variable                       (rule 14)
	call -> expr . '(' exprs ')'                        (rule 15)
	index -> expr . '[' expr ']'                        (rule 19)
	unary -> expr . '++'                                (rule 21)
	unary -> expr . '--'                                (rule 23)
	binary -> expr . '+' expr                           (rule 31)
	binary -> expr . '*' expr                           (rule 32)
	binary -> expr . '-' expr                           (rule 33)
	binary -> expr . '/' expr                           (rule 34)
	binary -> expr . '%' expr                           (rule 35)
	binary -> expr . '<<' expr                          (rule 36)
	binary -> expr . '>>' expr                          (rule 37)
	binary -> expr . '<' expr                           (rule 38)
	binary -> expr . '>' expr                           (rule 39)
	binary -> expr . '>=' expr                          (rule 40)
	binary -> expr . '<=' expr                          (rule 41)
	binary -> expr . '==' expr                          (rule 42)
	binary -> expr . '!=' expr                          (rule 43)
	binary -> expr . '&&' expr                          (rule 44)
	binary -> expr . '||' expr                          (rule 45)
	binary -> expr . '^' expr                           (rule 46)
	binary -> expr . '&' expr                           (rule 47)
	binary -> expr . '|' expr                           (rule 48)
	ternary -> expr . '?' expr ':' expr                 (rule 49)
	ternary -> expr '?' expr . ':' expr                 (rule 49)
	ternary -> expr . '?' ':' expr                      (rule 50)

	'+'            shift, and enter state 77
	'-'            shift, and enter state 78
	'*'            shift, and enter state 79
	'/'            shift, and enter state 80
	'++'           shift, and enter state 81
	'--'           shift, and enter state 82
	'&&'           shift, and enter state 83
	'||'           shift, and enter state 84
	'%'            shift, and enter state 85
	'='            shift, and enter state 86
	'=='           shift, and enter state 87
	'!='           shift, and enter state 88
	'<'            shift, and enter state 89
	'<='           shift, and enter state 90
	'>'            shift, and enter state 91
	'>='           shift, and enter state 92
	'&'            shift, and enter state 93
	'|'            shift, and enter state 94
	'('            shift, and enter state 95
	'['            shift, and enter state 96
	'.'            shift, and enter state 98
	':'            shift, and enter state 171
	'->'           shift, and enter state 99
	'<<'           shift, and enter state 100
	'>>'           shift, and enter state 101
	'^'            shift, and enter state 102
	'?'            shift, and enter state 103
	'*='           shift, and enter state 104
	'/='           shift, and enter state 105
	'%='           shift, and enter state 106
	'+='           shift, and enter state 107
	'-='           shift, and enter state 108
	'<<='          shift, and enter state 109
	'>>='          shift, and enter state 110
	'&='           shift, and enter state 111
	'|='           shift, and enter state 112
	'^='           shift, and enter state 113


State 141

	ternary -> expr '?' ':' . expr                      (rule 50)

	identifier     shift, and enter state 2
	integer_const  shift, and enter state 59
	float_const    shift, and enter state 60
	char_const     shift, and enter state 61
	sizeof         shift, and enter state 63
	'+'            shift, and enter state 64
	'-'            shift, and enter state 65
	'*'            shift, and enter state 66
	'++'           shift, and enter state 67
	'--'           shift, and enter state 68
	'!'            shift, and enter state 69
	'~'            shift, and enter state 70
	'&'            shift, and enter state 71
	'('            shift, and enter state 72

	variable       goto state 46
	assign         goto state 47
	member         goto state 48
	call           goto state 49
	index          goto state 50
	unary          goto state 51
	binary         goto state 52
	ternary        goto state 53
	expr           goto state 170

State 142

	assign -> expr . '=' expr                           (rule 2)
	assign -> expr . '*=' expr                          (rule 3)
	assign -> expr . '/=' expr                          (rule 4)
	assign -> expr . '%=' expr                          (rule 5)
	assign -> expr . '+=' expr                          (rule 6)
	assign -> expr . '-=' expr                          (rule 7)
	assign -> expr . '>>=' expr                         (rule 8)
	assign -> expr . '<<=' expr                         (rule 9)
	assign -> expr . '&=' expr                          (rule 10)
	assign -> expr . '^=' expr                          (rule 11)
	assign -> expr . '|=' expr                          (rule 12)
	member -> expr . '->' variable                      (rule 13)
	member -> expr . '.' variable                       (rule 14)
	call -> expr . '(' exprs ')'                        (rule 15)
	index -> expr . '[' expr ']'                        (rule 19)
	unary -> expr . '++'                                (rule 21)
	unary -> expr . '--'                                (rule 23)
	binary -> expr . '+' expr                           (rule 31)
	binary -> expr . '*' expr                           (rule 32)
	binary -> expr . '-' expr                           (rule 33)
	binary -> expr . '/' expr                           (rule 34)
	binary -> expr . '%' expr                           (rule 35)
	binary -> expr . '<<' expr                          (rule 36)
	binary -> expr . '>>' expr                          (rule 37)
	binary -> expr . '<' expr                           (rule 38)
	binary -> expr . '>' expr                           (rule 39)
	binary -> expr . '>=' expr                          (rule 40)
	binary -> expr . '<=' expr                          (rule 41)
	binary -> expr . '==' expr                          (rule 42)
	binary -> expr . '!=' expr                          (rule 43)
	binary -> expr . '&&' expr                          (rule 44)
	binary -> expr . '||' expr                          (rule 45)
	binary -> expr . '^' expr                           (rule 46)
	binary -> expr '^' expr .                           (rule 46)
	binary -> expr . '&' expr                           (rule 47)
	binary -> expr . '|' expr                           (rule 48)
	ternary -> expr . '?' expr ':' expr                 (rule 49)
	ternary -> expr . '?' ':' expr                      (rule 50)

	else           reduce using rule 46
	'+'            shift, and enter state 77
	'-'            shift, and enter state 78
	'*'            shift, and enter state 79
	'/'            shift, and enter state 80
	'++'           shift, and enter state 81
	'--'           shift, and enter state 82
	'&&'           reduce using rule 46
	'||'           reduce using rule 46
	'%'            shift, and enter state 85
	'='            reduce using rule 46
	'=='           shift, and enter state 87
	'!='           shift, and enter state 88
	'<'            shift, and enter state 89
	'<='           shift, and enter state 90
	'>'            shift, and enter state 91
	'>='           shift, and enter state 92
	'&'            shift, and enter state 93
	'|'            reduce using rule 46
	'('            shift, and enter state 95
	')'            reduce using rule 46
	'['            shift, and enter state 96
	']'            reduce using rule 46
	'.'            shift, and enter state 98
	':'            reduce using rule 46
	'->'           shift, and enter state 99
	'<<'           shift, and enter state 100
	'>>'           shift, and enter state 101
	'^'            reduce using rule 46
	'?'            reduce using rule 46
	'*='           reduce using rule 46
	'/='           reduce using rule 46
	'%='           reduce using rule 46
	'+='           reduce using rule 46
	'-='           reduce using rule 46
	'<<='          reduce using rule 46
	'>>='          reduce using rule 46
	'&='           reduce using rule 46
	'|='           reduce using rule 46
	'^='           reduce using rule 46
	','            reduce using rule 46
	'}'            reduce using rule 46
	';'            reduce using rule 46


State 143

	assign -> expr . '=' expr                           (rule 2)
	assign -> expr . '*=' expr                          (rule 3)
	assign -> expr . '/=' expr                          (rule 4)
	assign -> expr . '%=' expr                          (rule 5)
	assign -> expr . '+=' expr                          (rule 6)
	assign -> expr . '-=' expr                          (rule 7)
	assign -> expr . '>>=' expr                         (rule 8)
	assign -> expr . '<<=' expr                         (rule 9)
	assign -> expr . '&=' expr                          (rule 10)
	assign -> expr . '^=' expr                          (rule 11)
	assign -> expr . '|=' expr                          (rule 12)
	member -> expr . '->' variable                      (rule 13)
	member -> expr . '.' variable                       (rule 14)
	call -> expr . '(' exprs ')'                        (rule 15)
	index -> expr . '[' expr ']'                        (rule 19)
	unary -> expr . '++'                                (rule 21)
	unary -> expr . '--'                                (rule 23)
	binary -> expr . '+' expr                           (rule 31)
	binary -> expr . '*' expr                           (rule 32)
	binary -> expr . '-' expr                           (rule 33)
	binary -> expr . '/' expr                           (rule 34)
	binary -> expr . '%' expr                           (rule 35)
	binary -> expr . '<<' expr                          (rule 36)
	binary -> expr . '>>' expr                          (rule 37)
	binary -> expr '>>' expr .                          (rule 37)
	binary -> expr . '<' expr                           (rule 38)
	binary -> expr . '>' expr                           (rule 39)
	binary -> expr . '>=' expr                          (rule 40)
	binary -> expr . '<=' expr                          (rule 41)
	binary -> expr . '==' expr                          (rule 42)
	binary -> expr . '!=' expr                          (rule 43)
	binary -> expr . '&&' expr                          (rule 44)
	binary -> expr . '||' expr                          (rule 45)
	binary -> expr . '^' expr                           (rule 46)
	binary -> expr . '&' expr                           (rule 47)
	binary -> expr . '|' expr                           (rule 48)
	ternary -> expr . '?' expr ':' expr                 (rule 49)
	ternary -> expr . '?' ':' expr                      (rule 50)

	else           reduce using rule 37
	'+'            shift, and enter state 77
	'-'            shift, and enter state 78
	'*'            shift, and enter state 79
	'/'            shift, and enter state 80
	'++'           shift, and enter state 81
	'--'           shift, and enter state 82
	'&&'           reduce using rule 37
	'||'           reduce using rule 37
	'%'            shift, and enter state 85
	'='            reduce using rule 37
	'=='           reduce using rule 37
	'!='           reduce using rule 37
	'<'            reduce using rule 37
	'<='           reduce using rule 37
	'>'            reduce using rule 37
	'>='           reduce using rule 37
	'&'            reduce using rule 37
	'|'            reduce using rule 37
	'('            shift, and enter state 95
	')'            reduce using rule 37
	'['            shift, and enter state 96
	']'            reduce using rule 37
	'.'            shift, and enter state 98
	':'            reduce using rule 37
	'->'           shift, and enter state 99
	'<<'           reduce using rule 37
	'>>'           reduce using rule 37
	'^'            reduce using rule 37
	'?'            reduce using rule 37
	'*='           reduce using rule 37
	'/='           reduce using rule 37
	'%='           reduce using rule 37
	'+='           reduce using rule 37
	'-='           reduce using rule 37
	'<<='          reduce using rule 37
	'>>='          reduce using rule 37
	'&='           reduce using rule 37
	'|='           reduce using rule 37
	'^='           reduce using rule 37
	','            reduce using rule 37
	'}'            reduce using rule 37
	';'            reduce using rule 37


State 144

	assign -> expr . '=' expr                           (rule 2)
	assign -> expr . '*=' expr                          (rule 3)
	assign -> expr . '/=' expr                          (rule 4)
	assign -> expr . '%=' expr                          (rule 5)
	assign -> expr . '+=' expr                          (rule 6)
	assign -> expr . '-=' expr                          (rule 7)
	assign -> expr . '>>=' expr                         (rule 8)
	assign -> expr . '<<=' expr                         (rule 9)
	assign -> expr . '&=' expr                          (rule 10)
	assign -> expr . '^=' expr                          (rule 11)
	assign -> expr . '|=' expr                          (rule 12)
	member -> expr . '->' variable                      (rule 13)
	member -> expr . '.' variable                       (rule 14)
	call -> expr . '(' exprs ')'                        (rule 15)
	index -> expr . '[' expr ']'                        (rule 19)
	unary -> expr . '++'                                (rule 21)
	unary -> expr . '--'                                (rule 23)
	binary -> expr . '+' expr                           (rule 31)
	binary -> expr . '*' expr                           (rule 32)
	binary -> expr . '-' expr                           (rule 33)
	binary -> expr . '/' expr                           (rule 34)
	binary -> expr . '%' expr                           (rule 35)
	binary -> expr . '<<' expr                          (rule 36)
	binary -> expr '<<' expr .                          (rule 36)
	binary -> expr . '>>' expr                          (rule 37)
	binary -> expr . '<' expr                           (rule 38)
	binary -> expr . '>' expr                           (rule 39)
	binary -> expr . '>=' expr                          (rule 40)
	binary -> expr . '<=' expr                          (rule 41)
	binary -> expr . '==' expr                          (rule 42)
	binary -> expr . '!=' expr                          (rule 43)
	binary -> expr . '&&' expr                          (rule 44)
	binary -> expr . '||' expr                          (rule 45)
	binary -> expr . '^' expr                           (rule 46)
	binary -> expr . '&' expr                           (rule 47)
	binary -> expr . '|' expr                           (rule 48)
	ternary -> expr . '?' expr ':' expr                 (rule 49)
	ternary -> expr . '?' ':' expr                      (rule 50)

	else           reduce using rule 36
	'+'            shift, and enter state 77
	'-'            shift, and enter state 78
	'*'            shift, and enter state 79
	'/'            shift, and enter state 80
	'++'           shift, and enter state 81
	'--'           shift, and enter state 82
	'&&'           reduce using rule 36
	'||'           reduce using rule 36
	'%'            shift, and enter state 85
	'='            reduce using rule 36
	'=='           reduce using rule 36
	'!='           reduce using rule 36
	'<'            reduce using rule 36
	'<='           reduce using rule 36
	'>'            reduce using rule 36
	'>='           reduce using rule 36
	'&'            reduce using rule 36
	'|'            reduce using rule 36
	'('            shift, and enter state 95
	')'            reduce using rule 36
	'['            shift, and enter state 96
	']'            reduce using rule 36
	'.'            shift, and enter state 98
	':'            reduce using rule 36
	'->'           shift, and enter state 99
	'<<'           reduce using rule 36
	'>>'           reduce using rule 36
	'^'            reduce using rule 36
	'?'            reduce using rule 36
	'*='           reduce using rule 36
	'/='           reduce using rule 36
	'%='           reduce using rule 36
	'+='           reduce using rule 36
	'-='           reduce using rule 36
	'<<='          reduce using rule 36
	'>>='          reduce using rule 36
	'&='           reduce using rule 36
	'|='           reduce using rule 36
	'^='           reduce using rule 36
	','            reduce using rule 36
	'}'            reduce using rule 36
	';'            reduce using rule 36


State 145

	member -> expr '->' variable .                      (rule 13)

	else           reduce using rule 13
	'+'            reduce using rule 13
	'-'            reduce using rule 13
	'*'            reduce using rule 13
	'/'            reduce using rule 13
	'++'           reduce using rule 13
	'--'           reduce using rule 13
	'&&'           reduce using rule 13
	'||'           reduce using rule 13
	'%'            reduce using rule 13
	'='            reduce using rule 13
	'=='           reduce using rule 13
	'!='           reduce using rule 13
	'<'            reduce using rule 13
	'<='           reduce using rule 13
	'>'            reduce using rule 13
	'>='           reduce using rule 13
	'&'            reduce using rule 13
	'|'            reduce using rule 13
	'('            reduce using rule 13
	')'            reduce using rule 13
	'['            reduce using rule 13
	']'            reduce using rule 13
	'.'            reduce using rule 13
	':'            reduce using rule 13
	'->'           reduce using rule 13
	'<<'           reduce using rule 13
	'>>'           reduce using rule 13
	'^'            reduce using rule 13
	'?'            reduce using rule 13
	'*='           reduce using rule 13
	'/='           reduce using rule 13
	'%='           reduce using rule 13
	'+='           reduce using rule 13
	'-='           reduce using rule 13
	'<<='          reduce using rule 13
	'>>='          reduce using rule 13
	'&='           reduce using rule 13
	'|='           reduce using rule 13
	'^='           reduce using rule 13
	','            reduce using rule 13
	'}'            reduce using rule 13
	';'            reduce using rule 13


State 146

	member -> expr '.' variable .                       (rule 14)

	else           reduce using rule 14
	'+'            reduce using rule 14
	'-'            reduce using rule 14
	'*'            reduce using rule 14
	'/'            reduce using rule 14
	'++'           reduce using rule 14
	'--'           reduce using rule 14
	'&&'           reduce using rule 14
	'||'           reduce using rule 14
	'%'            reduce using rule 14
	'='            reduce using rule 14
	'=='           reduce using rule 14
	'!='           reduce using rule 14
	'<'            reduce using rule 14
	'<='           reduce using rule 14
	'>'            reduce using rule 14
	'>='           reduce using rule 14
	'&'            reduce using rule 14
	'|'            reduce using rule 14
	'('            reduce using rule 14
	')'            reduce using rule 14
	'['            reduce using rule 14
	']'            reduce using rule 14
	'.'            reduce using rule 14
	':'            reduce using rule 14
	'->'           reduce using rule 14
	'<<'           reduce using rule 14
	'>>'           reduce using rule 14
	'^'            reduce using rule 14
	'?'            reduce using rule 14
	'*='           reduce using rule 14
	'/='           reduce using rule 14
	'%='           reduce using rule 14
	'+='           reduce using rule 14
	'-='           reduce using rule 14
	'<<='          reduce using rule 14
	'>>='          reduce using rule 14
	'&='           reduce using rule 14
	'|='           reduce using rule 14
	'^='           reduce using rule 14
	','            reduce using rule 14
	'}'            reduce using rule 14
	';'            reduce using rule 14


State 147

	array_modifier -> '[' expr ']' type_modifier .      (rule 100)

	'('            reduce using rule 100
	'['            reduce using rule 100
	'{'            reduce using rule 100


State 148

	assign -> expr . '=' expr                           (rule 2)
	assign -> expr . '*=' expr                          (rule 3)
	assign -> expr . '/=' expr                          (rule 4)
	assign -> expr . '%=' expr                          (rule 5)
	assign -> expr . '+=' expr                          (rule 6)
	assign -> expr . '-=' expr                          (rule 7)
	assign -> expr . '>>=' expr                         (rule 8)
	assign -> expr . '<<=' expr                         (rule 9)
	assign -> expr . '&=' expr                          (rule 10)
	assign -> expr . '^=' expr                          (rule 11)
	assign -> expr . '|=' expr                          (rule 12)
	member -> expr . '->' variable                      (rule 13)
	member -> expr . '.' variable                       (rule 14)
	call -> expr . '(' exprs ')'                        (rule 15)
	index -> expr . '[' expr ']'                        (rule 19)
	index -> expr '[' expr . ']'                        (rule 19)
	unary -> expr . '++'                                (rule 21)
	unary -> expr . '--'                                (rule 23)
	binary -> expr . '+' expr                           (rule 31)
	binary -> expr . '*' expr                           (rule 32)
	binary -> expr . '-' expr                           (rule 33)
	binary -> expr . '/' expr                           (rule 34)
	binary -> expr . '%' expr                           (rule 35)
	binary -> expr . '<<' expr                          (rule 36)
	binary -> expr . '>>' expr                          (rule 37)
	binary -> expr . '<' expr                           (rule 38)
	binary -> expr . '>' expr                           (rule 39)
	binary -> expr . '>=' expr                          (rule 40)
	binary -> expr . '<=' expr                          (rule 41)
	binary -> expr . '==' expr                          (rule 42)
	binary -> expr . '!=' expr                          (rule 43)
	binary -> expr . '&&' expr                          (rule 44)
	binary -> expr . '||' expr                          (rule 45)
	binary -> expr . '^' expr                           (rule 46)
	binary -> expr . '&' expr                           (rule 47)
	binary -> expr . '|' expr                           (rule 48)
	ternary -> expr . '?' expr ':' expr                 (rule 49)
	ternary -> expr . '?' ':' expr                      (rule 50)

	'+'            shift, and enter state 77
	'-'            shift, and enter state 78
	'*'            shift, and enter state 79
	'/'            shift, and enter state 80
	'++'           shift, and enter state 81
	'--'           shift, and enter state 82
	'&&'           shift, and enter state 83
	'||'           shift, and enter state 84
	'%'            shift, and enter state 85
	'='            shift, and enter state 86
	'=='           shift, and enter state 87
	'!='           shift, and enter state 88
	'<'            shift, and enter state 89
	'<='           shift, and enter state 90
	'>'            shift, and enter state 91
	'>='           shift, and enter state 92
	'&'            shift, and enter state 93
	'|'            shift, and enter state 94
	'('            shift, and enter state 95
	'['            shift, and enter state 96
	']'            shift, and enter state 169
	'.'            shift, and enter state 98
	'->'           shift, and enter state 99
	'<<'           shift, and enter state 100
	'>>'           shift, and enter state 101
	'^'            shift, and enter state 102
	'?'            shift, and enter state 103
	'*='           shift, and enter state 104
	'/='           shift, and enter state 105
	'%='           shift, and enter state 106
	'+='           shift, and enter state 107
	'-='           shift, and enter state 108
	'<<='          shift, and enter state 109
	'>>='          shift, and enter state 110
	'&='           shift, and enter state 111
	'|='           shift, and enter state 112
	'^='           shift, and enter state 113


State 149

	call -> expr '(' exprs . ')'                        (rule 15)
	exprs -> exprs . ',' expr                           (rule 18)

	')'            shift, and enter state 167
	','            shift, and enter state 168


State 150

	assign -> expr . '=' expr                           (rule 2)
	assign -> expr . '*=' expr                          (rule 3)
	assign -> expr . '/=' expr                          (rule 4)
	assign -> expr . '%=' expr                          (rule 5)
	assign -> expr . '+=' expr                          (rule 6)
	assign -> expr . '-=' expr                          (rule 7)
	assign -> expr . '>>=' expr                         (rule 8)
	assign -> expr . '<<=' expr                         (rule 9)
	assign -> expr . '&=' expr                          (rule 10)
	assign -> expr . '^=' expr                          (rule 11)
	assign -> expr . '|=' expr                          (rule 12)
	member -> expr . '->' variable                      (rule 13)
	member -> expr . '.' variable                       (rule 14)
	call -> expr . '(' exprs ')'                        (rule 15)
	exprs -> expr .                                     (rule 17)
	index -> expr . '[' expr ']'                        (rule 19)
	unary -> expr . '++'                                (rule 21)
	unary -> expr . '--'                                (rule 23)
	binary -> expr . '+' expr                           (rule 31)
	binary -> expr . '*' expr                           (rule 32)
	binary -> expr . '-' expr                           (rule 33)
	binary -> expr . '/' expr                           (rule 34)
	binary -> expr . '%' expr                           (rule 35)
	binary -> expr . '<<' expr                          (rule 36)
	binary -> expr . '>>' expr                          (rule 37)
	binary -> expr . '<' expr                           (rule 38)
	binary -> expr . '>' expr                           (rule 39)
	binary -> expr . '>=' expr                          (rule 40)
	binary -> expr . '<=' expr                          (rule 41)
	binary -> expr . '==' expr                          (rule 42)
	binary -> expr . '!=' expr                          (rule 43)
	binary -> expr . '&&' expr                          (rule 44)
	binary -> expr . '||' expr                          (rule 45)
	binary -> expr . '^' expr                           (rule 46)
	binary -> expr . '&' expr                           (rule 47)
	binary -> expr . '|' expr                           (rule 48)
	ternary -> expr . '?' expr ':' expr                 (rule 49)
	ternary -> expr . '?' ':' expr                      (rule 50)

	'+'            shift, and enter state 77
	'-'            shift, and enter state 78
	'*'            shift, and enter state 79
	'/'            shift, and enter state 80
	'++'           shift, and enter state 81
	'--'           shift, and enter state 82
	'&&'           shift, and enter state 83
	'||'           shift, and enter state 84
	'%'            shift, and enter state 85
	'='            shift, and enter state 86
	'=='           shift, and enter state 87
	'!='           shift, and enter state 88
	'<'            shift, and enter state 89
	'<='           shift, and enter state 90
	'>'            shift, and enter state 91
	'>='           shift, and enter state 92
	'&'            shift, and enter state 93
	'|'            shift, and enter state 94
	'('            shift, and enter state 95
	')'            reduce using rule 17
	'['            shift, and enter state 96
	'.'            shift, and enter state 98
	'->'           shift, and enter state 99
	'<<'           shift, and enter state 100
	'>>'           shift, and enter state 101
	'^'            shift, and enter state 102
	'?'            shift, and enter state 103
	'*='           shift, and enter state 104
	'/='           shift, and enter state 105
	'%='           shift, and enter state 106
	'+='           shift, and enter state 107
	'-='           shift, and enter state 108
	'<<='          shift, and enter state 109
	'>>='          shift, and enter state 110
	'&='           shift, and enter state 111
	'|='           shift, and enter state 112
	'^='           shift, and enter state 113
	','            reduce using rule 17


State 151

	assign -> expr . '=' expr                           (rule 2)
	assign -> expr . '*=' expr                          (rule 3)
	assign -> expr . '/=' expr                          (rule 4)
	assign -> expr . '%=' expr                          (rule 5)
	assign -> expr . '+=' expr                          (rule 6)
	assign -> expr . '-=' expr                          (rule 7)
	assign -> expr . '>>=' expr                         (rule 8)
	assign -> expr . '<<=' expr                         (rule 9)
	assign -> expr . '&=' expr                          (rule 10)
	assign -> expr . '^=' expr                          (rule 11)
	assign -> expr . '|=' expr                          (rule 12)
	member -> expr . '->' variable                      (rule 13)
	member -> expr . '.' variable                       (rule 14)
	call -> expr . '(' exprs ')'                        (rule 15)
	index -> expr . '[' expr ']'                        (rule 19)
	unary -> expr . '++'                                (rule 21)
	unary -> expr . '--'                                (rule 23)
	binary -> expr . '+' expr                           (rule 31)
	binary -> expr . '*' expr                           (rule 32)
	binary -> expr . '-' expr                           (rule 33)
	binary -> expr . '/' expr                           (rule 34)
	binary -> expr . '%' expr                           (rule 35)
	binary -> expr . '<<' expr                          (rule 36)
	binary -> expr . '>>' expr                          (rule 37)
	binary -> expr . '<' expr                           (rule 38)
	binary -> expr . '>' expr                           (rule 39)
	binary -> expr . '>=' expr                          (rule 40)
	binary -> expr . '<=' expr                          (rule 41)
	binary -> expr . '==' expr                          (rule 42)
	binary -> expr . '!=' expr                          (rule 43)
	binary -> expr . '&&' expr                          (rule 44)
	binary -> expr . '||' expr                          (rule 45)
	binary -> expr . '^' expr                           (rule 46)
	binary -> expr . '&' expr                           (rule 47)
	binary -> expr . '|' expr                           (rule 48)
	binary -> expr '|' expr .                           (rule 48)
	ternary -> expr . '?' expr ':' expr                 (rule 49)
	ternary -> expr . '?' ':' expr                      (rule 50)

	else           reduce using rule 48
	'+'            shift, and enter state 77
	'-'            shift, and enter state 78
	'*'            shift, and enter state 79
	'/'            shift, and enter state 80
	'++'           shift, and enter state 81
	'--'           shift, and enter state 82
	'&&'           reduce using rule 48
	'||'           reduce using rule 48
	'%'            shift, and enter state 85
	'='            reduce using rule 48
	'=='           shift, and enter state 87
	'!='           shift, and enter state 88
	'<'            shift, and enter state 89
	'<='           shift, and enter state 90
	'>'            shift, and enter state 91
	'>='           shift, and enter state 92
	'&'            shift, and enter state 93
	'|'            reduce using rule 48
	'('            shift, and enter state 95
	')'            reduce using rule 48
	'['            shift, and enter state 96
	']'            reduce using rule 48
	'.'            shift, and enter state 98
	':'            reduce using rule 48
	'->'           shift, and enter state 99
	'<<'           shift, and enter state 100
	'>>'           shift, and enter state 101
	'^'            shift, and enter state 102
	'?'            reduce using rule 48
	'*='           reduce using rule 48
	'/='           reduce using rule 48
	'%='           reduce using rule 48
	'+='           reduce using rule 48
	'-='           reduce using rule 48
	'<<='          reduce using rule 48
	'>>='          reduce using rule 48
	'&='           reduce using rule 48
	'|='           reduce using rule 48
	'^='           reduce using rule 48
	','            reduce using rule 48
	'}'            reduce using rule 48
	';'            reduce using rule 48


State 152

	assign -> expr . '=' expr                           (rule 2)
	assign -> expr . '*=' expr                          (rule 3)
	assign -> expr . '/=' expr                          (rule 4)
	assign -> expr . '%=' expr                          (rule 5)
	assign -> expr . '+=' expr                          (rule 6)
	assign -> expr . '-=' expr                          (rule 7)
	assign -> expr . '>>=' expr                         (rule 8)
	assign -> expr . '<<=' expr                         (rule 9)
	assign -> expr . '&=' expr                          (rule 10)
	assign -> expr . '^=' expr                          (rule 11)
	assign -> expr . '|=' expr                          (rule 12)
	member -> expr . '->' variable                      (rule 13)
	member -> expr . '.' variable                       (rule 14)
	call -> expr . '(' exprs ')'                        (rule 15)
	index -> expr . '[' expr ']'                        (rule 19)
	unary -> expr . '++'                                (rule 21)
	unary -> expr . '--'                                (rule 23)
	binary -> expr . '+' expr                           (rule 31)
	binary -> expr . '*' expr                           (rule 32)
	binary -> expr . '-' expr                           (rule 33)
	binary -> expr . '/' expr                           (rule 34)
	binary -> expr . '%' expr                           (rule 35)
	binary -> expr . '<<' expr                          (rule 36)
	binary -> expr . '>>' expr                          (rule 37)
	binary -> expr . '<' expr                           (rule 38)
	binary -> expr . '>' expr                           (rule 39)
	binary -> expr . '>=' expr                          (rule 40)
	binary -> expr . '<=' expr                          (rule 41)
	binary -> expr . '==' expr                          (rule 42)
	binary -> expr . '!=' expr                          (rule 43)
	binary -> expr . '&&' expr                          (rule 44)
	binary -> expr . '||' expr                          (rule 45)
	binary -> expr . '^' expr                           (rule 46)
	binary -> expr . '&' expr                           (rule 47)
	binary -> expr '&' expr .                           (rule 47)
	binary -> expr . '|' expr                           (rule 48)
	ternary -> expr . '?' expr ':' expr                 (rule 49)
	ternary -> expr . '?' ':' expr                      (rule 50)

	else           reduce using rule 47
	'+'            shift, and enter state 77
	'-'            shift, and enter state 78
	'*'            shift, and enter state 79
	'/'            shift, and enter state 80
	'++'           shift, and enter state 81
	'--'           shift, and enter state 82
	'&&'           reduce using rule 47
	'||'           reduce using rule 47
	'%'            shift, and enter state 85
	'='            reduce using rule 47
	'=='           shift, and enter state 87
	'!='           shift, and enter state 88
	'<'            shift, and enter state 89
	'<='           shift, and enter state 90
	'>'            shift, and enter state 91
	'>='           shift, and enter state 92
	'&'            reduce using rule 47
	'|'            reduce using rule 47
	'('            shift, and enter state 95
	')'            reduce using rule 47
	'['            shift, and enter state 96
	']'            reduce using rule 47
	'.'            shift, and enter state 98
	':'            reduce using rule 47
	'->'           shift, and enter state 99
	'<<'           shift, and enter state 100
	'>>'           shift, and enter state 101
	'^'            reduce using rule 47
	'?'            reduce using rule 47
	'*='           reduce using rule 47
	'/='           reduce using rule 47
	'%='           reduce using rule 47
	'+='           reduce using rule 47
	'-='           reduce using rule 47
	'<<='          reduce using rule 47
	'>>='          reduce using rule 47
	'&='           reduce using rule 47
	'|='           reduce using rule 47
	'^='           reduce using rule 47
	','            reduce using rule 47
	'}'            reduce using rule 47
	';'            reduce using rule 47


State 153

	assign -> expr . '=' expr                           (rule 2)
	assign -> expr . '*=' expr                          (rule 3)
	assign -> expr . '/=' expr                          (rule 4)
	assign -> expr . '%=' expr                          (rule 5)
	assign -> expr . '+=' expr                          (rule 6)
	assign -> expr . '-=' expr                          (rule 7)
	assign -> expr . '>>=' expr                         (rule 8)
	assign -> expr . '<<=' expr                         (rule 9)
	assign -> expr . '&=' expr                          (rule 10)
	assign -> expr . '^=' expr                          (rule 11)
	assign -> expr . '|=' expr                          (rule 12)
	member -> expr . '->' variable                      (rule 13)
	member -> expr . '.' variable                       (rule 14)
	call -> expr . '(' exprs ')'                        (rule 15)
	index -> expr . '[' expr ']'                        (rule 19)
	unary -> expr . '++'                                (rule 21)
	unary -> expr . '--'                                (rule 23)
	binary -> expr . '+' expr                           (rule 31)
	binary -> expr . '*' expr                           (rule 32)
	binary -> expr . '-' expr                           (rule 33)
	binary -> expr . '/' expr                           (rule 34)
	binary -> expr . '%' expr                           (rule 35)
	binary -> expr . '<<' expr                          (rule 36)
	binary -> expr . '>>' expr                          (rule 37)
	binary -> expr . '<' expr                           (rule 38)
	binary -> expr . '>' expr                           (rule 39)
	binary -> expr . '>=' expr                          (rule 40)
	binary -> expr '>=' expr .                          (rule 40)
	binary -> expr . '<=' expr                          (rule 41)
	binary -> expr . '==' expr                          (rule 42)
	binary -> expr . '!=' expr                          (rule 43)
	binary -> expr . '&&' expr                          (rule 44)
	binary -> expr . '||' expr                          (rule 45)
	binary -> expr . '^' expr                           (rule 46)
	binary -> expr . '&' expr                           (rule 47)
	binary -> expr . '|' expr                           (rule 48)
	ternary -> expr . '?' expr ':' expr                 (rule 49)
	ternary -> expr . '?' ':' expr                      (rule 50)

	else           reduce using rule 40
	'+'            shift, and enter state 77
	'-'            shift, and enter state 78
	'*'            shift, and enter state 79
	'/'            shift, and enter state 80
	'++'           shift, and enter state 81
	'--'           shift, and enter state 82
	'&&'           reduce using rule 40
	'||'           reduce using rule 40
	'%'            shift, and enter state 85
	'='            reduce using rule 40
	'=='           reduce using rule 40
	'!='           reduce using rule 40
	'<'            fail
	'<='           fail
	'>'            fail
	'>='           fail
	'&'            reduce using rule 40
	'|'            reduce using rule 40
	'('            shift, and enter state 95
	')'            reduce using rule 40
	'['            shift, and enter state 96
	']'            reduce using rule 40
	'.'            shift, and enter state 98
	':'            reduce using rule 40
	'->'           shift, and enter state 99
	'<<'           shift, and enter state 100
	'>>'           shift, and enter state 101
	'^'            reduce using rule 40
	'?'            reduce using rule 40
	'*='           reduce using rule 40
	'/='           reduce using rule 40
	'%='           reduce using rule 40
	'+='           reduce using rule 40
	'-='           reduce using rule 40
	'<<='          reduce using rule 40
	'>>='          reduce using rule 40
	'&='           reduce using rule 40
	'|='           reduce using rule 40
	'^='           reduce using rule 40
	','            reduce using rule 40
	'}'            reduce using rule 40
	';'            reduce using rule 40


State 154

	assign -> expr . '=' expr                           (rule 2)
	assign -> expr . '*=' expr                          (rule 3)
	assign -> expr . '/=' expr                          (rule 4)
	assign -> expr . '%=' expr                          (rule 5)
	assign -> expr . '+=' expr                          (rule 6)
	assign -> expr . '-=' expr                          (rule 7)
	assign -> expr . '>>=' expr                         (rule 8)
	assign -> expr . '<<=' expr                         (rule 9)
	assign -> expr . '&=' expr                          (rule 10)
	assign -> expr . '^=' expr                          (rule 11)
	assign -> expr . '|=' expr                          (rule 12)
	member -> expr . '->' variable                      (rule 13)
	member -> expr . '.' variable                       (rule 14)
	call -> expr . '(' exprs ')'                        (rule 15)
	index -> expr . '[' expr ']'                        (rule 19)
	unary -> expr . '++'                                (rule 21)
	unary -> expr . '--'                                (rule 23)
	binary -> expr . '+' expr                           (rule 31)
	binary -> expr . '*' expr                           (rule 32)
	binary -> expr . '-' expr                           (rule 33)
	binary -> expr . '/' expr                           (rule 34)
	binary -> expr . '%' expr                           (rule 35)
	binary -> expr . '<<' expr                          (rule 36)
	binary -> expr . '>>' expr                          (rule 37)
	binary -> expr . '<' expr                           (rule 38)
	binary -> expr . '>' expr                           (rule 39)
	binary -> expr '>' expr .                           (rule 39)
	binary -> expr . '>=' expr                          (rule 40)
	binary -> expr . '<=' expr                          (rule 41)
	binary -> expr . '==' expr                          (rule 42)
	binary -> expr . '!=' expr                          (rule 43)
	binary -> expr . '&&' expr                          (rule 44)
	binary -> expr . '||' expr                          (rule 45)
	binary -> expr . '^' expr                           (rule 46)
	binary -> expr . '&' expr                           (rule 47)
	binary -> expr . '|' expr                           (rule 48)
	ternary -> expr . '?' expr ':' expr                 (rule 49)
	ternary -> expr . '?' ':' expr                      (rule 50)

	else           reduce using rule 39
	'+'            shift, and enter state 77
	'-'            shift, and enter state 78
	'*'            shift, and enter state 79
	'/'            shift, and enter state 80
	'++'           shift, and enter state 81
	'--'           shift, and enter state 82
	'&&'           reduce using rule 39
	'||'           reduce using rule 39
	'%'            shift, and enter state 85
	'='            reduce using rule 39
	'=='           reduce using rule 39
	'!='           reduce using rule 39
	'<'            fail
	'<='           fail
	'>'            fail
	'>='           fail
	'&'            reduce using rule 39
	'|'            reduce using rule 39
	'('            shift, and enter state 95
	')'            reduce using rule 39
	'['            shift, and enter state 96
	']'            reduce using rule 39
	'.'            shift, and enter state 98
	':'            reduce using rule 39
	'->'           shift, and enter state 99
	'<<'           shift, and enter state 100
	'>>'           shift, and enter state 101
	'^'            reduce using rule 39
	'?'            reduce using rule 39
	'*='           reduce using rule 39
	'/='           reduce using rule 39
	'%='           reduce using rule 39
	'+='           reduce using rule 39
	'-='           reduce using rule 39
	'<<='          reduce using rule 39
	'>>='          reduce using rule 39
	'&='           reduce using rule 39
	'|='           reduce using rule 39
	'^='           reduce using rule 39
	','            reduce using rule 39
	'}'            reduce using rule 39
	';'            reduce using rule 39


State 155

	assign -> expr . '=' expr                           (rule 2)
	assign -> expr . '*=' expr                          (rule 3)
	assign -> expr . '/=' expr                          (rule 4)
	assign -> expr . '%=' expr                          (rule 5)
	assign -> expr . '+=' expr                          (rule 6)
	assign -> expr . '-=' expr                          (rule 7)
	assign -> expr . '>>=' expr                         (rule 8)
	assign -> expr . '<<=' expr                         (rule 9)
	assign -> expr . '&=' expr                          (rule 10)
	assign -> expr . '^=' expr                          (rule 11)
	assign -> expr . '|=' expr                          (rule 12)
	member -> expr . '->' variable                      (rule 13)
	member -> expr . '.' variable                       (rule 14)
	call -> expr . '(' exprs ')'                        (rule 15)
	index -> expr . '[' expr ']'                        (rule 19)
	unary -> expr . '++'                                (rule 21)
	unary -> expr . '--'                                (rule 23)
	binary -> expr . '+' expr                           (rule 31)
	binary -> expr . '*' expr                           (rule 32)
	binary -> expr . '-' expr                           (rule 33)
	binary -> expr . '/' expr                           (rule 34)
	binary -> expr . '%' expr                           (rule 35)
	binary -> expr . '<<' expr                          (rule 36)
	binary -> expr . '>>' expr                          (rule 37)
	binary -> expr . '<' expr                           (rule 38)
	binary -> expr . '>' expr                           (rule 39)
	binary -> expr . '>=' expr                          (rule 40)
	binary -> expr . '<=' expr                          (rule 41)
	binary -> expr '<=' expr .                          (rule 41)
	binary -> expr . '==' expr                          (rule 42)
	binary -> expr . '!=' expr                          (rule 43)
	binary -> expr . '&&' expr                          (rule 44)
	binary -> expr . '||' expr                          (rule 45)
	binary -> expr . '^' expr                           (rule 46)
	binary -> expr . '&' expr                           (rule 47)
	binary -> expr . '|' expr                           (rule 48)
	ternary -> expr . '?' expr ':' expr                 (rule 49)
	ternary -> expr . '?' ':' expr                      (rule 50)

	else           reduce using rule 41
	'+'            shift, and enter state 77
	'-'            shift, and enter state 78
	'*'            shift, and enter state 79
	'/'            shift, and enter state 80
	'++'           shift, and enter state 81
	'--'           shift, and enter state 82
	'&&'           reduce using rule 41
	'||'           reduce using rule 41
	'%'            shift, and enter state 85
	'='            reduce using rule 41
	'=='           reduce using rule 41
	'!='           reduce using rule 41
	'<'            fail
	'<='           fail
	'>'            fail
	'>='           fail
	'&'            reduce using rule 41
	'|'            reduce using rule 41
	'('            shift, and enter state 95
	')'            reduce using rule 41
	'['            shift, and enter state 96
	']'            reduce using rule 41
	'.'            shift, and enter state 98
	':'            reduce using rule 41
	'->'           shift, and enter state 99
	'<<'           shift, and enter state 100
	'>>'           shift, and enter state 101
	'^'            reduce using rule 41
	'?'            reduce using rule 41
	'*='           reduce using rule 41
	'/='           reduce using rule 41
	'%='           reduce using rule 41
	'+='           reduce using rule 41
	'-='           reduce using rule 41
	'<<='          reduce using rule 41
	'>>='          reduce using rule 41
	'&='           reduce using rule 41
	'|='           reduce using rule 41
	'^='           reduce using rule 41
	','            reduce using rule 41
	'}'            reduce using rule 41
	';'            reduce using rule 41


State 156

	assign -> expr . '=' expr                           (rule 2)
	assign -> expr . '*=' expr                          (rule 3)
	assign -> expr . '/=' expr                          (rule 4)
	assign -> expr . '%=' expr                          (rule 5)
	assign -> expr . '+=' expr                          (rule 6)
	assign -> expr . '-=' expr                          (rule 7)
	assign -> expr . '>>=' expr                         (rule 8)
	assign -> expr . '<<=' expr                         (rule 9)
	assign -> expr . '&=' expr                          (rule 10)
	assign -> expr . '^=' expr                          (rule 11)
	assign -> expr . '|=' expr                          (rule 12)
	member -> expr . '->' variable                      (rule 13)
	member -> expr . '.' variable                       (rule 14)
	call -> expr . '(' exprs ')'                        (rule 15)
	index -> expr . '[' expr ']'                        (rule 19)
	unary -> expr . '++'                                (rule 21)
	unary -> expr . '--'                                (rule 23)
	binary -> expr . '+' expr                           (rule 31)
	binary -> expr . '*' expr                           (rule 32)
	binary -> expr . '-' expr                           (rule 33)
	binary -> expr . '/' expr                           (rule 34)
	binary -> expr . '%' expr                           (rule 35)
	binary -> expr . '<<' expr                          (rule 36)
	binary -> expr . '>>' expr                          (rule 37)
	binary -> expr . '<' expr                           (rule 38)
	binary -> expr '<' expr .                           (rule 38)
	binary -> expr . '>' expr                           (rule 39)
	binary -> expr . '>=' expr                          (rule 40)
	binary -> expr . '<=' expr                          (rule 41)
	binary -> expr . '==' expr                          (rule 42)
	binary -> expr . '!=' expr                          (rule 43)
	binary -> expr . '&&' expr                          (rule 44)
	binary -> expr . '||' expr                          (rule 45)
	binary -> expr . '^' expr                           (rule 46)
	binary -> expr . '&' expr                           (rule 47)
	binary -> expr . '|' expr                           (rule 48)
	ternary -> expr . '?' expr ':' expr                 (rule 49)
	ternary -> expr . '?' ':' expr                      (rule 50)

	else           reduce using rule 38
	'+'            shift, and enter state 77
	'-'            shift, and enter state 78
	'*'            shift, and enter state 79
	'/'            shift, and enter state 80
	'++'           shift, and enter state 81
	'--'           shift, and enter state 82
	'&&'           reduce using rule 38
	'||'           reduce using rule 38
	'%'            shift, and enter state 85
	'='            reduce using rule 38
	'=='           reduce using rule 38
	'!='           reduce using rule 38
	'<'            fail
	'<='           fail
	'>'            fail
	'>='           fail
	'&'            reduce using rule 38
	'|'            reduce using rule 38
	'('            shift, and enter state 95
	')'            reduce using rule 38
	'['            shift, and enter state 96
	']'            reduce using rule 38
	'.'            shift, and enter state 98
	':'            reduce using rule 38
	'->'           shift, and enter state 99
	'<<'           shift, and enter state 100
	'>>'           shift, and enter state 101
	'^'            reduce using rule 38
	'?'            reduce using rule 38
	'*='           reduce using rule 38
	'/='           reduce using rule 38
	'%='           reduce using rule 38
	'+='           reduce using rule 38
	'-='           reduce using rule 38
	'<<='          reduce using rule 38
	'>>='          reduce using rule 38
	'&='           reduce using rule 38
	'|='           reduce using rule 38
	'^='           reduce using rule 38
	','            reduce using rule 38
	'}'            reduce using rule 38
	';'            reduce using rule 38


State 157

	assign -> expr . '=' expr                           (rule 2)
	assign -> expr . '*=' expr                          (rule 3)
	assign -> expr . '/=' expr                          (rule 4)
	assign -> expr . '%=' expr                          (rule 5)
	assign -> expr . '+=' expr                          (rule 6)
	assign -> expr . '-=' expr                          (rule 7)
	assign -> expr . '>>=' expr                         (rule 8)
	assign -> expr . '<<=' expr                         (rule 9)
	assign -> expr . '&=' expr                          (rule 10)
	assign -> expr . '^=' expr                          (rule 11)
	assign -> expr . '|=' expr                          (rule 12)
	member -> expr . '->' variable                      (rule 13)
	member -> expr . '.' variable                       (rule 14)
	call -> expr . '(' exprs ')'                        (rule 15)
	index -> expr . '[' expr ']'                        (rule 19)
	unary -> expr . '++'                                (rule 21)
	unary -> expr . '--'                                (rule 23)
	binary -> expr . '+' expr                           (rule 31)
	binary -> expr . '*' expr                           (rule 32)
	binary -> expr . '-' expr                           (rule 33)
	binary -> expr . '/' expr                           (rule 34)
	binary -> expr . '%' expr                           (rule 35)
	binary -> expr . '<<' expr                          (rule 36)
	binary -> expr . '>>' expr                          (rule 37)
	binary -> expr . '<' expr                           (rule 38)
	binary -> expr . '>' expr                           (rule 39)
	binary -> expr . '>=' expr                          (rule 40)
	binary -> expr . '<=' expr                          (rule 41)
	binary -> expr . '==' expr                          (rule 42)
	binary -> expr . '!=' expr                          (rule 43)
	binary -> expr '!=' expr .                          (rule 43)
	binary -> expr . '&&' expr                          (rule 44)
	binary -> expr . '||' expr                          (rule 45)
	binary -> expr . '^' expr                           (rule 46)
	binary -> expr . '&' expr                           (rule 47)
	binary -> expr . '|' expr                           (rule 48)
	ternary -> expr . '?' expr ':' expr                 (rule 49)
	ternary -> expr . '?' ':' expr                      (rule 50)

	else           reduce using rule 43
	'+'            shift, and enter state 77
	'-'            shift, and enter state 78
	'*'            shift, and enter state 79
	'/'            shift, and enter state 80
	'++'           shift, and enter state 81
	'--'           shift, and enter state 82
	'&&'           reduce using rule 43
	'||'           reduce using rule 43
	'%'            shift, and enter state 85
	'='            reduce using rule 43
	'=='           fail
	'!='           fail
	'<'            shift, and enter state 89
	'<='           shift, and enter state 90
	'>'            shift, and enter state 91
	'>='           shift, and enter state 92
	'&'            reduce using rule 43
	'|'            reduce using rule 43
	'('            shift, and enter state 95
	')'            reduce using rule 43
	'['            shift, and enter state 96
	']'            reduce using rule 43
	'.'            shift, and enter state 98
	':'            reduce using rule 43
	'->'           shift, and enter state 99
	'<<'           shift, and enter state 100
	'>>'           shift, and enter state 101
	'^'            reduce using rule 43
	'?'            reduce using rule 43
	'*='           reduce using rule 43
	'/='           reduce using rule 43
	'%='           reduce using rule 43
	'+='           reduce using rule 43
	'-='           reduce using rule 43
	'<<='          reduce using rule 43
	'>>='          reduce using rule 43
	'&='           reduce using rule 43
	'|='           reduce using rule 43
	'^='           reduce using rule 43
	','            reduce using rule 43
	'}'            reduce using rule 43
	';'            reduce using rule 43


State 158

	assign -> expr . '=' expr                           (rule 2)
	assign -> expr . '*=' expr                          (rule 3)
	assign -> expr . '/=' expr                          (rule 4)
	assign -> expr . '%=' expr                          (rule 5)
	assign -> expr . '+=' expr                          (rule 6)
	assign -> expr . '-=' expr                          (rule 7)
	assign -> expr . '>>=' expr                         (rule 8)
	assign -> expr . '<<=' expr                         (rule 9)
	assign -> expr . '&=' expr                          (rule 10)
	assign -> expr . '^=' expr                          (rule 11)
	assign -> expr . '|=' expr                          (rule 12)
	member -> expr . '->' variable                      (rule 13)
	member -> expr . '.' variable                       (rule 14)
	call -> expr . '(' exprs ')'                        (rule 15)
	index -> expr . '[' expr ']'                        (rule 19)
	unary -> expr . '++'                                (rule 21)
	unary -> expr . '--'                                (rule 23)
	binary -> expr . '+' expr                           (rule 31)
	binary -> expr . '*' expr                           (rule 32)
	binary -> expr . '-' expr                           (rule 33)
	binary -> expr . '/' expr                           (rule 34)
	binary -> expr . '%' expr                           (rule 35)
	binary -> expr . '<<' expr                          (rule 36)
	binary -> expr . '>>' expr                          (rule 37)
	binary -> expr . '<' expr                           (rule 38)
	binary -> expr . '>' expr                           (rule 39)
	binary -> expr . '>=' expr                          (rule 40)
	binary -> expr . '<=' expr                          (rule 41)
	binary -> expr . '==' expr                          (rule 42)
	binary -> expr '==' expr .                          (rule 42)
	binary -> expr . '!=' expr                          (rule 43)
	binary -> expr . '&&' expr                          (rule 44)
	binary -> expr . '||' expr                          (rule 45)
	binary -> expr . '^' expr                           (rule 46)
	binary -> expr . '&' expr                           (rule 47)
	binary -> expr . '|' expr                           (rule 48)
	ternary -> expr . '?' expr ':' expr                 (rule 49)
	ternary -> expr . '?' ':' expr                      (rule 50)

	else           reduce using rule 42
	'+'            shift, and enter state 77
	'-'            shift, and enter state 78
	'*'            shift, and enter state 79
	'/'            shift, and enter state 80
	'++'           shift, and enter state 81
	'--'           shift, and enter state 82
	'&&'           reduce using rule 42
	'||'           reduce using rule 42
	'%'            shift, and enter state 85
	'='            reduce using rule 42
	'=='           fail
	'!='           fail
	'<'            shift, and enter state 89
	'<='           shift, and enter state 90
	'>'            shift, and enter state 91
	'>='           shift, and enter state 92
	'&'            reduce using rule 42
	'|'            reduce using rule 42
	'('            shift, and enter state 95
	')'            reduce using rule 42
	'['            shift, and enter state 96
	']'            reduce using rule 42
	'.'            shift, and enter state 98
	':'            reduce using rule 42
	'->'           shift, and enter state 99
	'<<'           shift, and enter state 100
	'>>'           shift, and enter state 101
	'^'            reduce using rule 42
	'?'            reduce using rule 42
	'*='           reduce using rule 42
	'/='           reduce using rule 42
	'%='           reduce using rule 42
	'+='           reduce using rule 42
	'-='           reduce using rule 42
	'<<='          reduce using rule 42
	'>>='          reduce using rule 42
	'&='           reduce using rule 42
	'|='           reduce using rule 42
	'^='           reduce using rule 42
	','            reduce using rule 42
	'}'            reduce using rule 42
	';'            reduce using rule 42


State 159

	assign -> expr . '=' expr                           (rule 2)
	assign -> expr '=' expr .                           (rule 2)
	assign -> expr . '*=' expr                          (rule 3)
	assign -> expr . '/=' expr                          (rule 4)
	assign -> expr . '%=' expr                          (rule 5)
	assign -> expr . '+=' expr                          (rule 6)
	assign -> expr . '-=' expr                          (rule 7)
	assign -> expr . '>>=' expr                         (rule 8)
	assign -> expr . '<<=' expr                         (rule 9)
	assign -> expr . '&=' expr                          (rule 10)
	assign -> expr . '^=' expr                          (rule 11)
	assign -> expr . '|=' expr                          (rule 12)
	member -> expr . '->' variable                      (rule 13)
	member -> expr . '.' variable                       (rule 14)
	call -> expr . '(' exprs ')'                        (rule 15)
	index -> expr . '[' expr ']'                        (rule 19)
	unary -> expr . '++'                                (rule 21)
	unary -> expr . '--'                                (rule 23)
	binary -> expr . '+' expr                           (rule 31)
	binary -> expr . '*' expr                           (rule 32)
	binary -> expr . '-' expr                           (rule 33)
	binary -> expr . '/' expr                           (rule 34)
	binary -> expr . '%' expr                           (rule 35)
	binary -> expr . '<<' expr                          (rule 36)
	binary -> expr . '>>' expr                          (rule 37)
	binary -> expr . '<' expr                           (rule 38)
	binary -> expr . '>' expr                           (rule 39)
	binary -> expr . '>=' expr                          (rule 40)
	binary -> expr . '<=' expr                          (rule 41)
	binary -> expr . '==' expr                          (rule 42)
	binary -> expr . '!=' expr                          (rule 43)
	binary -> expr . '&&' expr                          (rule 44)
	binary -> expr . '||' expr                          (rule 45)
	binary -> expr . '^' expr                           (rule 46)
	binary -> expr . '&' expr                           (rule 47)
	binary -> expr . '|' expr                           (rule 48)
	ternary -> expr . '?' expr ':' expr                 (rule 49)
	ternary -> expr . '?' ':' expr                      (rule 50)

	else           reduce using rule 2
	'+'            shift, and enter state 77
	'-'            shift, and enter state 78
	'*'            shift, and enter state 79
	'/'            shift, and enter state 80
	'++'           shift, and enter state 81
	'--'           shift, and enter state 82
	'&&'           shift, and enter state 83
	'||'           shift, and enter state 84
	'%'            shift, and enter state 85
	'='            shift, and enter state 86
	'=='           shift, and enter state 87
	'!='           shift, and enter state 88
	'<'            shift, and enter state 89
	'<='           shift, and enter state 90
	'>'            shift, and enter state 91
	'>='           shift, and enter state 92
	'&'            shift, and enter state 93
	'|'            shift, and enter state 94
	'('            shift, and enter state 95
	')'            reduce using rule 2
	'['            shift, and enter state 96
	']'            reduce using rule 2
	'.'            shift, and enter state 98
	':'            reduce using rule 2
	'->'           shift, and enter state 99
	'<<'           shift, and enter state 100
	'>>'           shift, and enter state 101
	'^'            shift, and enter state 102
	'?'            shift, and enter state 103
	'*='           shift, and enter state 104
	'/='           shift, and enter state 105
	'%='           shift, and enter state 106
	'+='           shift, and enter state 107
	'-='           shift, and enter state 108
	'<<='          shift, and enter state 109
	'>>='          shift, and enter state 110
	'&='           shift, and enter state 111
	'|='           shift, and enter state 112
	'^='           shift, and enter state 113
	','            reduce using rule 2
	'}'            reduce using rule 2
	';'            reduce using rule 2


State 160

	assign -> expr . '=' expr                           (rule 2)
	assign -> expr . '*=' expr                          (rule 3)
	assign -> expr . '/=' expr                          (rule 4)
	assign -> expr . '%=' expr                          (rule 5)
	assign -> expr . '+=' expr                          (rule 6)
	assign -> expr . '-=' expr                          (rule 7)
	assign -> expr . '>>=' expr                         (rule 8)
	assign -> expr . '<<=' expr                         (rule 9)
	assign -> expr . '&=' expr                          (rule 10)
	assign -> expr . '^=' expr                          (rule 11)
	assign -> expr . '|=' expr                          (rule 12)
	member -> expr . '->' variable                      (rule 13)
	member -> expr . '.' variable                       (rule 14)
	call -> expr . '(' exprs ')'                        (rule 15)
	index -> expr . '[' expr ']'                        (rule 19)
	unary -> expr . '++'                                (rule 21)
	unary -> expr . '--'                                (rule 23)
	binary -> expr . '+' expr                           (rule 31)
	binary -> expr . '*' expr                           (rule 32)
	binary -> expr . '-' expr                           (rule 33)
	binary -> expr . '/' expr                           (rule 34)
	binary -> expr . '%' expr                           (rule 35)
	binary -> expr '%' expr .                           (rule 35)
	binary -> expr . '<<' expr                          (rule 36)
	binary -> expr . '>>' expr                          (rule 37)
	binary -> expr . '<' expr                           (rule 38)
	binary -> expr . '>' expr                           (rule 39)
	binary -> expr . '>=' expr                          (rule 40)
	binary -> expr . '<=' expr                          (rule 41)
	binary -> expr . '==' expr                          (rule 42)
	binary -> expr . '!=' expr                          (rule 43)
	binary -> expr . '&&' expr                          (rule 44)
	binary -> expr . '||' expr                          (rule 45)
	binary -> expr . '^' expr                           (rule 46)
	binary -> expr . '&' expr                           (rule 47)
	binary -> expr . '|' expr                           (rule 48)
	ternary -> expr . '?' expr ':' expr                 (rule 49)
	ternary -> expr . '?' ':' expr                      (rule 50)

	else           reduce using rule 35
	'+'            reduce using rule 35
	'-'            reduce using rule 35
	'*'            reduce using rule 35
	'/'            reduce using rule 35
	'++'           shift, and enter state 81
	'--'           shift, and enter state 82
	'&&'           reduce using rule 35
	'||'           reduce using rule 35
	'%'            reduce using rule 35
	'='            reduce using rule 35
	'=='           reduce using rule 35
	'!='           reduce using rule 35
	'<'            reduce using rule 35
	'<='           reduce using rule 35
	'>'            reduce using rule 35
	'>='           reduce using rule 35
	'&'            reduce using rule 35
	'|'            reduce using rule 35
	'('            shift, and enter state 95
	')'            reduce using rule 35
	'['            shift, and enter state 96
	']'            reduce using rule 35
	'.'            shift, and enter state 98
	':'            reduce using rule 35
	'->'           shift, and enter state 99
	'<<'           reduce using rule 35
	'>>'           reduce using rule 35
	'^'            reduce using rule 35
	'?'            reduce using rule 35
	'*='           reduce using rule 35
	'/='           reduce using rule 35
	'%='           reduce using rule 35
	'+='           reduce using rule 35
	'-='           reduce using rule 35
	'<<='          reduce using rule 35
	'>>='          reduce using rule 35
	'&='           reduce using rule 35
	'|='           reduce using rule 35
	'^='           reduce using rule 35
	','            reduce using rule 35
	'}'            reduce using rule 35
	';'            reduce using rule 35


State 161

	assign -> expr . '=' expr                           (rule 2)
	assign -> expr . '*=' expr                          (rule 3)
	assign -> expr . '/=' expr                          (rule 4)
	assign -> expr . '%=' expr                          (rule 5)
	assign -> expr . '+=' expr                          (rule 6)
	assign -> expr . '-=' expr                          (rule 7)
	assign -> expr . '>>=' expr                         (rule 8)
	assign -> expr . '<<=' expr                         (rule 9)
	assign -> expr . '&=' expr                          (rule 10)
	assign -> expr . '^=' expr                          (rule 11)
	assign -> expr . '|=' expr                          (rule 12)
	member -> expr . '->' variable                      (rule 13)
	member -> expr . '.' variable                       (rule 14)
	call -> expr . '(' exprs ')'                        (rule 15)
	index -> expr . '[' expr ']'                        (rule 19)
	unary -> expr . '++'                                (rule 21)
	unary -> expr . '--'                                (rule 23)
	binary -> expr . '+' expr                           (rule 31)
	binary -> expr . '*' expr                           (rule 32)
	binary -> expr . '-' expr                           (rule 33)
	binary -> expr . '/' expr                           (rule 34)
	binary -> expr . '%' expr                           (rule 35)
	binary -> expr . '<<' expr                          (rule 36)
	binary -> expr . '>>' expr                          (rule 37)
	binary -> expr . '<' expr                           (rule 38)
	binary -> expr . '>' expr                           (rule 39)
	binary -> expr . '>=' expr                          (rule 40)
	binary -> expr . '<=' expr                          (rule 41)
	binary -> expr . '==' expr                          (rule 42)
	binary -> expr . '!=' expr                          (rule 43)
	binary -> expr . '&&' expr                          (rule 44)
	binary -> expr . '||' expr                          (rule 45)
	binary -> expr '||' expr .                          (rule 45)
	binary -> expr . '^' expr                           (rule 46)
	binary -> expr . '&' expr                           (rule 47)
	binary -> expr . '|' expr                           (rule 48)
	ternary -> expr . '?' expr ':' expr                 (rule 49)
	ternary -> expr . '?' ':' expr                      (rule 50)

	else           reduce using rule 45
	'+'            shift, and enter state 77
	'-'            shift, and enter state 78
	'*'            shift, and enter state 79
	'/'            shift, and enter state 80
	'++'           shift, and enter state 81
	'--'           shift, and enter state 82
	'&&'           shift, and enter state 83
	'||'           reduce using rule 45
	'%'            shift, and enter state 85
	'='            reduce using rule 45
	'=='           shift, and enter state 87
	'!='           shift, and enter state 88
	'<'            shift, and enter state 89
	'<='           shift, and enter state 90
	'>'            shift, and enter state 91
	'>='           shift, and enter state 92
	'&'            shift, and enter state 93
	'|'            shift, and enter state 94
	'('            shift, and enter state 95
	')'            reduce using rule 45
	'['            shift, and enter state 96
	']'            reduce using rule 45
	'.'            shift, and enter state 98
	':'            reduce using rule 45
	'->'           shift, and enter state 99
	'<<'           shift, and enter state 100
	'>>'           shift, and enter state 101
	'^'            shift, and enter state 102
	'?'            reduce using rule 45
	'*='           reduce using rule 45
	'/='           reduce using rule 45
	'%='           reduce using rule 45
	'+='           reduce using rule 45
	'-='           reduce using rule 45
	'<<='          reduce using rule 45
	'>>='          reduce using rule 45
	'&='           reduce using rule 45
	'|='           reduce using rule 45
	'^='           reduce using rule 45
	','            reduce using rule 45
	'}'            reduce using rule 45
	';'            reduce using rule 45


State 162

	assign -> expr . '=' expr                           (rule 2)
	assign -> expr . '*=' expr                          (rule 3)
	assign -> expr . '/=' expr                          (rule 4)
	assign -> expr . '%=' expr                          (rule 5)
	assign -> expr . '+=' expr                          (rule 6)
	assign -> expr . '-=' expr                          (rule 7)
	assign -> expr . '>>=' expr                         (rule 8)
	assign -> expr . '<<=' expr                         (rule 9)
	assign -> expr . '&=' expr                          (rule 10)
	assign -> expr . '^=' expr                          (rule 11)
	assign -> expr . '|=' expr                          (rule 12)
	member -> expr . '->' variable                      (rule 13)
	member -> expr . '.' variable                       (rule 14)
	call -> expr . '(' exprs ')'                        (rule 15)
	index -> expr . '[' expr ']'                        (rule 19)
	unary -> expr . '++'                                (rule 21)
	unary -> expr . '--'                                (rule 23)
	binary -> expr . '+' expr                           (rule 31)
	binary -> expr . '*' expr                           (rule 32)
	binary -> expr . '-' expr                           (rule 33)
	binary -> expr . '/' expr                           (rule 34)
	binary -> expr . '%' expr                           (rule 35)
	binary -> expr . '<<' expr                          (rule 36)
	binary -> expr . '>>' expr                          (rule 37)
	binary -> expr . '<' expr                           (rule 38)
	binary -> expr . '>' expr                           (rule 39)
	binary -> expr . '>=' expr                          (rule 40)
	binary -> expr . '<=' expr                          (rule 41)
	binary -> expr . '==' expr                          (rule 42)
	binary -> expr . '!=' expr                          (rule 43)
	binary -> expr . '&&' expr                          (rule 44)
	binary -> expr '&&' expr .                          (rule 44)
	binary -> expr . '||' expr                          (rule 45)
	binary -> expr . '^' expr                           (rule 46)
	binary -> expr . '&' expr                           (rule 47)
	binary -> expr . '|' expr                           (rule 48)
	ternary -> expr . '?' expr ':' expr                 (rule 49)
	ternary -> expr . '?' ':' expr                      (rule 50)

	else           reduce using rule 44
	'+'            shift, and enter state 77
	'-'            shift, and enter state 78
	'*'            shift, and enter state 79
	'/'            shift, and enter state 80
	'++'           shift, and enter state 81
	'--'           shift, and enter state 82
	'&&'           reduce using rule 44
	'||'           reduce using rule 44
	'%'            shift, and enter state 85
	'='            reduce using rule 44
	'=='           shift, and enter state 87
	'!='           shift, and enter state 88
	'<'            shift, and enter state 89
	'<='           shift, and enter state 90
	'>'            shift, and enter state 91
	'>='           shift, and enter state 92
	'&'            shift, and enter state 93
	'|'            shift, and enter state 94
	'('            shift, and enter state 95
	')'            reduce using rule 44
	'['            shift, and enter state 96
	']'            reduce using rule 44
	'.'            shift, and enter state 98
	':'            reduce using rule 44
	'->'           shift, and enter state 99
	'<<'           shift, and enter state 100
	'>>'           shift, and enter state 101
	'^'            shift, and enter state 102
	'?'            reduce using rule 44
	'*='           reduce using rule 44
	'/='           reduce using rule 44
	'%='           reduce using rule 44
	'+='           reduce using rule 44
	'-='           reduce using rule 44
	'<<='          reduce using rule 44
	'>>='          reduce using rule 44
	'&='           reduce using rule 44
	'|='           reduce using rule 44
	'^='           reduce using rule 44
	','            reduce using rule 44
	'}'            reduce using rule 44
	';'            reduce using rule 44


State 163

	assign -> expr . '=' expr                           (rule 2)
	assign -> expr . '*=' expr                          (rule 3)
	assign -> expr . '/=' expr                          (rule 4)
	assign -> expr . '%=' expr                          (rule 5)
	assign -> expr . '+=' expr                          (rule 6)
	assign -> expr . '-=' expr                          (rule 7)
	assign -> expr . '>>=' expr                         (rule 8)
	assign -> expr . '<<=' expr                         (rule 9)
	assign -> expr . '&=' expr                          (rule 10)
	assign -> expr . '^=' expr                          (rule 11)
	assign -> expr . '|=' expr                          (rule 12)
	member -> expr . '->' variable                      (rule 13)
	member -> expr . '.' variable                       (rule 14)
	call -> expr . '(' exprs ')'                        (rule 15)
	index -> expr . '[' expr ']'                        (rule 19)
	unary -> expr . '++'                                (rule 21)
	unary -> expr . '--'                                (rule 23)
	binary -> expr . '+' expr                           (rule 31)
	binary -> expr . '*' expr                           (rule 32)
	binary -> expr . '-' expr                           (rule 33)
	binary -> expr . '/' expr                           (rule 34)
	binary -> expr '/' expr .                           (rule 34)
	binary -> expr . '%' expr                           (rule 35)
	binary -> expr . '<<' expr                          (rule 36)
	binary -> expr . '>>' expr                          (rule 37)
	binary -> expr . '<' expr                           (rule 38)
	binary -> expr . '>' expr                           (rule 39)
	binary -> expr . '>=' expr                          (rule 40)
	binary -> expr . '<=' expr                          (rule 41)
	binary -> expr . '==' expr                          (rule 42)
	binary -> expr . '!=' expr                          (rule 43)
	binary -> expr . '&&' expr                          (rule 44)
	binary -> expr . '||' expr                          (rule 45)
	binary -> expr . '^' expr                           (rule 46)
	binary -> expr . '&' expr                           (rule 47)
	binary -> expr . '|' expr                           (rule 48)
	ternary -> expr . '?' expr ':' expr                 (rule 49)
	ternary -> expr . '?' ':' expr                      (rule 50)

	else           reduce using rule 34
	'+'            reduce using rule 34
	'-'            reduce using rule 34
	'*'            reduce using rule 34
	'/'            reduce using rule 34
	'++'           shift, and enter state 81
	'--'           shift, and enter state 82
	'&&'           reduce using rule 34
	'||'           reduce using rule 34
	'%'            reduce using rule 34
	'='            reduce using rule 34
	'=='           reduce using rule 34
	'!='           reduce using rule 34
	'<'            reduce using rule 34
	'<='           reduce using rule 34
	'>'            reduce using rule 34
	'>='           reduce using rule 34
	'&'            reduce using rule 34
	'|'            reduce using rule 34
	'('            shift, and enter state 95
	')'            reduce using rule 34
	'['            shift, and enter state 96
	']'            reduce using rule 34
	'.'            shift, and enter state 98
	':'            reduce using rule 34
	'->'           shift, and enter state 99
	'<<'           reduce using rule 34
	'>>'           reduce using rule 34
	'^'            reduce using rule 34
	'?'            reduce using rule 34
	'*='           reduce using rule 34
	'/='           reduce using rule 34
	'%='           reduce using rule 34
	'+='           reduce using rule 34
	'-='           reduce using rule 34
	'<<='          reduce using rule 34
	'>>='          reduce using rule 34
	'&='           reduce using rule 34
	'|='           reduce using rule 34
	'^='           reduce using rule 34
	','            reduce using rule 34
	'}'            reduce using rule 34
	';'            reduce using rule 34


State 164

	assign -> expr . '=' expr                           (rule 2)
	assign -> expr . '*=' expr                          (rule 3)
	assign -> expr . '/=' expr                          (rule 4)
	assign -> expr . '%=' expr                          (rule 5)
	assign -> expr . '+=' expr                          (rule 6)
	assign -> expr . '-=' expr                          (rule 7)
	assign -> expr . '>>=' expr                         (rule 8)
	assign -> expr . '<<=' expr                         (rule 9)
	assign -> expr . '&=' expr                          (rule 10)
	assign -> expr . '^=' expr                          (rule 11)
	assign -> expr . '|=' expr                          (rule 12)
	member -> expr . '->' variable                      (rule 13)
	member -> expr . '.' variable                       (rule 14)
	call -> expr . '(' exprs ')'                        (rule 15)
	index -> expr . '[' expr ']'                        (rule 19)
	unary -> expr . '++'                                (rule 21)
	unary -> expr . '--'                                (rule 23)
	binary -> expr . '+' expr                           (rule 31)
	binary -> expr . '*' expr                           (rule 32)
	binary -> expr '*' expr .                           (rule 32)
	binary -> expr . '-' expr                           (rule 33)
	binary -> expr . '/' expr                           (rule 34)
	binary -> expr . '%' expr                           (rule 35)
	binary -> expr . '<<' expr                          (rule 36)
	binary -> expr . '>>' expr                          (rule 37)
	binary -> expr . '<' expr                           (rule 38)
	binary -> expr . '>' expr                           (rule 39)
	binary -> expr . '>=' expr                          (rule 40)
	binary -> expr . '<=' expr                          (rule 41)
	binary -> expr . '==' expr                          (rule 42)
	binary -> expr . '!=' expr                          (rule 43)
	binary -> expr . '&&' expr                          (rule 44)
	binary -> expr . '||' expr                          (rule 45)
	binary -> expr . '^' expr                           (rule 46)
	binary -> expr . '&' expr                           (rule 47)
	binary -> expr . '|' expr                           (rule 48)
	ternary -> expr . '?' expr ':' expr                 (rule 49)
	ternary -> expr . '?' ':' expr                      (rule 50)

	else           reduce using rule 32
	'+'            reduce using rule 32
	'-'            reduce using rule 32
	'*'            reduce using rule 32
	'/'            reduce using rule 32
	'++'           shift, and enter state 81
	'--'           shift, and enter state 82
	'&&'           reduce using rule 32
	'||'           reduce using rule 32
	'%'            reduce using rule 32
	'='            reduce using rule 32
	'=='           reduce using rule 32
	'!='           reduce using rule 32
	'<'            reduce using rule 32
	'<='           reduce using rule 32
	'>'            reduce using rule 32
	'>='           reduce using rule 32
	'&'            reduce using rule 32
	'|'            reduce using rule 32
	'('            shift, and enter state 95
	')'            reduce using rule 32
	'['            shift, and enter state 96
	']'            reduce using rule 32
	'.'            shift, and enter state 98
	':'            reduce using rule 32
	'->'           shift, and enter state 99
	'<<'           reduce using rule 32
	'>>'           reduce using rule 32
	'^'            reduce using rule 32
	'?'            reduce using rule 32
	'*='           reduce using rule 32
	'/='           reduce using rule 32
	'%='           reduce using rule 32
	'+='           reduce using rule 32
	'-='           reduce using rule 32
	'<<='          reduce using rule 32
	'>>='          reduce using rule 32
	'&='           reduce using rule 32
	'|='           reduce using rule 32
	'^='           reduce using rule 32
	','            reduce using rule 32
	'}'            reduce using rule 32
	';'            reduce using rule 32


State 165

	assign -> expr . '=' expr                           (rule 2)
	assign -> expr . '*=' expr                          (rule 3)
	assign -> expr . '/=' expr                          (rule 4)
	assign -> expr . '%=' expr                          (rule 5)
	assign -> expr . '+=' expr                          (rule 6)
	assign -> expr . '-=' expr                          (rule 7)
	assign -> expr . '>>=' expr                         (rule 8)
	assign -> expr . '<<=' expr                         (rule 9)
	assign -> expr . '&=' expr                          (rule 10)
	assign -> expr . '^=' expr                          (rule 11)
	assign -> expr . '|=' expr                          (rule 12)
	member -> expr . '->' variable                      (rule 13)
	member -> expr . '.' variable                       (rule 14)
	call -> expr . '(' exprs ')'                        (rule 15)
	index -> expr . '[' expr ']'                        (rule 19)
	unary -> expr . '++'                                (rule 21)
	unary -> expr . '--'                                (rule 23)
	binary -> expr . '+' expr                           (rule 31)
	binary -> expr . '*' expr                           (rule 32)
	binary -> expr . '-' expr                           (rule 33)
	binary -> expr '-' expr .                           (rule 33)
	binary -> expr . '/' expr                           (rule 34)
	binary -> expr . '%' expr                           (rule 35)
	binary -> expr . '<<' expr                          (rule 36)
	binary -> expr . '>>' expr                          (rule 37)
	binary -> expr . '<' expr                           (rule 38)
	binary -> expr . '>' expr                           (rule 39)
	binary -> expr . '>=' expr                          (rule 40)
	binary -> expr . '<=' expr                          (rule 41)
	binary -> expr . '==' expr                          (rule 42)
	binary -> expr . '!=' expr                          (rule 43)
	binary -> expr . '&&' expr                          (rule 44)
	binary -> expr . '||' expr                          (rule 45)
	binary -> expr . '^' expr                           (rule 46)
	binary -> expr . '&' expr                           (rule 47)
	binary -> expr . '|' expr                           (rule 48)
	ternary -> expr . '?' expr ':' expr                 (rule 49)
	ternary -> expr . '?' ':' expr                      (rule 50)

	else           reduce using rule 33
	'+'            reduce using rule 33
	'-'            reduce using rule 33
	'*'            shift, and enter state 79
	'/'            shift, and enter state 80
	'++'           shift, and enter state 81
	'--'           shift, and enter state 82
	'&&'           reduce using rule 33
	'||'           reduce using rule 33
	'%'            shift, and enter state 85
	'='            reduce using rule 33
	'=='           reduce using rule 33
	'!='           reduce using rule 33
	'<'            reduce using rule 33
	'<='           reduce using rule 33
	'>'            reduce using rule 33
	'>='           reduce using rule 33
	'&'            reduce using rule 33
	'|'            reduce using rule 33
	'('            shift, and enter state 95
	')'            reduce using rule 33
	'['            shift, and enter state 96
	']'            reduce using rule 33
	'.'            shift, and enter state 98
	':'            reduce using rule 33
	'->'           shift, and enter state 99
	'<<'           reduce using rule 33
	'>>'           reduce using rule 33
	'^'            reduce using rule 33
	'?'            reduce using rule 33
	'*='           reduce using rule 33
	'/='           reduce using rule 33
	'%='           reduce using rule 33
	'+='           reduce using rule 33
	'-='           reduce using rule 33
	'<<='          reduce using rule 33
	'>>='          reduce using rule 33
	'&='           reduce using rule 33
	'|='           reduce using rule 33
	'^='           reduce using rule 33
	','            reduce using rule 33
	'}'            reduce using rule 33
	';'            reduce using rule 33


State 166

	assign -> expr . '=' expr                           (rule 2)
	assign -> expr . '*=' expr                          (rule 3)
	assign -> expr . '/=' expr                          (rule 4)
	assign -> expr . '%=' expr                          (rule 5)
	assign -> expr . '+=' expr                          (rule 6)
	assign -> expr . '-=' expr                          (rule 7)
	assign -> expr . '>>=' expr                         (rule 8)
	assign -> expr . '<<=' expr                         (rule 9)
	assign -> expr . '&=' expr                          (rule 10)
	assign -> expr . '^=' expr                          (rule 11)
	assign -> expr . '|=' expr                          (rule 12)
	member -> expr . '->' variable                      (rule 13)
	member -> expr . '.' variable                       (rule 14)
	call -> expr . '(' exprs ')'                        (rule 15)
	index -> expr . '[' expr ']'                        (rule 19)
	unary -> expr . '++'                                (rule 21)
	unary -> expr . '--'                                (rule 23)
	binary -> expr . '+' expr                           (rule 31)
	binary -> expr '+' expr .                           (rule 31)
	binary -> expr . '*' expr                           (rule 32)
	binary -> expr . '-' expr                           (rule 33)
	binary -> expr . '/' expr                           (rule 34)
	binary -> expr . '%' expr                           (rule 35)
	binary -> expr . '<<' expr                          (rule 36)
	binary -> expr . '>>' expr                          (rule 37)
	binary -> expr . '<' expr                           (rule 38)
	binary -> expr . '>' expr                           (rule 39)
	binary -> expr . '>=' expr                          (rule 40)
	binary -> expr . '<=' expr                          (rule 41)
	binary -> expr . '==' expr                          (rule 42)
	binary -> expr . '!=' expr                          (rule 43)
	binary -> expr . '&&' expr                          (rule 44)
	binary -> expr . '||' expr                          (rule 45)
	binary -> expr . '^' expr                           (rule 46)
	binary -> expr . '&' expr                           (rule 47)
	binary -> expr . '|' expr                           (rule 48)
	ternary -> expr . '?' expr ':' expr                 (rule 49)
	ternary -> expr . '?' ':' expr                      (rule 50)

	else           reduce using rule 31
	'+'            reduce using rule 31
	'-'            reduce using rule 31
	'*'            shift, and enter state 79
	'/'            shift, and enter state 80
	'++'           shift, and enter state 81
	'--'           shift, and enter state 82
	'&&'           reduce using rule 31
	'||'           reduce using rule 31
	'%'            shift, and enter state 85
	'='            reduce using rule 31
	'=='           reduce using rule 31
	'!='           reduce using rule 31
	'<'            reduce using rule 31
	'<='           reduce using rule 31
	'>'            reduce using rule 31
	'>='           reduce using rule 31
	'&'            reduce using rule 31
	'|'            reduce using rule 31
	'('            shift, and enter state 95
	')'            reduce using rule 31
	'['            shift, and enter state 96
	']'            reduce using rule 31
	'.'            shift, and enter state 98
	':'            reduce using rule 31
	'->'           shift, and enter state 99
	'<<'           reduce using rule 31
	'>>'           reduce using rule 31
	'^'            reduce using rule 31
	'?'            reduce using rule 31
	'*='           reduce using rule 31
	'/='           reduce using rule 31
	'%='           reduce using rule 31
	'+='           reduce using rule 31
	'-='           reduce using rule 31
	'<<='          reduce using rule 31
	'>>='          reduce using rule 31
	'&='           reduce using rule 31
	'|='           reduce using rule 31
	'^='           reduce using rule 31
	','            reduce using rule 31
	'}'            reduce using rule 31
	';'            reduce using rule 31


State 167

	call -> expr '(' exprs ')' .                        (rule 15)

	else           reduce using rule 15
	'+'            reduce using rule 15
	'-'            reduce using rule 15
	'*'            reduce using rule 15
	'/'            reduce using rule 15
	'++'           reduce using rule 15
	'--'           reduce using rule 15
	'&&'           reduce using rule 15
	'||'           reduce using rule 15
	'%'            reduce using rule 15
	'='            reduce using rule 15
	'=='           reduce using rule 15
	'!='           reduce using rule 15
	'<'            reduce using rule 15
	'<='           reduce using rule 15
	'>'            reduce using rule 15
	'>='           reduce using rule 15
	'&'            reduce using rule 15
	'|'            reduce using rule 15
	'('            reduce using rule 15
	')'            reduce using rule 15
	'['            reduce using rule 15
	']'            reduce using rule 15
	'.'            reduce using rule 15
	':'            reduce using rule 15
	'->'           reduce using rule 15
	'<<'           reduce using rule 15
	'>>'           reduce using rule 15
	'^'            reduce using rule 15
	'?'            reduce using rule 15
	'*='           reduce using rule 15
	'/='           reduce using rule 15
	'%='           reduce using rule 15
	'+='           reduce using rule 15
	'-='           reduce using rule 15
	'<<='          reduce using rule 15
	'>>='          reduce using rule 15
	'&='           reduce using rule 15
	'|='           reduce using rule 15
	'^='           reduce using rule 15
	','            reduce using rule 15
	'}'            reduce using rule 15
	';'            reduce using rule 15


State 168

	exprs -> exprs ',' . expr                           (rule 18)

	identifier     shift, and enter state 2
	integer_const  shift, and enter state 59
	float_const    shift, and enter state 60
	char_const     shift, and enter state 61
	sizeof         shift, and enter state 63
	'+'            shift, and enter state 64
	'-'            shift, and enter state 65
	'*'            shift, and enter state 66
	'++'           shift, and enter state 67
	'--'           shift, and enter state 68
	'!'            shift, and enter state 69
	'~'            shift, and enter state 70
	'&'            shift, and enter state 71
	'('            shift, and enter state 72

	variable       goto state 46
	assign         goto state 47
	member         goto state 48
	call           goto state 49
	index          goto state 50
	unary          goto state 51
	binary         goto state 52
	ternary        goto state 53
	expr           goto state 175

State 169

	index -> expr '[' expr ']' .                        (rule 19)

	else           reduce using rule 19
	'+'            reduce using rule 19
	'-'            reduce using rule 19
	'*'            reduce using rule 19
	'/'            reduce using rule 19
	'++'           reduce using rule 19
	'--'           reduce using rule 19
	'&&'           reduce using rule 19
	'||'           reduce using rule 19
	'%'            reduce using rule 19
	'='            reduce using rule 19
	'=='           reduce using rule 19
	'!='           reduce using rule 19
	'<'            reduce using rule 19
	'<='           reduce using rule 19
	'>'            reduce using rule 19
	'>='           reduce using rule 19
	'&'            reduce using rule 19
	'|'            reduce using rule 19
	'('            reduce using rule 19
	')'            reduce using rule 19
	'['            reduce using rule 19
	']'            reduce using rule 19
	'.'            reduce using rule 19
	':'            reduce using rule 19
	'->'           reduce using rule 19
	'<<'           reduce using rule 19
	'>>'           reduce using rule 19
	'^'            reduce using rule 19
	'?'            reduce using rule 19
	'*='           reduce using rule 19
	'/='           reduce using rule 19
	'%='           reduce using rule 19
	'+='           reduce using rule 19
	'-='           reduce using rule 19
	'<<='          reduce using rule 19
	'>>='          reduce using rule 19
	'&='           reduce using rule 19
	'|='           reduce using rule 19
	'^='           reduce using rule 19
	','            reduce using rule 19
	'}'            reduce using rule 19
	';'            reduce using rule 19


State 170

	assign -> expr . '=' expr                           (rule 2)
	assign -> expr . '*=' expr                          (rule 3)
	assign -> expr . '/=' expr                          (rule 4)
	assign -> expr . '%=' expr                          (rule 5)
	assign -> expr . '+=' expr                          (rule 6)
	assign -> expr . '-=' expr                          (rule 7)
	assign -> expr . '>>=' expr                         (rule 8)
	assign -> expr . '<<=' expr                         (rule 9)
	assign -> expr . '&=' expr                          (rule 10)
	assign -> expr . '^=' expr                          (rule 11)
	assign -> expr . '|=' expr                          (rule 12)
	member -> expr . '->' variable                      (rule 13)
	member -> expr . '.' variable                       (rule 14)
	call -> expr . '(' exprs ')'                        (rule 15)
	index -> expr . '[' expr ']'                        (rule 19)
	unary -> expr . '++'                                (rule 21)
	unary -> expr . '--'                                (rule 23)
	binary -> expr . '+' expr                           (rule 31)
	binary -> expr . '*' expr                           (rule 32)
	binary -> expr . '-' expr                           (rule 33)
	binary -> expr . '/' expr                           (rule 34)
	binary -> expr . '%' expr                           (rule 35)
	binary -> expr . '<<' expr                          (rule 36)
	binary -> expr . '>>' expr                          (rule 37)
	binary -> expr . '<' expr                           (rule 38)
	binary -> expr . '>' expr                           (rule 39)
	binary -> expr . '>=' expr                          (rule 40)
	binary -> expr . '<=' expr                          (rule 41)
	binary -> expr . '==' expr                          (rule 42)
	binary -> expr . '!=' expr                          (rule 43)
	binary -> expr . '&&' expr                          (rule 44)
	binary -> expr . '||' expr                          (rule 45)
	binary -> expr . '^' expr                           (rule 46)
	binary -> expr . '&' expr                           (rule 47)
	binary -> expr . '|' expr                           (rule 48)
	ternary -> expr . '?' expr ':' expr                 (rule 49)
	ternary -> expr . '?' ':' expr                      (rule 50)
	ternary -> expr '?' ':' expr .                      (rule 50)

	else           reduce using rule 50
	'+'            shift, and enter state 77
	'-'            shift, and enter state 78
	'*'            shift, and enter state 79
	'/'            shift, and enter state 80
	'++'           shift, and enter state 81
	'--'           shift, and enter state 82
	'&&'           shift, and enter state 83
	'||'           shift, and enter state 84
	'%'            shift, and enter state 85
	'='            reduce using rule 50
	'=='           shift, and enter state 87
	'!='           shift, and enter state 88
	'<'            shift, and enter state 89
	'<='           shift, and enter state 90
	'>'            shift, and enter state 91
	'>='           shift, and enter state 92
	'&'            shift, and enter state 93
	'|'            shift, and enter state 94
	'('            shift, and enter state 95
	')'            reduce using rule 50
	'['            shift, and enter state 96
	']'            reduce using rule 50
	'.'            shift, and enter state 98
	':'            reduce using rule 50
	'->'           shift, and enter state 99
	'<<'           shift, and enter state 100
	'>>'           shift, and enter state 101
	'^'            shift, and enter state 102
	'?'            shift, and enter state 103
	'*='           reduce using rule 50
	'/='           reduce using rule 50
	'%='           reduce using rule 50
	'+='           reduce using rule 50
	'-='           reduce using rule 50
	'<<='          reduce using rule 50
	'>>='          reduce using rule 50
	'&='           reduce using rule 50
	'|='           reduce using rule 50
	'^='           reduce using rule 50
	','            reduce using rule 50
	'}'            reduce using rule 50
	';'            reduce using rule 50


State 171

	ternary -> expr '?' expr ':' . expr                 (rule 49)

	identifier     shift, and enter state 2
	integer_const  shift, and enter state 59
	float_const    shift, and enter state 60
	char_const     shift, and enter state 61
	sizeof         shift, and enter state 63
	'+'            shift, and enter state 64
	'-'            shift, and enter state 65
	'*'            shift, and enter state 66
	'++'           shift, and enter state 67
	'--'           shift, and enter state 68
	'!'            shift, and enter state 69
	'~'            shift, and enter state 70
	'&'            shift, and enter state 71
	'('            shift, and enter state 72

	variable       goto state 46
	assign         goto state 47
	member         goto state 48
	call           goto state 49
	index          goto state 50
	unary          goto state 51
	binary         goto state 52
	ternary        goto state 53
	expr           goto state 174

State 172

	if_stmt -> if '(' expr ')' . stmt                   (rule 111)
	if_stmt -> if '(' expr ')' . stmt else stmt         (rule 112)

	identifier     shift, and enter state 2
	integer_const  shift, and enter state 59
	float_const    shift, and enter state 60
	char_const     shift, and enter state 61
	if             shift, and enter state 62
	sizeof         shift, and enter state 63
	'+'            shift, and enter state 64
	'-'            shift, and enter state 65
	'*'            shift, and enter state 66
	'++'           shift, and enter state 67
	'--'           shift, and enter state 68
	'!'            shift, and enter state 69
	'~'            shift, and enter state 70
	'&'            shift, and enter state 71
	'('            shift, and enter state 72
	'{'            shift, and enter state 44

	variable       goto state 46
	assign         goto state 47
	member         goto state 48
	call           goto state 49
	index          goto state 50
	unary          goto state 51
	binary         goto state 52
	ternary        goto state 53
	expr           goto state 54
	stmt           goto state 173
	block          goto state 56
	if_stmt        goto state 58

State 173

	if_stmt -> if '(' expr ')' stmt .                   (rule 111)
	if_stmt -> if '(' expr ')' stmt . else stmt         (rule 112)

	else           shift, and enter state 176
	'}'            reduce using rule 111
	';'            reduce using rule 111


State 174

	assign -> expr . '=' expr                           (rule 2)
	assign -> expr . '*=' expr                          (rule 3)
	assign -> expr . '/=' expr                          (rule 4)
	assign -> expr . '%=' expr                          (rule 5)
	assign -> expr . '+=' expr                          (rule 6)
	assign -> expr . '-=' expr                          (rule 7)
	assign -> expr . '>>=' expr                         (rule 8)
	assign -> expr . '<<=' expr                         (rule 9)
	assign -> expr . '&=' expr                          (rule 10)
	assign -> expr . '^=' expr                          (rule 11)
	assign -> expr . '|=' expr                          (rule 12)
	member -> expr . '->' variable                      (rule 13)
	member -> expr . '.' variable                       (rule 14)
	call -> expr . '(' exprs ')'                        (rule 15)
	index -> expr . '[' expr ']'                        (rule 19)
	unary -> expr . '++'                                (rule 21)
	unary -> expr . '--'                                (rule 23)
	binary -> expr . '+' expr                           (rule 31)
	binary -> expr . '*' expr                           (rule 32)
	binary -> expr . '-' expr                           (rule 33)
	binary -> expr . '/' expr                           (rule 34)
	binary -> expr . '%' expr                           (rule 35)
	binary -> expr . '<<' expr                          (rule 36)
	binary -> expr . '>>' expr                          (rule 37)
	binary -> expr . '<' expr                           (rule 38)
	binary -> expr . '>' expr                           (rule 39)
	binary -> expr . '>=' expr                          (rule 40)
	binary -> expr . '<=' expr                          (rule 41)
	binary -> expr . '==' expr                          (rule 42)
	binary -> expr . '!=' expr                          (rule 43)
	binary -> expr . '&&' expr                          (rule 44)
	binary -> expr . '||' expr                          (rule 45)
	binary -> expr . '^' expr                           (rule 46)
	binary -> expr . '&' expr                           (rule 47)
	binary -> expr . '|' expr                           (rule 48)
	ternary -> expr . '?' expr ':' expr                 (rule 49)
	ternary -> expr '?' expr ':' expr .                 (rule 49)
	ternary -> expr . '?' ':' expr                      (rule 50)

	else           reduce using rule 49
	'+'            shift, and enter state 77
	'-'            shift, and enter state 78
	'*'            shift, and enter state 79
	'/'            shift, and enter state 80
	'++'           shift, and enter state 81
	'--'           shift, and enter state 82
	'&&'           shift, and enter state 83
	'||'           shift, and enter state 84
	'%'            shift, and enter state 85
	'='            reduce using rule 49
	'=='           shift, and enter state 87
	'!='           shift, and enter state 88
	'<'            shift, and enter state 89
	'<='           shift, and enter state 90
	'>'            shift, and enter state 91
	'>='           shift, and enter state 92
	'&'            shift, and enter state 93
	'|'            shift, and enter state 94
	'('            shift, and enter state 95
	')'            reduce using rule 49
	'['            shift, and enter state 96
	']'            reduce using rule 49
	'.'            shift, and enter state 98
	':'            reduce using rule 49
	'->'           shift, and enter state 99
	'<<'           shift, and enter state 100
	'>>'           shift, and enter state 101
	'^'            shift, and enter state 102
	'?'            shift, and enter state 103
	'*='           reduce using rule 49
	'/='           reduce using rule 49
	'%='           reduce using rule 49
	'+='           reduce using rule 49
	'-='           reduce using rule 49
	'<<='          reduce using rule 49
	'>>='          reduce using rule 49
	'&='           reduce using rule 49
	'|='           reduce using rule 49
	'^='           reduce using rule 49
	','            reduce using rule 49
	'}'            reduce using rule 49
	';'            reduce using rule 49


State 175

	assign -> expr . '=' expr                           (rule 2)
	assign -> expr . '*=' expr                          (rule 3)
	assign -> expr . '/=' expr                          (rule 4)
	assign -> expr . '%=' expr                          (rule 5)
	assign -> expr . '+=' expr                          (rule 6)
	assign -> expr . '-=' expr                          (rule 7)
	assign -> expr . '>>=' expr                         (rule 8)
	assign -> expr . '<<=' expr                         (rule 9)
	assign -> expr . '&=' expr                          (rule 10)
	assign -> expr . '^=' expr                          (rule 11)
	assign -> expr . '|=' expr                          (rule 12)
	member -> expr . '->' variable                      (rule 13)
	member -> expr . '.' variable                       (rule 14)
	call -> expr . '(' exprs ')'                        (rule 15)
	exprs -> exprs ',' expr .                           (rule 18)
	index -> expr . '[' expr ']'                        (rule 19)
	unary -> expr . '++'                                (rule 21)
	unary -> expr . '--'                                (rule 23)
	binary -> expr . '+' expr                           (rule 31)
	binary -> expr . '*' expr                           (rule 32)
	binary -> expr . '-' expr                           (rule 33)
	binary -> expr . '/' expr                           (rule 34)
	binary -> expr . '%' expr                           (rule 35)
	binary -> expr . '<<' expr                          (rule 36)
	binary -> expr . '>>' expr                          (rule 37)
	binary -> expr . '<' expr                           (rule 38)
	binary -> expr . '>' expr                           (rule 39)
	binary -> expr . '>=' expr                          (rule 40)
	binary -> expr . '<=' expr                          (rule 41)
	binary -> expr . '==' expr                          (rule 42)
	binary -> expr . '!=' expr                          (rule 43)
	binary -> expr . '&&' expr                          (rule 44)
	binary -> expr . '||' expr                          (rule 45)
	binary -> expr . '^' expr                           (rule 46)
	binary -> expr . '&' expr                           (rule 47)
	binary -> expr . '|' expr                           (rule 48)
	ternary -> expr . '?' expr ':' expr                 (rule 49)
	ternary -> expr . '?' ':' expr                      (rule 50)

	'+'            shift, and enter state 77
	'-'            shift, and enter state 78
	'*'            shift, and enter state 79
	'/'            shift, and enter state 80
	'++'           shift, and enter state 81
	'--'           shift, and enter state 82
	'&&'           shift, and enter state 83
	'||'           shift, and enter state 84
	'%'            shift, and enter state 85
	'='            shift, and enter state 86
	'=='           shift, and enter state 87
	'!='           shift, and enter state 88
	'<'            shift, and enter state 89
	'<='           shift, and enter state 90
	'>'            shift, and enter state 91
	'>='           shift, and enter state 92
	'&'            shift, and enter state 93
	'|'            shift, and enter state 94
	'('            shift, and enter state 95
	')'            reduce using rule 18
	'['            shift, and enter state 96
	'.'            shift, and enter state 98
	'->'           shift, and enter state 99
	'<<'           shift, and enter state 100
	'>>'           shift, and enter state 101
	'^'            shift, and enter state 102
	'?'            shift, and enter state 103
	'*='           shift, and enter state 104
	'/='           shift, and enter state 105
	'%='           shift, and enter state 106
	'+='           shift, and enter state 107
	'-='           shift, and enter state 108
	'<<='          shift, and enter state 109
	'>>='          shift, and enter state 110
	'&='           shift, and enter state 111
	'|='           shift, and enter state 112
	'^='           shift, and enter state 113
	','            reduce using rule 18


State 176

	if_stmt -> if '(' expr ')' stmt else . stmt         (rule 112)

	identifier     shift, and enter state 2
	integer_const  shift, and enter state 59
	float_const    shift, and enter state 60
	char_const     shift, and enter state 61
	if             shift, and enter state 62
	sizeof         shift, and enter state 63
	'+'            shift, and enter state 64
	'-'            shift, and enter state 65
	'*'            shift, and enter state 66
	'++'           shift, and enter state 67
	'--'           shift, and enter state 68
	'!'            shift, and enter state 69
	'~'            shift, and enter state 70
	'&'            shift, and enter state 71
	'('            shift, and enter state 72
	'{'            shift, and enter state 44

	variable       goto state 46
	assign         goto state 47
	member         goto state 48
	call           goto state 49
	index          goto state 50
	unary          goto state 51
	binary         goto state 52
	ternary        goto state 53
	expr           goto state 54
	stmt           goto state 177
	block          goto state 56
	if_stmt        goto state 58

State 177

	if_stmt -> if '(' expr ')' stmt else stmt .         (rule 112)

	else           reduce using rule 112
	'}'            reduce using rule 112
	';'            reduce using rule 112


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 113
Number of terminals: 85
Number of non-terminals: 28
Number of states: 178
